<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>DevExpress.AspNetCore.Bootstrap.v18.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.AspNetCore">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ActivateTabPageAction">
      <summary>
        <para>Specifies which action forces a tab to be selected within a tab control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ActivateTabPageAction.Click">
      <summary>
        <para>A tab is activated by a mouse click (when a user releases the pressed button).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ActivateTabPageAction.MouseDown">
      <summary>
        <para>A tab is activated by a mouse down (when a user press the button).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ActivateTabPageAction.MouseOver">
      <summary>
        <para>A tab is activated by mouse hovering.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.AnimationType">
      <summary>
        <para>Lists values that specify the animation type used by a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AnimationType.Auto">
      <summary>
        <para>The type of animation is determined by the control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AnimationType.Fade">
      <summary>
        <para>A control uses a fade-in animation effect.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AnimationType.None">
      <summary>
        <para>A control does not use animation effects.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AnimationType.Slide">
      <summary>
        <para>A control uses a slide animation effect.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.AutoFilterCondition">
      <summary>
        <para>Lists values that specify the type of the comparison operator used to create filter conditions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.BeginsWith">
      <summary>
        <para>Selects records whose values in the corresponding colum begin with the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.Contains">
      <summary>
        <para>Selects records whose values in the corresponding colum contain the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.Default">
      <summary>
        <para>For the string columns and columns that are filtered by display text - the same as the BeginsWith value. For other columns - the Equals value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.DoesNotContain">
      <summary>
        <para>Selects records whose values in the corresponding colum don&#39;t contain the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.EndsWith">
      <summary>
        <para>Selects records whose values in the corresponding colum end with the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.Equals">
      <summary>
        <para>Selects records whose values in the corresponding column match the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.Greater">
      <summary>
        <para>Selects records whose values in the corresponding column are greater than the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.GreaterOrEqual">
      <summary>
        <para>Selects records whose values in the corresponding column are greater than or equal to the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.Less">
      <summary>
        <para>Selects records whose values in the corresponding column are less than the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.LessOrEqual">
      <summary>
        <para>Selects records whose values in the corresponding column are less than or equal to the entered value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.Like">
      <summary>
        <para>Selects records whose values in the corresponding column match the entered mask. Two wildcard symbols are supported: &#39;%&#39; substitutes zero or more characters; &#39;_&#39; substitutes a single character.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.AutoFilterCondition.NotEqual">
      <summary>
        <para>Selects records whose values in the corresponding column are not equal to the entered value.</para>
      </summary>
    </member>
    <member name="N:DevExpress.AspNetCore.Bootstrap">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AgendaDayHeaderOrientation">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaDayHeaderOrientation.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaDayHeaderOrientation.Horizontal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaDayHeaderOrientation.Vertical">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AgendaIconCellVisibility">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaIconCellVisibility.Always">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaIconCellVisibility.AnyIconShown">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AgendaResourceLocation">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaResourceLocation.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaResourceLocation.Bottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AgendaResourceLocation.Right">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="nameExpression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AppointmentMobileToolTipMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AppointmentMobileToolTipMode.Desktop">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AppointmentMobileToolTipMode.Mobile">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ArgumentAxisHoverMode">
      <summary>
        <para>Lists values that define chart elements to be highlighted when a user points to an axis label.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ArgumentAxisHoverMode.AllArgumentPoints">
      <summary>
        <para>All argument points are highlighted when a user points to an axis label.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ArgumentAxisHoverMode.None">
      <summary>
        <para>None of the argument points are highlighted when a user points to an axis label.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AspNetCoreBootstrapComboBoxClientJSPropertiesEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AutoHeightMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AutoHeightMode.FitToContent">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AutoHeightMode.LimitHeight">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AutoHeightMode.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AxisLabelDisplayMode">
      <summary>
        <para>Lists values that define an axis label&#39;s display mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisLabelDisplayMode.Rotate">
      <summary>
        <para>Rotates axis labels through the angle specified by the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.RotationAngle(System.Decimal)"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisLabelDisplayMode.Stagger">
      <summary>
        <para>Arranges axis labels in two rows in a staggering manner. An empty space between the rows is specified by the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.StaggeringSpacing(System.Int32)"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisLabelDisplayMode.Standard">
      <summary>
        <para>Does not change the default disposition of axis labels.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.AxisScaleType">
      <summary>
        <para>Lists values that define the type of a chart axis scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisScaleType.Auto">
      <summary>
        <para>The axis type is determined automatically depending on the type of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisScaleType.Continuous">
      <summary>
        <para>The axis displays numeric and date-time values using a continuous scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisScaleType.Discrete">
      <summary>
        <para>The axis displays discrete values (categories).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.AxisScaleType.Logarithmic">
      <summary>
        <para>The axis displays numeric values using a logarithmic scale.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BackwardCompatibilityOptions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BackwardCompatibilityOptions.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BackwardCompatibilityOptions.RemovePotentiallyDangerousNavigateUrlDefaultValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BackwardCompatibilityOptions.UseLegacyClientAPI">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for the BinaryImage.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientBinaryImage.BeginCallback"/> event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientBinaryImage.CallbackError"/> event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.Click(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientBinaryImage.Click"/> event.</para>
      </summary>
      <param name="click"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientBinaryImage.EndCallback"/> event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder">
      <summary>
        <para>Represents the web navigation bar control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.AllowExpanding(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the expansion state of the NavBar&#39;s groups can be changed via an end-user&#39;s interaction.</para>
      </summary>
      <param name="allowExpanding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.AllowSelectItem(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether items can be selected within NavBar.</para>
      </summary>
      <param name="allowSelectItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.AutoCollapse(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether only one group can be expanded at a time within the NavBar.</para>
      </summary>
      <param name="autoCollapse"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the NavBar.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of the NavBar on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.EnableAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a specific animation effect is used when expanding/collapsing groups.</para>
      </summary>
      <param name="enableAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.EnableCallbackAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a specific animation effect is used when a control&#39;s content is updated via a callback.</para>
      </summary>
      <param name="enableCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.EnableCallbackCompression(System.Boolean)">
      <summary>
        <para>Sets whether callback result compression is enabled.</para>
      </summary>
      <param name="enableCallbackCompression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the navbar control can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ExpandButtonPosition(DevExpress.AspNetCore.ExpandButtonPosition)">
      <summary>
        <para>Sets a value that specifies the position at which the expand button is displayed within all the groups of NavBar.</para>
      </summary>
      <param name="expandButtonPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ExpandGroupAction(DevExpress.AspNetCore.ExpandGroupAction)">
      <summary>
        <para>Sets a value that specifies which action forces a group to be expanded/collapsed within a nav bar control.</para>
      </summary>
      <param name="expandGroupAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupContentTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the client region&#39;s content of all groups within the navbar control.</para>
      </summary>
      <param name="groupContentTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupContentTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the client region&#39;s content of all groups within the navbar control.</para>
      </summary>
      <param name="groupContentTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupDataFields(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder})">
      <summary>
        <para>Provides access to properties allowing you to specify data fields (attributes of xml elements) from which group settings of a bound BootstrapAccordion should be obtained.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupHeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all group headers within the navbar control.</para>
      </summary>
      <param name="groupHeaderTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupHeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all group headers within the navbar control.</para>
      </summary>
      <param name="groupHeaderTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupHeaderTemplateCollapsed(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of the headers of all collapsed groups within the navbar control.</para>
      </summary>
      <param name="groupHeaderTemplateCollapsed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.GroupHeaderTemplateCollapsed(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of the headers of all collapsed groups within the navbar control.</para>
      </summary>
      <param name="groupHeaderTemplateCollapsed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.Groups(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupCollectionBuilder})">
      <summary>
        <para>The collection of groups in BootstrapAccordion.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ItemDataFields(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder})">
      <summary>
        <para>Provides access to properties allowing you to specify data fields (attributes of xml elements) from which item settings of a bound BootstrapAccordion should be obtained.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all items within the navbar control.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all items within the navbar control.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of all items within the navbar control.</para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of all items within the navbar control.</para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapAccordion,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.SaveStateToCookies(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether cookies are used to persist the expansion state of the NavBar&#39;s groups.</para>
      </summary>
      <param name="saveStateToCookies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.SaveStateToCookiesID(System.String)">
      <summary>
        <para>Sets the name (identifier) of the cookie in which the NavBar&#39;s state is persisted.</para>
      </summary>
      <param name="saveStateToCookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para>Provides access to the loading panel settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ShowExpandButtons(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether group expand buttons are displayed within the NavBar&#39;s group headers.</para>
      </summary>
      <param name="showExpandButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ShowGroupHeaders(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether group headers are displayed within NavBar.</para>
      </summary>
      <param name="showGroupHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.SyncSelectionMode(DevExpress.AspNetCore.SyncSelectionMode)">
      <summary>
        <para>Sets whether the NavBar&#39;s item, whose navigation location points to the currently browsed web page, is automatically selected.</para>
      </summary>
      <param name="syncSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URLs associated with links within NavBar.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder.GroupContent(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a group content container element.</para>
      </summary>
      <param name="groupContent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder.GroupHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the group header element.</para>
      </summary>
      <param name="groupHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder.IconCollapseGroup(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Collapse Group button.</para>
      </summary>
      <param name="iconCollapseGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder.IconExpandGroup(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Expand Group button.</para>
      </summary>
      <param name="iconExpandGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionCssClassesBuilder.Item(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an accordion item element.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder">
      <summary>
        <para>Represents an individual group within the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder"/> control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.AllowExpanding(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the group&#39;s expansion state can be changed via an end-user&#39;s interaction.</para>
      </summary>
      <param name="allowExpanding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the group&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ContentCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the accordion group&#39;s content container element.</para>
      </summary>
      <param name="contentCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ContentTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current group.</para>
      </summary>
      <param name="contentTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ContentTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current group.</para>
      </summary>
      <param name="contentTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the group is enabled, allowing the group to response to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ExpandButtonPosition(DevExpress.AspNetCore.ExpandButtonPosition)">
      <summary>
        <para>Sets a value that specifies the position at which the expand button is displayed within the group&#39;s header.</para>
      </summary>
      <param name="expandButtonPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Expanded(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether the group is expanded.</para>
      </summary>
      <param name="expanded"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderBadge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the accordion group&#39;s header.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an accordion group&#39;s header element.</para>
      </summary>
      <param name="headerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderCssClassCollapsed(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a collapsed accordion group&#39;s header element.</para>
      </summary>
      <param name="headerCssClassCollapsed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderIconCollapsedCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the image displayed within a collapsed accordion group&#39;s header.</para>
      </summary>
      <param name="headerIconCollapsedCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderIconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the image displayed within an accordion group&#39;s header.</para>
      </summary>
      <param name="headerIconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the group&#39;s header.</para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the group&#39;s header.</para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderTemplateCollapsed(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the group&#39;s header when the group is in a collapsed state.</para>
      </summary>
      <param name="headerTemplateCollapsed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.HeaderTemplateCollapsed(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the group&#39;s header when the group is in a collapsed state.</para>
      </summary>
      <param name="headerTemplateCollapsed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ItemCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the accordion group&#39;s items.</para>
      </summary>
      <param name="itemCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemCollectionBuilder})">
      <summary>
        <para>The collection of items within the group and provides indexed access to them.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the group&#39;s items.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the group&#39;s items.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the group&#39;s items.</para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the group&#39;s items.</para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the group.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ShowExpandButton(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value that specifies whether the expand button is displayed within the group&#39;s header.</para>
      </summary>
      <param name="showExpandButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the group&#39;s caption.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Text(System.String)">
      <summary>
        <para>Sets the group&#39;s caption (the text content of the group&#39;s header).</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the tooltip text for the group&#39;s header.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the group.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the group amongst the visible groups in the navbar control.</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupCollectionBuilder">
      <summary>
        <para>Represents a collection of groups within the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder"/>control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupCollectionBuilder.Add">
      <summary>
        <para>Adds a new group to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder">
      <summary>
        <para>Contains properties allowing you to specify data fields from which group settings of a bound <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder"/> should be obtained.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.HeaderIconCssClassField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) providing names of CSS classes that define images displayed within group headers.</para>
      </summary>
      <param name="headerIconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.NameField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides group unique identifier names.</para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.NavigateUrlField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides group navigation locations.</para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format navigate URLs of groups.</para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.TextField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides group texts.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format group texts.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupDataFieldsBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides group tooltip texts.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionGroupTemplateContainerSettings.Group">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder">
      <summary>
        <para>Represents an individual item within the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder"/> control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the accordion item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the item is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the group item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the item element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the item is enabled, allowing the item to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the accordion item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current item.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current item.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current item.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the item&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the text content of the item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the text content of the item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current item&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current item.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current item amongst the visible items in a group.</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemCollectionBuilder">
      <summary>
        <para>Represents a collection of items within a group.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemCollectionBuilder.Add">
      <summary>
        <para>Adds a new item to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder">
      <summary>
        <para>Contains properties allowing you to specify data fields from which item settings of a bound <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionBuilder"/> should be obtained.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.IconCssClassField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides CSS class names for images displayed within items.</para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.NameField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides item unique identifier names.</para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.NavigateUrlField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides item navigation locations.</para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the navigate URLs of items.</para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.TextField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides item texts.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format item texts.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemDataFieldsBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides item tooltip texts.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapAccordionItemTemplateContainerSettings.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.AppointmentAutoHeight(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentAutoHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.AppointmentHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.IconCellVisibility(DevExpress.AspNetCore.Bootstrap.AgendaIconCellVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCellVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.ResourceLocation(DevExpress.AspNetCore.Bootstrap.AgendaResourceLocation)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceLocation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.ShowLabel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.ShowRecurrence(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.ShowReminder(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showReminder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.ShowResource(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showResource"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.ShowTime(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showTime"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.StatusDisplayType(DevExpress.XtraScheduler.AppointmentStatusDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="statusDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder.SubjectBold(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="subjectBold"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.EndArrowIconCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="endArrowIconCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.IconCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.MainContentCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="mainContentCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.ResourceCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.StartArrowIconCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="startArrowIconCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.StatusCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="statusCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder.TimeCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeCell"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.AllowFixedDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowFixedDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.DayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.DayHeaderOrientation(DevExpress.AspNetCore.Bootstrap.AgendaDayHeaderOrientation)">
      <summary>
        <para></para>
      </summary>
      <param name="dayHeaderOrientation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.ScrollAreaHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="scrollAreaHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder.AppointmentRow(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewAppointmentRowCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder.EmptyCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="emptyCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder.HorizontalDateHeader(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewHorizontalDateHeaderCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder.TodayHorizontalDateHeader(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayHorizontalDateHeaderCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder.TodayVerticalDateHeader(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayVerticalDateHeaderCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewCssClassesBuilder.VerticalDateHeader(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewVerticalDateHeaderCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewHorizontalDateHeaderCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewHorizontalDateHeaderCssClassesBuilder.DateRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewHorizontalDateHeaderCssClassesBuilder.DayCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewHorizontalDateHeaderCssClassesBuilder.YearCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="yearCaption"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayHorizontalDateHeaderCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayHorizontalDateHeaderCssClassesBuilder.DateRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayHorizontalDateHeaderCssClassesBuilder.DayCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayHorizontalDateHeaderCssClassesBuilder.YearCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="yearCaption"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayVerticalDateHeaderCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayVerticalDateHeaderCssClassesBuilder.DateCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayVerticalDateHeaderCssClassesBuilder.DayCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayVerticalDateHeaderCssClassesBuilder.DayOfWeekCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayOfWeekCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewTodayVerticalDateHeaderCssClassesBuilder.MonthOfYearCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="monthOfYearCell"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewVerticalDateHeaderCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewVerticalDateHeaderCssClassesBuilder.DateCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewVerticalDateHeaderCssClassesBuilder.DayCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewVerticalDateHeaderCssClassesBuilder.DayOfWeekCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayOfWeekCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewVerticalDateHeaderCssClassesBuilder.MonthOfYearCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="monthOfYearCell"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder">
      <summary>
        <para>Contains settings specific to the button that when clicked, displays the content of all pages.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon to display within the button.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed in a pager button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format a pager button&#39;s text for display.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelBuilder.BackgroundCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="backgroundCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelBuilder.Id(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="id"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelBuilder.TextCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.AllDay``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="allDayExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.AppointmentId``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentIdExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Description``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="descriptionExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.End``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="endExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Label``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="labelExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Location``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="locationExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.OriginalOccurrenceEnd``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="originalOccurrenceEndExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.OriginalOccurrenceStart``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="originalOccurrenceStartExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.RecurrenceInfo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="recurrenceInfoExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.ReminderInfo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="reminderInfoExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.ResourceId``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="resourceIdExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Start``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="startExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Status``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="statusExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Subject``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="subjectExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.TimeZoneId``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="timeZoneIdExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="typeExpression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.AllDay(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="allDay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.AppointmentId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentId"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Description(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="description"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.End(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="end"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Label(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="label"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Location(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="location"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.OriginalOccurrenceEnd(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="originalOccurrenceEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.OriginalOccurrenceStart(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="originalOccurrenceStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.RecurrenceInfo(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="recurrenceInfo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.ReminderInfo(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="reminderInfo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.ResourceId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceId"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Start(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="start"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Status(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="status"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Subject(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.TimeZoneId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeZoneId"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilderBase`1.Type(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusBuilder.Id(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="id"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusBuilder.Type(DevExpress.XtraScheduler.AppointmentStatusType)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder.AddBusy">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder.AddFree">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder.AddOutOfOffice">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder.AddTentative">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder.AddWorkingElsewhere">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder.CustomFieldMappings(System.Action{DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder.Mappings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder`1.CustomFieldMappings(System.Action{DevExpress.AspNetCore.Bootstrap.AppointmentCustomFieldMappingCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder`1.Mappings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentMappingInfoBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilderBase`1.FilterExpression(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filterExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilderBase`1.Labels(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentLabelCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilderBase`1.ResourceSharing(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceSharing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilderBase`1.Statuses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStatusCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreaksCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreaksCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder.LineType(DevExpress.AspNetCore.Bootstrap.BreakLineType)">
      <summary>
        <para></para>
      </summary>
      <param name="lineType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder">
      <summary>
        <para>Contains settings specific to badges.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the badge element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the badge.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder.Text(System.String)">
      <summary>
        <para>Specifies the text displayed within the badge.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilder">
      <summary>
        <para>Represents an editor capable of displaying images from a binary stream.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapImageEditCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilder.Value(System.Object)">
      <summary>
        <para>Specifies the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.AlternateText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="alternateText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.DescriptionUrl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="descriptionUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.EmptyImageUrl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="emptyImageUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ImageAlign(DevExpress.AspNetCore.ImageAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="imageAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ImageSizeMode(DevExpress.AspNetCore.ImageSizeMode)">
      <summary>
        <para></para>
      </summary>
      <param name="imageSizeMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.LoadingImageUrl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="loadingImageUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ShowLoadingImage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showLoadingImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for the Binary Image.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageClientSideEventsBuilder.Click(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientBinaryImage.Click"/> event.</para>
      </summary>
      <param name="click"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a binary image editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.AlternateText(System.String)">
      <summary>
        <para>Sets the alternate text displayed instead of the image when the image is unavailable.</para>
      </summary>
      <param name="alternateText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.AlternateTextField(System.String)">
      <summary>
        <para>Sets the data source field that provides alternate texts to the image editor.</para>
      </summary>
      <param name="alternateTextField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.AlternateTextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the image&#39;s alternate text.</para>
      </summary>
      <param name="alternateTextFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BinaryImageClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the BinaryImage.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.DescriptionUrl(System.String)">
      <summary>
        <para>Sets the location of the image&#39;s detailed description.</para>
      </summary>
      <param name="descriptionUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.DescriptionUrlField(System.String)">
      <summary>
        <para>Sets the data source field which contains locations of image detailed descriptions.</para>
      </summary>
      <param name="descriptionUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.DescriptionUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the location of the image&#39;s detailed description.</para>
      </summary>
      <param name="descriptionUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ExportImageSettings(System.Action{DevExpress.AspNetCore.Bootstrap.ExportBinaryImageSettingsBuilder})">
      <summary>
        <para>Provides access to settings that are applied to an exported binary image.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageAlign(DevExpress.AspNetCore.ImageAlign)">
      <summary>
        <para>Sets the alignment of the image control in relation to the other items on the web page.</para>
      </summary>
      <param name="imageAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageHeight(System.Int32)">
      <summary>
        <para>Sets the height of the image displayed within the editor.</para>
      </summary>
      <param name="imageHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageHeight(System.String)">
      <summary>
        <para>Sets the height of the image displayed within the editor.</para>
      </summary>
      <param name="imageHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageSizeMode(DevExpress.AspNetCore.ImageSizeMode)">
      <summary>
        <para>Sets the value specifying how an image fits into the control sizes.</para>
      </summary>
      <param name="imageSizeMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the URL that points to the image displayed in the editor.</para>
      </summary>
      <param name="imageUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageWidth(System.Int32)">
      <summary>
        <para>Sets the width of the image displayed within the editor.</para>
      </summary>
      <param name="imageWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ImageWidth(System.String)">
      <summary>
        <para>Sets the width of the image displayed within the editor.</para>
      </summary>
      <param name="imageWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.LoadingImageUrl(System.String)">
      <summary>
        <para>Specifies a custom loading image.</para>
      </summary>
      <param name="loadingImageUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ShowLoadingImage(System.Boolean)">
      <summary>
        <para>Specifies whether the loading image is displayed while the main image is being loaded.</para>
      </summary>
      <param name="showLoadingImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the binary image tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field that provides the tooltip text for images.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder.ToolTipFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the image&#39;s tooltip text.</para>
      </summary>
      <param name="toolTipFormatString"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapBrowseButtonPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBrowseButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapBrowseButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores BootstrapButton&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBootstrapSpecificSettingsBuilder.RenderOption(DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption)">
      <summary>
        <para>Specifies a specific Bootstrap style that can be applied to the control.</para>
      </summary>
      <param name="renderOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBootstrapSpecificSettingsBuilder.Sizing(DevExpress.AspNetCore.Bootstrap.BootstrapSizing)">
      <summary>
        <para>Specifies the sizing mode of the Button elements.</para>
      </summary>
      <param name="sizing"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilder">
      <summary>
        <para>Represents the button control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.AllowFocus(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.Checked(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.GroupName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.Route(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonBuilderBase`1.UseSubmitBehavior(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useSubmitBehavior"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonCssClassesBuilder.Icon(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the button.</para>
      </summary>
      <param name="icon"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonCssClassesBuilder.Text(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the button text element.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilder">
      <summary>
        <para>Represents an edit control with embedded buttons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.MaskSettings(System.Action{DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.Password(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="password"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Clear button element.</para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Button Edit control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a button editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para>The collection of editor buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s Clear button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the ButtonEdit.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.MaskSettings(System.Action{DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder})">
      <summary>
        <para>The editor&#39;s mask settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para>Sets the maximum number of characters an end user can enter into the editor.</para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.Password(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the input is treated as a password and all characters entered into the editor are masked.</para>
      </summary>
      <param name="password"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings.ButtonIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilder">
      <summary>
        <para>Represents the calendar control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ChangeVisibleDateAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para></para>
      </summary>
      <param name="changeVisibleDateAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ClearButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.Columns(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="columns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.DayNameFormat(DevExpress.AspNetCore.DayNameFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="dayNameFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.EnableCallbackCompression(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCallbackCompression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.EnableChangeVisibleDateGestures(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="enableChangeVisibleDateGestures"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.EnableMonthNavigation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMonthNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.EnableMultiSelect(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMultiSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.EnableYearNavigation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableYearNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.FastNavProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.FirstDayOfWeek(DevExpress.AspNetCore.FirstDayOfWeek)">
      <summary>
        <para></para>
      </summary>
      <param name="firstDayOfWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.HighlightToday(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.HighlightWeekends(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightWeekends"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.MaxDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.MinDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.Rows(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="rows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.CalendarAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ShowClearButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ShowDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ShowHeader(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ShowTodayButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showTodayButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ShowWeekNumbers(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWeekNumbers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.TodayButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarBuilderBase`1.VisibleDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleDate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Day(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s day element.</para>
      </summary>
      <param name="day"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.DayDisabled(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s disabled day element.</para>
      </summary>
      <param name="dayDisabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.DayHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s day of the week header element.</para>
      </summary>
      <param name="dayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.DayOtherMonth(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar day that does not belong to the current month.</para>
      </summary>
      <param name="dayOtherMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.DayOutOfRange(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar day that does not belong the active date range.</para>
      </summary>
      <param name="dayOutOfRange"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.DaySelected(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s selected day element.</para>
      </summary>
      <param name="daySelected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.DayWeekEnd(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s weekend day element.</para>
      </summary>
      <param name="dayWeekEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.FastNavHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the area that allows a user to return back to the previous mode within the fast navigation area.</para>
      </summary>
      <param name="fastNavHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.FastNavigation(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s fast navigation panel element.</para>
      </summary>
      <param name="fastNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.FastNavItem(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the fast navigation area&#39;s item.</para>
      </summary>
      <param name="fastNavItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.FastNavItemOtherPeriod(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the fast navigation area&#39;s items that belong to the neighboring period.</para>
      </summary>
      <param name="fastNavItemOtherPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Footer(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s footer element.</para>
      </summary>
      <param name="footer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Header(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s header element.</para>
      </summary>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconFastNavBack(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Back fast navigation panel element.</para>
      </summary>
      <param name="iconFastNavBack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconFastNavNextPeriod(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Period fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavNextPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconFastNavNextYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Year fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconFastNavPrevPeriod(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Period fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavPrevPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconFastNavPrevYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Year fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconNextMonth(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Month button.</para>
      </summary>
      <param name="iconNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconNextYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Year button.</para>
      </summary>
      <param name="iconNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconPrevMonth(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Month button.</para>
      </summary>
      <param name="iconPrevMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.IconPrevYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Year button.</para>
      </summary>
      <param name="iconPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.MonthGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s grid element.</para>
      </summary>
      <param name="monthGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.Today(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s current day element.</para>
      </summary>
      <param name="today"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarCssClassesBuilder.WeekNumber(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s week number element.</para>
      </summary>
      <param name="weekNumber"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a calendar&#39;s fast navigation panel.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.CancelButtonText(System.String)">
      <summary>
        <para>Sets the text displayed within the Cancel button of the calendar&#39;s fast navigation panel.</para>
      </summary>
      <param name="cancelButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.DisplayMode(DevExpress.AspNetCore.FastNavigationDisplayMode)">
      <summary>
        <para>Sets the display mode of the calendar&#39;s fast navigation.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the calendar&#39;s fast navigation panel is enabled.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.EnableInlineAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a specific animation effect is used when using the calendar&#39;s fast navigation.</para>
      </summary>
      <param name="enableInlineAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.EnablePeriodNavigation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a user can navigate through periods within the calendar&#39;s fast navigation area.</para>
      </summary>
      <param name="enablePeriodNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.MinZoomLevel(DevExpress.AspNetCore.InlineFastNavigationZoomLevel)">
      <summary>
        <para>Sets a value specifying the size of a date range displayed within the calendar&#39;s fast navigation area.</para>
      </summary>
      <param name="minZoomLevel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.OkButtonText(System.String)">
      <summary>
        <para>Sets the text displayed within the Ok button of the calendar&#39;s fast navigation panel.</para>
      </summary>
      <param name="okButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder.ShowFastNavHeaderBackElement(System.Boolean)">
      <summary>
        <para>Specifies whether the back element used to return to the previous mode is displayed within the fast navigation area&#39;s header.</para>
      </summary>
      <param name="showFastNavHeaderBackElement"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCancelButtonPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCancelButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCancelButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCaptionPosition">
      <summary>
        <para>Lists values that define the position of an editor&#39;s caption.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCaptionPosition.After">
      <summary>
        <para>The caption is displayed after the editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCaptionPosition.Before">
      <summary>
        <para>The caption is displayed before the editor.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.AllowClientEventsOnLoad(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowClientEventsOnLoad"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.AllowFocusedCard(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowFocusedCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.AllowHeaderFilter(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowHeaderFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.AllowSelectByCardClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowSelectByCardClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.AllowSelectSingleCardOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowSelectSingleCardOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.AllowSort(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowSort"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.ConfirmDelete(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="confirmDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.EnableCardHotTrack(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCardHotTrack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.EncodeErrorHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeErrorHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.HeaderFilterMaxRowCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterMaxRowCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.ProcessFocusedCardChangedOnServer(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="processFocusedCardChangedOnServer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.ProcessSelectionChangedOnServer(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="processSelectionChangedOnServer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.SelectionStoringMode(DevExpress.AspNetCore.GridViewSelectionStoringMode)">
      <summary>
        <para></para>
      </summary>
      <param name="selectionStoringMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.SortMode(DevExpress.XtraGrid.ColumnSortMode)">
      <summary>
        <para></para>
      </summary>
      <param name="sortMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder.SummariesIgnoreNullValues(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="summariesIgnoreNullValues"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBinaryImageColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBinaryImageColumnBuilder.PropertiesBinaryImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBinaryImageColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBinaryImageColumnBuilder`1.PropertiesBinaryImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder.SettingsEditing(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.CardLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.FormatConditions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.KeyFieldName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
        <para></para>
      </summary>
      <param name="keyExpressions"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.SettingsEditing(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.Templates(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilder`1.TotalSummary(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1">
      <summary>
        <para>Serves as the base class that implements the main functionality of Card View.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.Bind(System.Object)">
      <summary>
        <para>Binds the control to the specified data source.</para>
      </summary>
      <param name="dataObject">An object representing the control&#39;s data source.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.BindToLINQ(System.Linq.IQueryable)">
      <summary>
        <para>Binds the Card View to a queryable data source in server mode.</para>
      </summary>
      <param name="query">An IQueryable object that specifies the query request to the data service.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.BindToXPO(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Establishes a server-mode data binding via DevExpress eXpress Persistent Objects for .NET (XPO) ORM.</para>
      </summary>
      <param name="session">A session that is used to load and save persistent objects.</param>
      <param name="objectType">The type of an object that describes the target dataset.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.BindToXPO``1(DevExpress.Xpo.XPQuery{``0})">
      <summary>
        <para>Establishes a server-mode data binding via DevExpress eXpress Persistent Objects for .NET (XPO) ORM.</para>
      </summary>
      <param name="query">An object of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class that specifies a query.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.CardLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder})">
      <summary>
        <para>Provides access to the Card View column collection.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder"/>&#39;s functionality.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.CssClassesEditor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.CssClassesFormLayout(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.CssClassesPager(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.EditErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.EnableCallbackAnimation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.EnableCallbackCompression(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCallbackCompression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.EnableCardsCache(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCardsCache"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.FormatConditions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.KeyFieldName(System.String)">
      <summary>
        <para>Sets the name of the data source key field.</para>
      </summary>
      <param name="keyFieldName">A string value that specifies the name of the data source key field.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.KeyFieldName(System.String[])">
      <summary>
        <para>Sets the names of the data source key fields.</para>
      </summary>
      <param name="keyFieldNames">A string array that specifies the key field names.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnBeforeHeaderFilterFillItems(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewBeforeHeaderFilterFillItemsEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnBeforeRender(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnCommandButtonInitialize(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCommandButtonEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnCustomColumnDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumnDisplayTextEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnCustomColumnSort(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCustomColumnSortEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnCustomJSProperties(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.ICustomJSPropertiesEventArgs})">
      <summary>
        <para>Enables you to supply any server data that can then be parsed on the client.</para>
      </summary>
      <param name="action">A <see cref="T:DevExpress.AspNetCore.ICustomJSPropertiesEventArgs"/> object allowing you to implement custom processing.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnCustomSummaryCalculate(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCustomSummaryEventArgs})">
      <summary>
        <para>Enables you to calculate summary values manually.</para>
      </summary>
      <param name="action">Contains data related to this event.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnCustomUnboundColumnData(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumnDataEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnDataBinding(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnHeaderFilterFillItems(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewHeaderFilterEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.OnSummaryDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapCardView,DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSummaryDisplayTextEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewRouteCollectionBuilder})">
      <summary>
        <para>Specifies a collection of routes for Card View updated or performing other Controller-side operations on demand.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.CardViewRouteCollectionBuilder"/>&#39;s functionality.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.Settings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsBehavior(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBehaviorSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsCommandButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsCookies(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsLayout(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsPager(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsPopup(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPopupControlSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsSearchPanel(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.SettingsText(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.Templates(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.Toolbars(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewBuilderBase`1.TotalSummary(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder})">
      <summary>
        <para>Provides access to total summary items.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder"/> class.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewButtonEditColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewButtonEditColumnBuilder.PropertiesButtonEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewButtonEditColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewButtonEditColumnBuilder`1.PropertiesButtonEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardBaseTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings`1.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings`1.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings`1.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCheckColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCheckColumnBuilder.PropertiesCheckEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCheckColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCheckColumnBuilder`1.PropertiesCheckEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditCardDeleting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditCardDeleting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditCardInserting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditCardInserting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditCardRecovering(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditCardRecovering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditCardValidating(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditCardValidating"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditChangesCanceling(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditChangesCanceling"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditChangesSaving(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditChangesSaving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditConfirmShowing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditConfirmShowing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditEndEditing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditEndEditing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditStartEditing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditStartEditing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BatchEditTemplateCellFocused(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditTemplateCellFocused"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.CardClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cardClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.CardDblClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cardDblClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.CardFocusing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cardFocusing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.ColumnSorting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.CustomButtonClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customButtonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.FocusedCardChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="focusedCardChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.FocusedCellChanging(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="focusedCellChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.SelectionChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="selectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewClientSideEventsBuilder.ToolbarItemClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarItemClick"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.DataItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="dataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.DataItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="dataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.EditItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="editItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.EditItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="editItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.ExportWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="exportWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.HeaderBadge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.HorizontalAlign(DevExpress.AspNetCore.HorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.Settings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.SettingsHeaderFilter(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.SortIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="sortIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.SortOrder(DevExpress.Data.ColumnSortOrder)">
      <summary>
        <para></para>
      </summary>
      <param name="sortOrder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.ToString">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.UnboundExpression(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="unboundExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.UnboundType(DevExpress.Data.UnboundColumnType)">
      <summary>
        <para></para>
      </summary>
      <param name="unboundType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`1.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`2.DataItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings{`1}})">
      <summary>
        <para></para>
      </summary>
      <param name="dataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBaseBuilder`2.EditItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings{`1}})">
      <summary>
        <para></para>
      </summary>
      <param name="editItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddBinaryImageColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddButtonEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddCheckColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddComboBoxColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddDateEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddDropDownEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddHyperLinkColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddImageColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddMemoColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddProgressBarColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddSpinEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddTagBoxColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddTextColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder.AddTimeEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddBinaryImageColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddButtonEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddCheckColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddComboBoxColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddDateEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddDropDownEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddHyperLinkColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddImageColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddMemoColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddProgressBarColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddSpinEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddTagBoxColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddTextColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCollectionBuilder`1.AddTimeEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnCssClassesBuilder.Header(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.ClearButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.EnableMonthNavigation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMonthNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.EnableMultiSelect(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMultiSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.EnableYearNavigation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableYearNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.FastNavProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.FirstDayOfWeek(DevExpress.AspNetCore.FirstDayOfWeek)">
      <summary>
        <para></para>
      </summary>
      <param name="firstDayOfWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.HighlightToday(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.HighlightWeekends(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightWeekends"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.MaxDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.MinDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.ShowClearButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.ShowDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.ShowTodayButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showTodayButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.ShowWeekNumbers(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWeekNumbers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder.TodayButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayButtonText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.CalendarColumnCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarColumnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.ClearButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.EditFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.FastNavProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.MaxDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.MaxDayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.MinDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.MinDayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minDayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder.TodayButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayButtonText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ColumnName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.RequiredMarkDisplayMode(DevExpress.AspNetCore.FieldRequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnLayoutItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder.AllowFilterBySearchPanel(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowFilterBySearchPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder.AllowHeaderFilter(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowHeaderFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder.AllowSort(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowSort"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder.FilterMode(DevExpress.AspNetCore.ColumnFilterMode)">
      <summary>
        <para></para>
      </summary>
      <param name="filterMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder.ShowEditorInBatchEditMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showEditorInBatchEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnSettingsBuilder.SortMode(DevExpress.XtraGrid.ColumnSortMode)">
      <summary>
        <para></para>
      </summary>
      <param name="sortMode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewComboBoxColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewComboBoxColumnBuilder.PropertiesComboBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewComboBoxColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewComboBoxColumnBuilder`1.PropertiesComboBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para></para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.CancelButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.DeleteButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.EditButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.NewButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.RecoverButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para></para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.SearchPanelApplyButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.SearchPanelClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.SelectButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonsSettingsBuilder.UpdateButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandButtonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ButtonRenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonRenderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.CustomButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.RequiredMarkDisplayMode(DevExpress.AspNetCore.FieldRequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ShowDeleteButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ShowEditButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showEditButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ShowNewButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showNewButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ShowRecoverButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRecoverButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ShowSelectButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showSelectButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.ShowSelectCheckbox(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showSelectCheckbox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCommandLayoutItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.CookiesID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.StoreFiltering(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.StorePaging(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storePaging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.StoreSearchPanelFiltering(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeSearchPanelFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.StoreSorting(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCookiesSettingsBuilder.Version(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="version"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.Card(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="card"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.CardFooter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cardFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.CardHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cardHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.CommandItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.Content(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="content"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.EditFormCard(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.EmptyCard(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="emptyCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.ErrorCard(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="errorCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.FocusedCard(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="focusedCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.Header(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.HeaderPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconErrorItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconErrorItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconHeaderFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconHeaderFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconHeaderSortDown(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconHeaderSortDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconHeaderSortUp(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconHeaderSortUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarCancel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarClearFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarClearFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarClearSorting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarClearSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarDelete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarNew(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarNew"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarRefresh(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarRefresh"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarShowCardFooter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarShowCardFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarShowCardHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarShowCardHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarShowHeaderPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarShowHeaderPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarShowSearchPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarShowSearchPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarShowSummaryPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarShowSummaryPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.IconToolbarUpdate(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconToolbarUpdate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.PanelBodyBottom(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="panelBodyBottom"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.PanelBodyTop(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="panelBodyTop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.PanelHeading(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="panelHeading"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.SelectedCard(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="selectedCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.SummaryItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="summaryItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCssClassesBuilder.SummaryPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="summaryPanel"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonBuilder.ID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iD"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCustomCommandButtonCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder.DateRangeCalendarSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangeCalendarSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder.DateRangePeriodsSettings(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder.DateRangePickerSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewColumnDateRangePickerSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder.ListBoxSearchUISettings(System.Action{DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataColumnHeaderFilterSettingsBuilder.Mode(DevExpress.AspNetCore.GridHeaderFilterMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings`1.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDateColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDateColumnBuilder.PropertiesDateEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDateColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDateColumnBuilder`1.PropertiesDateEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDropDownEditColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDropDownEditColumnBuilder.PropertiesDropDownEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDropDownEditColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDropDownEditColumnBuilder`1.PropertiesDropDownEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.AllowResize(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowResize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.CloseOnEscape(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="closeOnEscape"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.Height(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.Height(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.PopupHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.HorizontalOffset(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.MinHeight(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.MinWidth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.Modal(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="modal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.PopupAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para></para>
      </summary>
      <param name="popupAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.ResizingMode(DevExpress.AspNetCore.ResizingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="resizingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.ShowCloseButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showCloseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.ShowFooter(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.ShowPageScrollbarWhenModal(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPageScrollbarWhenModal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.ShowViewportScrollbarWhenModal(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showViewportScrollbarWhenModal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.VerticalAlign(DevExpress.AspNetCore.PopupVerticalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.VerticalOffset(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings.CancelAction">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings.UpdateAction">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings.ValidationGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings`1.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilder.FormLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilder`1.FormLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilderBase`1.BatchEditSettings(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilderBase`1.EditFormColumnSpan(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormColumnSpan"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilderBase`1.Mode(DevExpress.AspNetCore.CardViewEditingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditingSettingsBuilderBase`1.NewCardPosition(DevExpress.AspNetCore.GridViewNewItemRowPosition)">
      <summary>
        <para></para>
      </summary>
      <param name="newCardPosition"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings.ValidationGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings`1.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder.AddColorScale">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder.AddHighlight">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder.AddIconSet">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder.AddTopBottom">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder`1.AddColorScale``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder`1.AddHighlight``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder`1.AddIconSet``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormatConditionCollectionBuilder`1.AddTopBottom``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.AlignItemCaptionsInAllGroups(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="alignItemCaptionsInAllGroups"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.EncodeHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.LayoutType(DevExpress.AspNetCore.Bootstrap.FormLayoutType)">
      <summary>
        <para></para>
      </summary>
      <param name="layoutType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.OptionalMark(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="optionalMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.RequiredMark(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.RequiredMarkDisplayMode(DevExpress.AspNetCore.RequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewFormLayoutPropertiesBuilderBase`1.ShowItemCaptionColon(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showItemCaptionColon"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.CloseOnEscape(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="closeOnEscape"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.Height(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.Height(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.MinHeight(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.MinWidth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.PopupAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para></para>
      </summary>
      <param name="popupAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.ResizingMode(DevExpress.AspNetCore.ResizingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="resizingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.ShowCloseButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showCloseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderTemplateContainerSettings.HeaderLocation">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHyperLinkColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHyperLinkColumnBuilder.PropertiesHyperLinkEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHyperLinkColumnBuilder.ShowUrlAsDisplayText(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showUrlAsDisplayText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHyperLinkColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHyperLinkColumnBuilder`1.PropertiesHyperLinkEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHyperLinkColumnBuilder`1.ShowUrlAsDisplayText(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showUrlAsDisplayText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewImageColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewImageColumnBuilder.PropertiesImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewImageColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewImageColumnBuilder`1.PropertiesImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ColumnCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="columnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.Decoration(DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupDecoration)">
      <summary>
        <para></para>
      </summary>
      <param name="decoration"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutGroupBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder.AddCommandItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder.AddEditModeCommandItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder.AddGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder.AddTabbedGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder`1.AddGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder`1.AddTabbedGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder.CardColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cardColSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder.CardColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cardColSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder.CardColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cardColSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder.CardColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cardColSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutSettingsBuilder.CardColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cardColSpanXs"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder.Delay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder.ImagePosition(DevExpress.AspNetCore.ImagePosition)">
      <summary>
        <para></para>
      </summary>
      <param name="imagePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder.Mode(DevExpress.AspNetCore.GridViewLoadingPanelMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder.ShowImage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLoadingPanelSettingsBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewMemoColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewMemoColumnBuilder.PropertiesMemoEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewMemoColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewMemoColumnBuilder`1.PropertiesMemoEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerBarTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerBarTemplateContainerSettings.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerBarTemplateContainerSettings.Position">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.AllButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.AlwaysShowPager(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="alwaysShowPager"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.CurrentPageNumberFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="currentPageNumberFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.EllipsisMode(DevExpress.AspNetCore.PagerEllipsisMode)">
      <summary>
        <para></para>
      </summary>
      <param name="ellipsisMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.EnableAdaptivity(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableAdaptivity"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.EndlessPagingMode(DevExpress.AspNetCore.CardViewEndlessPagingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="endlessPagingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.FirstPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.ItemsPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="itemsPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.LastPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.Mode(DevExpress.AspNetCore.GridViewPagerMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.NextPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.NumericButtonCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="numericButtonCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.PageNumberFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageNumberFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.PageSizeItemSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.Position(DevExpress.AspNetCore.PagerPosition)">
      <summary>
        <para></para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.PrevPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.ShowDisabledButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDisabledButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.ShowEmptyCards(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showEmptyCards"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.ShowNumericButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showNumericButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.Summary(System.Action{DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder.AllItemText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="allItemText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder.Items(System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="items"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder.Position(DevExpress.AspNetCore.PagerPageSizePosition)">
      <summary>
        <para></para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder.ShowAllItem(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPageSizeItemSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPopupControlSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPopupControlSettingsBuilder.EditForm(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormPopupSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPopupControlSettingsBuilder.HeaderFilter(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderFilterPopupSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewProgressBarColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewProgressBarColumnBuilder.PropertiesProgressBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewProgressBarColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewProgressBarColumnBuilder`1.PropertiesProgressBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para></para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelCommandButtonSettingsBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.AllowTextInputTimer(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowTextInputTimer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.ColumnNames(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.CustomEditorID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customEditorID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.Delay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.EditorNullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="editorNullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.GroupOperator(DevExpress.AspNetCore.GridViewSearchPanelGroupOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="groupOperator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.HighlightResults(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightResults"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.ShowApplyButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showApplyButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.ShowClearButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSearchPanelSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowCardFooter(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showCardFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowCardHeader(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showCardHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowHeaderFilterBlankItems(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeaderFilterBlankItems"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowHeaderFilterButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeaderFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowHeaderFilterListBoxSearchUI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeaderFilterListBoxSearchUI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowHeaderPanel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeaderPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowStatusBar(DevExpress.AspNetCore.GridViewStatusBarMode)">
      <summary>
        <para></para>
      </summary>
      <param name="showStatusBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowSummaryPanel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showSummaryPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSettingsBuilder.ShowTitlePanel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showTitlePanel"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSpinEditColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSpinEditColumnBuilder.PropertiesSpinEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSpinEditColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSpinEditColumnBuilder`1.PropertiesSpinEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder.DisplayFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder.SummaryType(DevExpress.Data.SummaryItemType)">
      <summary>
        <para></para>
      </summary>
      <param name="summaryType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder.Tag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder.ValueDisplayFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueDisplayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewSummaryItemCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ActiveTabIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="activeTabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.SettingsTabPages(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.TabAlign(DevExpress.AspNetCore.TabAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="tabAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTabbedLayoutGroupBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTagBoxColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTagBoxColumnBuilder.PropertiesTagBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTagBoxColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTagBoxColumnBuilder`1.PropertiesTagBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.Card(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.Card(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.CardFooter(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.CardFooter(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.CardHeader(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.CardHeader(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.DataItem(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.DataItem(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.EditForm(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.EditForm(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.EditItem(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.EditItem(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.Header(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.Header(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewHeaderTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.HeaderPanel(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.PagerBar(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.PagerBar(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewPagerBarTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.StatusBar(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder.TitlePanel(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1.Card(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1.CardFooter(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardFooterTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1.CardHeader(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewCardHeaderTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1.DataItem(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewDataItemTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1.EditForm(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditFormTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTemplatesBuilder`1.EditItem(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewEditItemTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextColumnBuilder.PropertiesTextEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextColumnBuilder`1.PropertiesTextEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandApplySearchPanelFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandApplySearchPanelFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandBatchEditCancel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandBatchEditCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandBatchEditUpdate(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandBatchEditUpdate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandCancel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandClearSearchPanelFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandClearSearchPanelFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandDelete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandEndlessPagingShowMoreCards(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandEndlessPagingShowMoreCards"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandNew(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandNew"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandRecover(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandRecover"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandSelect(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.CommandUpdate(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commandUpdate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ConfirmDelete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="confirmDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ConfirmOnLosingBatchChanges(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="confirmOnLosingBatchChanges"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.EmptyCard(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="emptyCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterCancelButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterCancelButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterFrom(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterFrom"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterHeaderCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterHeaderCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterLastMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterLastMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterLastWeek(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterLastWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterLastYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterLastYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterNextMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterNextWeek(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterNextWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterNextYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterOkButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterOkButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterSelectAll(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterSelectAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterShowAll(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterShowAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterShowBlanks(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterShowBlanks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterShowNonBlanks(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterShowNonBlanks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterThisMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterThisMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterThisWeek(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterThisWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterThisYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterThisYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterTo(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterTo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterToday(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterTomorrow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterTomorrow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.HeaderFilterYesterday(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerFilterYesterday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.PopupEditFormCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="popupEditFormCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.PopupEditFormFooterText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="popupEditFormFooterText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.SearchPanelEditorNullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="searchPanelEditorNullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.Title(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="title"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarCancel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarClearFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarClearFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarClearSorting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarClearSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarDelete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarNew(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarNew"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarRefresh(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarRefresh"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarShowCardFooter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowCardFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarShowCardHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowCardHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarShowHeaderPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowHeaderPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarShowSearchPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowSearchPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarShowSummaryPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowSummaryPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTextSettingsBuilder.ToolbarUpdate(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarUpdate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTimeEditColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTimeEditColumnBuilder.PropertiesTimeEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTimeEditColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewTimeEditColumnBuilder`1.PropertiesTimeEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder.Position(DevExpress.AspNetCore.GridToolbarPosition)">
      <summary>
        <para></para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.Cancel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ClearFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ClearSorting">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.Delete">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.DeleteSelectedCardsOnPage">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.Edit">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ExportToCsv">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ExportToDocx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ExportToPdf">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ExportToRtf">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ExportToXls">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ExportToXlsx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.New">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.Refresh">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ShowCardFooter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ShowCardHeader">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ShowHeaderPanel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ShowSearchPanel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.ShowSummaryPanel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand.Update">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Checked(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Command(DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand)">
      <summary>
        <para></para>
      </summary>
      <param name="command"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.DisplayMode(DevExpress.AspNetCore.GridToolbarItemDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.DropDownMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.GroupName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Selected(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Target(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarItemCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Checked(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Command(DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarCommand)">
      <summary>
        <para></para>
      </summary>
      <param name="command"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.DisplayMode(DevExpress.AspNetCore.GridToolbarItemDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.GroupName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Selected(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Target(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCardViewToolbarMenuItemCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder.Height(System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder.KeepLabels(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="keepLabels"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder.Width(System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder.Method(DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod)">
      <summary>
        <para></para>
      </summary>
      <param name="method"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder.OnCalculate(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="onCalculate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder">
      <summary>
        <para>Stores  animation options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder.Duration(System.Int32)">
      <summary>
        <para>Specifies how long the animation runs in milliseconds.</para>
      </summary>
      <param name="duration"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder.Easing(DevExpress.AspNetCore.Bootstrap.VizAnimationEasing)">
      <summary>
        <para>Specifies the easing function of the animation.</para>
      </summary>
      <param name="easing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Enables the animation in the widget.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder.MaxPointCountSupported(System.Int32)">
      <summary>
        <para>Specifies how many series points the widget should have before the animation will be disabled.</para>
      </summary>
      <param name="maxPointCountSupported"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Area type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder">
      <summary>
        <para>Stores settings of the  control&#39;s argument axis.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.AggregationGroupWidth(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="aggregationGroupWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.AggregationInterval(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="aggregationInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.AggregationIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para></para>
      </summary>
      <param name="aggregationIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.ArgumentType(System.Type)">
      <summary>
        <para>Sets the type of argument values.</para>
      </summary>
      <param name="argumentType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.AxisDivisionFactor(System.Int32)">
      <summary>
        <para>Sets the minimum distance between two neighboring major ticks in pixels.</para>
      </summary>
      <param name="axisDivisionFactor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.BreaksCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreaksCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.BreakStyle(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Categories(System.String[])">
      <summary>
        <para>Specifies the order of categories on a axis of the discrete type.</para>
      </summary>
      <param name="categories"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.ConstantLineStyle(System.Action{DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.DiscreteAxisDivisionMode(DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode)">
      <summary>
        <para>Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the &quot;discrete&quot; type.</para>
      </summary>
      <param name="discreteAxisDivisionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.EndOnTick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="endOnTick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.GridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether grid lines are visible.</para>
      </summary>
      <param name="gridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Holidays(System.DateTime[])">
      <summary>
        <para></para>
      </summary>
      <param name="holidays"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.HoverMode(DevExpress.AspNetCore.Bootstrap.ArgumentAxisHoverMode)">
      <summary>
        <para>Sets a value that specifies chart elements to be highlighted when a user points to an axis label.</para>
      </summary>
      <param name="hoverMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Inverted(System.Boolean)">
      <summary>
        <para>Inverts the axis.</para>
      </summary>
      <param name="inverted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder})">
      <summary>
        <para>Provides access to the axis label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.LogarithmBase(System.Int32)">
      <summary>
        <para>Specifies the value to be raised to a power when generating ticks for an axis of the logarithmic type.</para>
      </summary>
      <param name="logarithmBase"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MaxValue(System.Object)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinValue(System.Object)"/> method, focuses the widget on a specific chart segment. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; type.</para>
      </summary>
      <param name="visualRangeEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MaxValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinorGridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether the minor grid is visible.</para>
      </summary>
      <param name="minorGridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinorTickCount(System.Int32)">
      <summary>
        <para>Specifies how many minor ticks to place between two neighboring major ticks.</para>
      </summary>
      <param name="minorTickCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinorTickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between minor ticks.</para>
      </summary>
      <param name="minorTickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinorTickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the minor tick interval.</para>
      </summary>
      <param name="minorTickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinorTickLength(System.Int32)">
      <summary>
        <para>Specifies the length of minor ticks in pixels.</para>
      </summary>
      <param name="minorTickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinorTickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether minor ticks are visible.</para>
      </summary>
      <param name="minorTickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinValue(System.Object)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MaxValue(System.Object)"/> option, focuses the widget on a specific chart segment. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; type.</para>
      </summary>
      <param name="visualRangeStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.MinValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Position(DevExpress.AspNetCore.Bootstrap.UIElementPosition)">
      <summary>
        <para>Specifies the position in which the argument axis is displayed.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.SingleWorkdays(System.DateTime[])">
      <summary>
        <para></para>
      </summary>
      <param name="singleWorkdays"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.TickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between axis ticks.</para>
      </summary>
      <param name="tickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.TickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the interval between axis ticks.</para>
      </summary>
      <param name="tickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.TickLength(System.Int32)">
      <summary>
        <para>Specifies the length of ticks in pixels.</para>
      </summary>
      <param name="tickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.TickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether ticks are visible.</para>
      </summary>
      <param name="tickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.TitleText(System.String)">
      <summary>
        <para>Specifies the text of the axis title.</para>
      </summary>
      <param name="titleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Type(DevExpress.AspNetCore.Bootstrap.AxisScaleType)">
      <summary>
        <para>Specifies the type of the axis.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.ValueMarginsEnabled(System.Boolean)">
      <summary>
        <para>Adds an empty space between the axis and the minimum and maximum series points.</para>
      </summary>
      <param name="valueMarginsEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies whether the axis line is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.VisualRangeEnd(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="visualRangeEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.VisualRangeLengthSettings(System.Action{DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.VisualRangeStart(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="visualRangeStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.VisualRangeUpdateMode(DevExpress.AspNetCore.Bootstrap.VisualRangeUpdateMode)">
      <summary>
        <para></para>
      </summary>
      <param name="visualRangeUpdateMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.WholeRangeEnd(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="wholeRangeEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.WholeRangeStart(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="wholeRangeStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.WorkdaysOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="workdaysOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder.WorkWeek(System.Double[])">
      <summary>
        <para></para>
      </summary>
      <param name="workWeekDays"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisBreakBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisBreakBuilder.EndValue(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="endValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisBreakBuilder.StartValue(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="startValue"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder">
      <summary>
        <para>Stores settings of a chart control&#39;s axis labels.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.DisplayMode(DevExpress.AspNetCore.Bootstrap.AxisLabelDisplayMode)">
      <summary>
        <para>Allows you to rotate or stagger axis labels. Applies to the horizontal axis only.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.Format(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para>Formats a value before it is displayed in an axis label.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.IndentFromAxis(System.Int32)">
      <summary>
        <para>Sets the size of indentation between an axis and its labels in pixels.</para>
      </summary>
      <param name="indentFromAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.OnClientCustomizeHint(System.String)">
      <summary>
        <para>Specifies the hint that appears when a user points to an axis label.</para>
      </summary>
      <param name="onClientCustomizeHint"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.OnClientCustomizeText(System.String)">
      <summary>
        <para>Customizes the text displayed by axis labels.</para>
      </summary>
      <param name="onClientCustomizeText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.OverlappingBehavior(DevExpress.AspNetCore.Bootstrap.OverlappingBehavior)">
      <summary>
        <para>Sets a value that specifies the overlap resolving algorithm to be applied to axis labels.</para>
      </summary>
      <param name="overlappingBehavior"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.RotationAngle(System.Decimal)">
      <summary>
        <para>Specifies the angle of rotation applied to axis labels when using the Rotate overlap resolving algorithm.</para>
      </summary>
      <param name="rotationAngle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.StaggeringSpacing(System.Int32)">
      <summary>
        <para>Specifies the spacing between staggered rows when using the Stagger overlap resolving algorithm.</para>
      </summary>
      <param name="staggeringSpacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the visibility of axis labels.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.BreakStyle(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.ConstantLineStyle(System.Action{DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.DiscreteAxisDivisionMode(DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="discreteAxisDivisionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.GridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="gridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.Inverted(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="inverted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.LogarithmBase(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="logarithmBase"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MaxValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinorGridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="minorGridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinorTickCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinorTickInterval(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinorTickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinorTickLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinorTickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.MinValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.TickInterval(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="tickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.TickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para></para>
      </summary>
      <param name="tickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.TickLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="tickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.TickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="tickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.Type(DevExpress.AspNetCore.Bootstrap.AxisScaleType)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.ValueMarginsEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="valueMarginsEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder">
      <summary>
        <para>Stores settings for series of the Bar type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.BarPadding(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="barPadding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.BarWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="barWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.CornerRadius(System.Int32)">
      <summary>
        <para>Makes bar series look rounded.</para>
      </summary>
      <param name="cornerRadius"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal possible height (or length if the chart is rotated) of a bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBarSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Bubble type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.SizeField(System.String)">
      <summary>
        <para>Specifies which data source field provides size values for bubbles.</para>
      </summary>
      <param name="sizeField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBubbleSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder">
      <summary>
        <para>A chart control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.AccessibleDescription(System.String)">
      <summary>
        <para>Sets the description of the widget intended for accessibility client applications.</para>
      </summary>
      <param name="accessibleDescription"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.AdjustOnZoom(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="adjustOnZoom"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ArgumentAxis(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartArgumentAxisBuilder})">
      <summary>
        <para>Specifies argument axis options for the Chart control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.BarWidth(System.Decimal)">
      <summary>
        <para>Specifies a common bar width as a percentage from 0 to 1.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.Bind(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder"/>.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.CrosshairEnabled(System.Boolean)">
      <summary>
        <para>Specifies whether or not to display the .</para>
      </summary>
      <param name="crosshairEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.CrosshairLabelVisible(System.Boolean)">
      <summary>
        <para>Makes the crosshair labels visible. Applies only if the crosshair feature is enabled using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.CrosshairEnabled(System.Boolean)"/> method.</para>
      </summary>
      <param name="crosshairLabelVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the Chart control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.CustomPalette(System.Drawing.Color[])">
      <summary>
        <para>Specifies a custom color palette used by the widget.</para>
      </summary>
      <param name="customPalette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.CustomPalette(System.String)">
      <summary>
        <para>Specifies a custom color palette used by the widget.</para>
      </summary>
      <param name="customPalette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.DefaultPane(System.String)">
      <summary>
        <para>Specifies the default pane for the chart series.</para>
      </summary>
      <param name="defaultPane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.EqualBarWidth(System.Boolean)">
      <summary>
        <para>Specifies whether all bars in a series must have the same width, or may have different widths if any points in other series are missing.</para>
      </summary>
      <param name="equalBarWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.LoadingIndicatorText(System.String)">
      <summary>
        <para>Sets the text displayed by the loading indicator.</para>
      </summary>
      <param name="loadingIndicatorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.MaxBubbleSize(System.Decimal)">
      <summary>
        <para>Specifies a coefficient determining the diameter of the largest bubble in a bubble series.</para>
      </summary>
      <param name="maxBubbleSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.MinBubbleSize(System.Decimal)">
      <summary>
        <para>Specifies the diameter of the smallest bubble in a bubble series measured in pixels.</para>
      </summary>
      <param name="minBubbleSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.NegativesAsZeroes(System.Boolean)">
      <summary>
        <para>Forces the chart to treat negative values as zeroes.</para>
      </summary>
      <param name="negativesAsZeroes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.OnClientCustomizeLabel(System.String)">
      <summary>
        <para>Customizes the appearance of an individual point label on the client side.</para>
      </summary>
      <param name="onClientCustomizeLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.OnClientCustomizePoint(System.String)">
      <summary>
        <para>Customizes the appearance of an individual series point on the client side.</para>
      </summary>
      <param name="onClientCustomizePoint"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.Palette(DevExpress.AspNetCore.Bootstrap.VizPalette)">
      <summary>
        <para>Specifies the predefined DevExtreme palette used by the widget.</para>
      </summary>
      <param name="palette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.PaletteExtensionMode(DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="paletteExtensionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.Panes(System.String[])">
      <summary>
        <para>Defines the  control&#39;s panes.</para>
      </summary>
      <param name="panes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.PathModified(System.Boolean)">
      <summary>
        <para>Notifies the widget that it is embedded into an HTML page that uses a tag to modify the path.</para>
      </summary>
      <param name="pathModified"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.PointSelectionMode(DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode)">
      <summary>
        <para>Specifies whether a single point or multiple points can be selected in the chart.</para>
      </summary>
      <param name="pointSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ResolveLabelOverlapping(DevExpress.AspNetCore.Bootstrap.ChartResolveLabelOverlapping)">
      <summary>
        <para>Specifies how the chart must behave when series point labels overlap.</para>
      </summary>
      <param name="resolveLabelOverlapping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.RightToLeft(System.Nullable{System.Boolean})">
      <summary>
        <para>Gets or sets a value specifying whether or not the current control supports right-to-left representation.</para>
      </summary>
      <param name="rightToLeft"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.Rotated(System.Boolean)">
      <summary>
        <para>Sets a value that defines whether to swap chart axes.</para>
      </summary>
      <param name="rotated"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ScrollingMode(DevExpress.AspNetCore.Bootstrap.ChartPointerType)">
      <summary>
        <para>Enables a scrolling capability in a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder"/> and specifies a pointer type used for scrolling.</para>
      </summary>
      <param name="scrollingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SeriesCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder})">
      <summary>
        <para>Specifies options for Chart widget series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SeriesSelectionMode(DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode)">
      <summary>
        <para>Specifies whether a single series or multiple series can be selected in the chart.</para>
      </summary>
      <param name="seriesSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsAnimation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s animation settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsCommonAxis(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisSettingsBaseBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsCommonSeries(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder})">
      <summary>
        <para>Provides access to settings applied to all series displayed by the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsDataPrepare(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartDataPrepareSettingsBuilder})">
      <summary>
        <para>Provides access to settings that determine how the chart manages data from a data source.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsExport(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder})">
      <summary>
        <para>Provides access to the widget&#39;s export settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsLegend(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s legend settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsScrollBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartScrollBarSettingsBuilder})">
      <summary>
        <para>Provides access to the Chart&#39;s scroll bar settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsSeriesTemplate(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesTemplateSettingsBuilder})">
      <summary>
        <para>Provides access to the chart&#39;s series template settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SettingsToolTip(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s tooltip settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ShowLoadingIndicator(System.Boolean)">
      <summary>
        <para>Specifies whether or not to display a loading indicator when obtaining data from a remote data source.</para>
      </summary>
      <param name="showLoadingIndicator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SubtitleText(System.String)">
      <summary>
        <para>Sets the widget&#39;s subtitle.</para>
      </summary>
      <param name="subtitleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.SynchronizeMultiAxes(System.Boolean)">
      <summary>
        <para>Indicates whether to synchronize value axes when they are displayed on a single pane.</para>
      </summary>
      <param name="synchronizeMultiAxes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.TitleText(System.String)">
      <summary>
        <para>Sets the widget&#39;s title.</para>
      </summary>
      <param name="titleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.UseAggregation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useAggregation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ValueAxisCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisCollectionBuilder})">
      <summary>
        <para>Provides access to a collection of the Chart control&#39;s value axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder.ZoomingMode(DevExpress.AspNetCore.Bootstrap.ChartPointerType)">
      <summary>
        <para>Enables zooming capability in a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder"/> and specifies a pointer type used for zooming.</para>
      </summary>
      <param name="zoomingMode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Candlestick type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.CloseValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides close values for points of a financial series.</para>
      </summary>
      <param name="closeValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.HighValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides high values for points of a financial series.</para>
      </summary>
      <param name="highValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.LowValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides low values for points of a financial series.</para>
      </summary>
      <param name="lowValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.OpenValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides open values for points of a financial series.</para>
      </summary>
      <param name="openValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.ReductionLevel(DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel)">
      <summary>
        <para>Specifies whether high, low, open or close prices of points should be compared.</para>
      </summary>
      <param name="reductionLevel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCandleStickSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder">
      <summary>
        <para>Serves as the base class for classes containing client-side event handlers for chart controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.Disposing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Disposing"/> event.</para>
      </summary>
      <param name="disposing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.Done(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.Done"/> event.</para>
      </summary>
      <param name="done"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.Drawn(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Drawn"/> event.</para>
      </summary>
      <param name="drawn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.Exported(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Exported"/> event.</para>
      </summary>
      <param name="exported"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.Exporting(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Exporting"/> event.</para>
      </summary>
      <param name="exporting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.FileSaving(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.FileSaving"/> event.</para>
      </summary>
      <param name="fileSaving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.IncidentOccurred(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.IncidentOccurred"/> event.</para>
      </summary>
      <param name="incidentOccurred"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.LegendClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.LegendClick"/> event.</para>
      </summary>
      <param name="legendClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.PointClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointClick"/> event.</para>
      </summary>
      <param name="pointClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.PointHoverChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointHoverChanged"/> event.</para>
      </summary>
      <param name="pointHoverChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.PointSelectionChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointSelectionChanged"/> event.</para>
      </summary>
      <param name="pointSelectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.TooltipHidden(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.TooltipHidden"/> event.</para>
      </summary>
      <param name="tooltipHidden"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder.TooltipShown(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.TooltipShown"/> event.</para>
      </summary>
      <param name="tooltipShown"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartBuilder"/> control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.ArgumentAxisClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.ArgumentAxisClick"/> event.</para>
      </summary>
      <param name="argumentAxisClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.Disposing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Disposing"/> event.</para>
      </summary>
      <param name="disposing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.Done(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.Done"/> event.</para>
      </summary>
      <param name="done"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.Drawn(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Drawn"/> event.</para>
      </summary>
      <param name="drawn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.Exported(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Exported"/> event.</para>
      </summary>
      <param name="exported"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.Exporting(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Exporting"/> event.</para>
      </summary>
      <param name="exporting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.FileSaving(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.FileSaving"/> event.</para>
      </summary>
      <param name="fileSaving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.IncidentOccurred(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.IncidentOccurred"/> event.</para>
      </summary>
      <param name="incidentOccurred"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.LegendClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.LegendClick"/> event.</para>
      </summary>
      <param name="legendClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.PointClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointClick"/> event.</para>
      </summary>
      <param name="pointClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.PointHoverChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointHoverChanged"/> event.</para>
      </summary>
      <param name="pointHoverChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.PointSelectionChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointSelectionChanged"/> event.</para>
      </summary>
      <param name="pointSelectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.SeriesClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.SeriesClick"/> event.</para>
      </summary>
      <param name="seriesClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.SeriesHoverChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.SeriesHoverChanged"/> event.</para>
      </summary>
      <param name="seriesHoverChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.SeriesSelectionChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.SeriesSelectionChanged"/> event.</para>
      </summary>
      <param name="seriesSelectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.TooltipHidden(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.TooltipHidden"/> event.</para>
      </summary>
      <param name="tooltipHidden"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.TooltipShown(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.TooltipShown"/> event.</para>
      </summary>
      <param name="tooltipShown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.ZoomEnd(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChart.ZoomEnd"/> event.</para>
      </summary>
      <param name="zoomEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBuilder.ZoomStart(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChart.ZoomStart"/> event.</para>
      </summary>
      <param name="zoomStart"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder">
      <summary>
        <para>Stores settings common for all axes of a chart control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.DiscreteAxisDivisionMode(DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode)">
      <summary>
        <para>Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the &quot;discrete&quot; type.</para>
      </summary>
      <param name="discreteAxisDivisionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.GridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether grid lines are visible.</para>
      </summary>
      <param name="gridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.Inverted(System.Boolean)">
      <summary>
        <para>Inverts the axis.</para>
      </summary>
      <param name="inverted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.LogarithmBase(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="logarithmBase"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MaxValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinorGridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether the minor grid is visible.</para>
      </summary>
      <param name="minorGridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinorTickCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinorTickInterval(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinorTickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para></para>
      </summary>
      <param name="minorTickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinorTickLength(System.Int32)">
      <summary>
        <para>Specifies the length of minor ticks in pixels.</para>
      </summary>
      <param name="minorTickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinorTickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether minor ticks are visible.</para>
      </summary>
      <param name="minorTickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.MinValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.TickInterval(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="tickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.TickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para></para>
      </summary>
      <param name="tickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.TickLength(System.Int32)">
      <summary>
        <para>Specifies the length of ticks in pixels.</para>
      </summary>
      <param name="tickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.TickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether ticks are visible.</para>
      </summary>
      <param name="tickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.Type(DevExpress.AspNetCore.Bootstrap.AxisScaleType)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.ValueMarginsEnabled(System.Boolean)">
      <summary>
        <para>Adds an empty space between the axis and the minimum and maximum series points.</para>
      </summary>
      <param name="valueMarginsEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies whether the axis line is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder">
      <summary>
        <para>Specifies settings common for all series in the .</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.CloseValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides close values for points of a financial series.</para>
      </summary>
      <param name="closeValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.CornerRadius(System.Int32)">
      <summary>
        <para>Makes bars look rounded. Applies only to bar-like series.</para>
      </summary>
      <param name="cornerRadius"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.HighValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides high values for points of a financial series.</para>
      </summary>
      <param name="highValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.LowValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides low values for points of a financial series.</para>
      </summary>
      <param name="lowValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal possible height (or length if the chart is rotated) of a bar in pixels. Applies only to bar-like series.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.OpenValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides open values for points of a financial series.</para>
      </summary>
      <param name="openValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in scatter, line and area-like series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.RangeValue1Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.RangeValue2Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue1Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.RangeValue2Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.RangeValue1Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue2Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.ReductionLevel(DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel)">
      <summary>
        <para>Specifies reduction options for financial series: whether high, low, open or close prices of points should be compared.</para>
      </summary>
      <param name="reductionLevel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.SizeField(System.String)">
      <summary>
        <para>Specifies which data source field provides size values for bubbles. Required by and applies only to bubble series.</para>
      </summary>
      <param name="sizeField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies which stack the series should belongs to. Applies only to stacked bar and full-stacked bar series.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Type(DevExpress.AspNetCore.Bootstrap.SeriesType)">
      <summary>
        <para>Sets the series type.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder">
      <summary>
        <para>Stores settings of a  constant line.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the constant line element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.DashStyle(DevExpress.AspNetCore.Bootstrap.DashStyle)">
      <summary>
        <para></para>
      </summary>
      <param name="dashStyle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.LabelText(System.String)">
      <summary>
        <para>Specifies the text of a constant line label. By default, equals to the value of the constant line.</para>
      </summary>
      <param name="labelText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.LabelVisible(System.Boolean)">
      <summary>
        <para>Specifies whether constant line labels are visible.</para>
      </summary>
      <param name="labelVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.PaddingLeftRight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="padding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.PaddingTopBottom(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="padding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.Value(System.Object)">
      <summary>
        <para>Specifies the value indicated by a constant line. Setting this option is required.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineCollectionBuilder">
      <summary>
        <para>A collection of  constant lines.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineCollectionBuilder.Add">
      <summary>
        <para>Adds a new constant line to the collection and specifies its value and label text.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder.Font(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder.HorizontalAlignment(DevExpress.AspNetCore.Bootstrap.ConstantiLineHorizontalAlignment)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlignment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.RelativePosition)">
      <summary>
        <para></para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder.VerticalAlignment(DevExpress.AspNetCore.Bootstrap.ConstantiLineVerticalAlignment)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalAlignment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder">
      <summary>
        <para>Serves as a base for classes storing CSS settings of chart controls included into the DevExpress Bootstrap Controls suite.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.IconExportButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Export button.</para>
      </summary>
      <param name="iconExportButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.LegendMarkers(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="legendMarkers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.LegendRect(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the legend element.</para>
      </summary>
      <param name="legendRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.LegendText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend text element.</para>
      </summary>
      <param name="legendText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.LoadingIndicatorRect(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the loading indicator element.</para>
      </summary>
      <param name="loadingIndicatorRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.LoadingIndicatorText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the loading indicator text element.</para>
      </summary>
      <param name="loadingIndicatorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.Subtitle(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the widsubtitle element.</para>
      </summary>
      <param name="subtitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.Title(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the widtitle element.</para>
      </summary>
      <param name="title"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.TooltipCloud(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a tooltip popup element.</para>
      </summary>
      <param name="tooltipCloud"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder.TooltipText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a tooltip text element.</para>
      </summary>
      <param name="tooltipText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the Chart control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxis(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis element.</para>
      </summary>
      <param name="argumentAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisConstantLine(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis constant line element.</para>
      </summary>
      <param name="argumentAxisConstantLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisConstantLineLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument constant line label element.</para>
      </summary>
      <param name="argumentAxisConstantLineLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis grid element.</para>
      </summary>
      <param name="argumentAxisGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis label element.</para>
      </summary>
      <param name="argumentAxisLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisMinorGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis minor grid element.</para>
      </summary>
      <param name="argumentAxisMinorGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisMinorLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis minor label element.</para>
      </summary>
      <param name="argumentAxisMinorLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisStrip(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis strip element.</para>
      </summary>
      <param name="argumentAxisStrip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisStripLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis strip label element.</para>
      </summary>
      <param name="argumentAxisStripLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ArgumentAxisTitle(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an argument axis title element.</para>
      </summary>
      <param name="argumentAxisTitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxis(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis element.</para>
      </summary>
      <param name="commonAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisConstantLine(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis constant line element.</para>
      </summary>
      <param name="commonAxisConstantLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisConstantLineLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis constant line label element.</para>
      </summary>
      <param name="commonAxisConstantLineLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis grid element.</para>
      </summary>
      <param name="commonAxisGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis label element.</para>
      </summary>
      <param name="commonAxisLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisMinorGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis minor grid element.</para>
      </summary>
      <param name="commonAxisMinorGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisMinorLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis minor label element.</para>
      </summary>
      <param name="commonAxisMinorLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisStrip(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to and axis strip element.</para>
      </summary>
      <param name="commonAxisStrip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisStripLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis strip label element.</para>
      </summary>
      <param name="commonAxisStripLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CommonAxisTitle(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an axis title element.</para>
      </summary>
      <param name="commonAxisTitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CrossHairCircle(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the crosshair circle element.</para>
      </summary>
      <param name="crossHairCircle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CrossHairLabelRect(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the crosshair label element.</para>
      </summary>
      <param name="crossHairLabelRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CrossHairLabelText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a crosshair label text element.</para>
      </summary>
      <param name="crossHairLabelText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.CrossHairLine(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a crosshair line element.</para>
      </summary>
      <param name="crossHairLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.IconExportButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Export button.</para>
      </summary>
      <param name="iconExportButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.LegendMarkers(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="legendMarkers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.LegendRect(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the legend element.</para>
      </summary>
      <param name="legendRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.LegendText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend text element.</para>
      </summary>
      <param name="legendText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.LoadingIndicatorRect(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the loading indicator element.</para>
      </summary>
      <param name="loadingIndicatorRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.LoadingIndicatorText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the loading indicator text element.</para>
      </summary>
      <param name="loadingIndicatorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ScrollBar(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the scroll bar element.</para>
      </summary>
      <param name="scrollBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.Subtitle(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the widsubtitle element.</para>
      </summary>
      <param name="subtitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.Title(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the widtitle element.</para>
      </summary>
      <param name="title"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.TooltipCloud(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a tooltip popup element.</para>
      </summary>
      <param name="tooltipCloud"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.TooltipText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a tooltip text element.</para>
      </summary>
      <param name="tooltipText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxis(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis element.</para>
      </summary>
      <param name="valueAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisConstantLine(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis constant line element.</para>
      </summary>
      <param name="valueAxisConstantLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisConstantLineLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis strip element.</para>
      </summary>
      <param name="valueAxisConstantLineLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis grid element.</para>
      </summary>
      <param name="valueAxisGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis label element.</para>
      </summary>
      <param name="valueAxisLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisMinorGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis minor grid element.</para>
      </summary>
      <param name="valueAxisMinorGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisMinorLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis minor label element.</para>
      </summary>
      <param name="valueAxisMinorLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisStrip(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis strip element.</para>
      </summary>
      <param name="valueAxisStrip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisStripLabel(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a value axis strip label element.</para>
      </summary>
      <param name="valueAxisStripLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBuilder.ValueAxisTitle(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the value axis title element.</para>
      </summary>
      <param name="valueAxisTitle"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartDataPrepareSettingsBuilder">
      <summary>
        <para>Stores settings that determine how a chart control manages data from a data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartDataPrepareSettingsBuilder.CheckTypeForAllData(System.Boolean)">
      <summary>
        <para>Specifies whether the type of each value coming from the data source is validated.</para>
      </summary>
      <param name="checkTypeForAllData"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartDataPrepareSettingsBuilder.ConvertToAxisDataType(System.Boolean)">
      <summary>
        <para>Converts data coming from a data source into a data type supported by the axis.</para>
      </summary>
      <param name="convertToAxisDataType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartDataPrepareSettingsBuilder.SortingMethod(System.Object)">
      <summary>
        <para>Specifies the sorting order in which series points should be drawn.</para>
      </summary>
      <param name="sortingMethod"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Full Stacked Area type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Full Stacked Bar type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.BarPadding(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="barPadding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.BarWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="barWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.CornerRadius(System.Int32)">
      <summary>
        <para>Makes bar series look rounded.</para>
      </summary>
      <param name="cornerRadius"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal possible height (or length if the chart is rotated) of a bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies which stack the series should belongs to.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedBarSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Full Stacked Line type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedLineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Full Stacked Spline Area type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Full Stacked Spline type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartFullStackedSplineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder">
      <summary>
        <para>Stores settings related to a chart legend.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.ColumnCount(System.Int32)">
      <summary>
        <para>Specifies how many columns it takes to arrange legend items.</para>
      </summary>
      <param name="columnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.ColumnItemSpacing(System.Int32)">
      <summary>
        <para>Specifies a blank space between legend columns in pixels.</para>
      </summary>
      <param name="columnItemSpacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.HorizontalAlignment(DevExpress.AspNetCore.HorizontalAlign)">
      <summary>
        <para>Specifies a legend&#39;s position on the chart.</para>
      </summary>
      <param name="horizontalAlignment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.HoverMode(DevExpress.AspNetCore.Bootstrap.ChartLegendHoverMode)">
      <summary>
        <para>Specifies what series elements to highlight when a corresponding item in the legend is hovered over.</para>
      </summary>
      <param name="hoverMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.ItemsAlignment(DevExpress.AspNetCore.HorizontalAlign)">
      <summary>
        <para>Specifies the alignment of legend items.</para>
      </summary>
      <param name="itemsAlignment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.ItemTextPosition(DevExpress.AspNetCore.Bootstrap.UIElementPosition)">
      <summary>
        <para>Specifies the position of text relative to the item marker.</para>
      </summary>
      <param name="itemTextPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.MarkerSize(System.Int32)">
      <summary>
        <para>Specifies the size of item markers in the legend in pixels.</para>
      </summary>
      <param name="markerSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.OnClientCustomizeHint(System.String)">
      <summary>
        <para>Specifies the text for a hint that appears when a user hovers the mouse pointer over a legend item on the client side.</para>
      </summary>
      <param name="onClientCustomizeHint"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.OnClientCustomizeText(System.String)">
      <summary>
        <para>Specifies the text to be displayed by a legend item on the client side.</para>
      </summary>
      <param name="onClientCustomizeText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.Orientation(DevExpress.AspNetCore.Orientation)">
      <summary>
        <para>Specifies whether to place legend items horizontally or vertically.</para>
      </summary>
      <param name="orientation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.RelativePosition)">
      <summary>
        <para>Specifies whether the legend is located outside or inside the chart&#39;s plot.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.RowCount(System.Int32)">
      <summary>
        <para>Specifies how many rows it takes to arrange legend items.</para>
      </summary>
      <param name="rowCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.RowItemSpacing(System.Int32)">
      <summary>
        <para>Specifies a blank space between legend rows in pixels.</para>
      </summary>
      <param name="rowItemSpacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.VerticalAlignment(DevExpress.AspNetCore.VerticalAlign)">
      <summary>
        <para>Specifies a legend&#39;s vertical position on the chart.</para>
      </summary>
      <param name="verticalAlignment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies the visibility state of the chart&#39;s legend.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Line type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartLineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder">
      <summary>
        <para>Stores settings related to chart series points.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder.Size(System.Int32)">
      <summary>
        <para>Specifies the diameter of series points in pixels.</para>
      </summary>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder.Symbol(DevExpress.AspNetCore.Bootstrap.ChartPointSymbol)">
      <summary>
        <para>Specifies which symbol should represent series points in scatter, line- and area-like series.</para>
      </summary>
      <param name="symbol"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Makes the series points visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Range Area type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>An object defining configuration options for points in range and area series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.RangeValue1Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.RangeValue2Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue1Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.RangeValue2Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.RangeValue1Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue2Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Range Bar type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.RangeValue1Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.RangeValue2Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue1Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.RangeValue2Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.RangeValue1Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue2Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartRangeBarSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder">
      <summary>
        <para>Stores settings supported by a series of the Scatter type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScatterSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartScrollBarSettingsBuilder">
      <summary>
        <para>Stores settings relate to the  control&#39;s scrollbars.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScrollBarSettingsBuilder.Offset(System.Int32)">
      <summary>
        <para>Specifies the spacing between the scroll bar and the chart&#39;s plot in pixels.</para>
      </summary>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScrollBarSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.UIElementPosition)">
      <summary>
        <para>Specifies the position of the scroll bar in the chart.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartScrollBarSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies whether the scroll bar is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder">
      <summary>
        <para>Stores settings of a  series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.CloseValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides close values for points of a financial series.</para>
      </summary>
      <param name="closeValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.CornerRadius(System.Int32)">
      <summary>
        <para>Makes bars look rounded. Applies only to bar-like series.</para>
      </summary>
      <param name="cornerRadius"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.HighValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides high values for points of a financial series.</para>
      </summary>
      <param name="highValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.LowValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides low values for points of a financial series.</para>
      </summary>
      <param name="lowValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal possible height (or length if the chart is rotated) of a bar in pixels. Applies only to bar-like series.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.OpenValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides open values for points of a financial series.</para>
      </summary>
      <param name="openValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in scatter, line and area-like series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.RangeValue1Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.RangeValue2Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue1Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.RangeValue2Field(System.String)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.RangeValue1Field(System.String)"/> option, specifies which data source field provides values for a range-like series.</para>
      </summary>
      <param name="rangeValue2Field"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.ReductionLevel(DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel)">
      <summary>
        <para>Specifies reduction options for financial series: whether high, low, open or close prices of points should be compared.</para>
      </summary>
      <param name="reductionLevel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.SizeField(System.String)">
      <summary>
        <para>Specifies which data source field provides size values for bubbles. Required by and applies only to bubble series.</para>
      </summary>
      <param name="sizeField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies which stack the series should belongs to. Applies only to stacked bar and full-stacked bar series.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Type(DevExpress.AspNetCore.Bootstrap.SeriesType)">
      <summary>
        <para>Sets the series type.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder">
      <summary>
        <para>A collection of  series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddBarSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddBubbleSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddCandleStickSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddFullStackedAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddFullStackedBarSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddFullStackedLineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddFullStackedSplineAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddFullStackedSplineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddLineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddRangeAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddRangeBarSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddScatterSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddSplineAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddSplineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStackedAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStackedBarSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStackedLineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStackedSplineAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStackedSplineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStepAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStepLineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesCollectionBuilder.AddStockSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder">
      <summary>
        <para>Stores settings of  series labels.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.ArgumentFormat(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para>Formats the point argument before it will be displayed in the point label.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.ConnectorCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a label connector element.</para>
      </summary>
      <param name="connectorCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.ConnectorVisible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of connectors between series points and their labels.</para>
      </summary>
      <param name="connectorVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.Format(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para>Formats the point value before it will be displayed in the point label.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.OnClientCustomizeText(System.String)">
      <summary>
        <para>Customizes the text displayed by point labels on the client side.</para>
      </summary>
      <param name="onClientCustomizeText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.RelativePosition)">
      <summary>
        <para>Specifies whether to display point labels inside or outside of series points.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.RadialOffset(System.Decimal)">
      <summary>
        <para>Sets a value that specifies how to shift labels from their initial position in a radial direction in pixels.</para>
      </summary>
      <param name="radialOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.RectCssClass(System.String)">
      <summary>
        <para>Specifies the name of the CSS class applied to the rectangle that limits the series label.</para>
      </summary>
      <param name="rectCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.RotationAngle(System.Decimal)">
      <summary>
        <para>Sets the angle of rotation applied to point labels.</para>
      </summary>
      <param name="rotationAngle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the label&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of point labels.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesTemplateSettingsBuilder">
      <summary>
        <para>Stores series template settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesTemplateSettingsBuilder.NameField(System.String)">
      <summary>
        <para>Specifies a data source field that represents the series name.</para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesTemplateSettingsBuilder.OnClientCustomizeSeries(System.String)">
      <summary>
        <para>Specifies a client-side callback function that returns an object with individual series settings.</para>
      </summary>
      <param name="onClientCustomizeSeries"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder">
      <summary>
        <para>Stores settings of the Spline Area series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder">
      <summary>
        <para>Serves as a base for classes that store settings of the Spline series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartSplineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder">
      <summary>
        <para>Stores settings of the Stacked Area series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder">
      <summary>
        <para>Stores settings of the Stacked Bar series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.BarPadding(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="barPadding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.BarWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="barWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.CornerRadius(System.Int32)">
      <summary>
        <para>Makes bar series look rounded.</para>
      </summary>
      <param name="cornerRadius"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal possible height (or length if the chart is rotated) of a bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies which stack the series should belongs to.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedBarSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder">
      <summary>
        <para>Stores settings of the Stacked Line series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedLineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder">
      <summary>
        <para>Stores settings of the Stacked Spline Area series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder">
      <summary>
        <para>Stores settings of the Stacked Spline series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStackedSplineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder">
      <summary>
        <para>Stores settings of the Step Area series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder">
      <summary>
        <para>Stores settings of the Step Line series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>Configures series points in Line and Point series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStepLineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder">
      <summary>
        <para>Stores settings of the Stock series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Aggregation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAggregationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Axis(System.String)">
      <summary>
        <para>Binds the series to a value axis.</para>
      </summary>
      <param name="axis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.CloseValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides close values for points of a financial series.</para>
      </summary>
      <param name="closeValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.HighValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides high values for points of a financial series.</para>
      </summary>
      <param name="highValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.LowValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides low values for points of a financial series.</para>
      </summary>
      <param name="lowValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.OpenValueField(System.String)">
      <summary>
        <para>Specifies which data source field provides open values for points of a financial series.</para>
      </summary>
      <param name="openValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Pane(System.String)">
      <summary>
        <para>Sets the pane which should display the current series.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.ReductionLevel(DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel)">
      <summary>
        <para>Specifies whether high, low, open or close prices of points should be compared.</para>
      </summary>
      <param name="reductionLevel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStockSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder">
      <summary>
        <para>Represents a chart strip.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the strip element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder.EndValue(System.Object)">
      <summary>
        <para>Along with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder.StartValue(System.Object)"/> method, limits the strip.</para>
      </summary>
      <param name="endValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder.LabelText(System.String)">
      <summary>
        <para>Specifies the text of the strip label.</para>
      </summary>
      <param name="labelText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder.StartValue(System.Object)">
      <summary>
        <para>Along with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripBuilder.EndValue(System.Object)"/> property, limits the strip.</para>
      </summary>
      <param name="startValue"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripCollectionBuilder">
      <summary>
        <para>A collection of chart strips.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartStripCollectionBuilder.Add">
      <summary>
        <para>Adds a new strip to the collection and specifies the strips&#39;s start and end values.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder">
      <summary>
        <para>Stores chart tooltip settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.ArgumentFormat(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para>Specifies a format for arguments of the chart&#39;s series points.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.ArrowLength(System.Int32)">
      <summary>
        <para>Specifies the length of a tooltip&#39;s arrow in pixels.</para>
      </summary>
      <param name="arrowLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Specifies whether or not tooltips are enabled.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.Format(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para>Formats the value before it will be displayed in the tooltip.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.OnClientCustomizeTooltip(System.String)">
      <summary>
        <para>Specifies a callback function used to customize the tooltip.</para>
      </summary>
      <param name="onClientCustomizeTooltip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.Shared(System.Boolean)">
      <summary>
        <para>Specifies the kind of information to display in a tooltip.</para>
      </summary>
      <param name="shared"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder.ZIndex(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="zIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder">
      <summary>
        <para>Stores settings of the  control&#39;s value axis.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.AxisDivisionFactor(System.Int32)">
      <summary>
        <para>Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; types.</para>
      </summary>
      <param name="axisDivisionFactor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.BreaksCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreaksCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.BreakStyle(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAxisBreakStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.ConstantLineCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineCollectionBuilder})">
      <summary>
        <para>Provides access to a collection of constant lines belonging to the axis.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.ConstantLineStyle(System.Action{DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.DiscreteAxisDivisionMode(DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode)">
      <summary>
        <para>Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the &quot;discrete&quot; type.</para>
      </summary>
      <param name="discreteAxisDivisionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.EnableAutoBreaks(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableAutoBreaks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.EndOnTick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="endOnTick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.GridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether grid lines are visible.</para>
      </summary>
      <param name="gridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Inverted(System.Boolean)">
      <summary>
        <para>Inverts the axis.</para>
      </summary>
      <param name="inverted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAxisLabelSettingsBuilder})">
      <summary>
        <para>Provides access to the axis label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.LogarithmBase(System.Int32)">
      <summary>
        <para>Specifies the value to be raised to a power when generating ticks for an axis of the logarithmic type.</para>
      </summary>
      <param name="logarithmBase"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MaxAutoBreakCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxAutoBreakCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MaxValue(System.Object)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinValue(System.Object)"/> method, focuses the widget on a specific chart segment. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; type.</para>
      </summary>
      <param name="visualRangeEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MaxValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinorGridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether the minor grid is visible.</para>
      </summary>
      <param name="minorGridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinorTickCount(System.Int32)">
      <summary>
        <para>Specifies how many minor ticks to place between two neighboring major ticks.</para>
      </summary>
      <param name="minorTickCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinorTickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between minor ticks.</para>
      </summary>
      <param name="minorTickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinorTickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the minor tick interval.</para>
      </summary>
      <param name="minorTickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinorTickLength(System.Int32)">
      <summary>
        <para>Specifies the length of minor ticks in pixels.</para>
      </summary>
      <param name="minorTickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinorTickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether minor ticks are visible.</para>
      </summary>
      <param name="minorTickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinValue(System.Object)">
      <summary>
        <para>Coupled with the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MaxValue(System.Object)"/> method, focuses the widget on a specific chart segment. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; type.</para>
      </summary>
      <param name="visualRangeStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MinValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.MultipleAxesSpacing(System.Int32)">
      <summary>
        <para>Adds a pixel-measured empty space between two side-by-side value axes. Applies if several value axes are located on one side of the chart.</para>
      </summary>
      <param name="multipleAxesSpacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name of the value axis.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Pane(System.String)">
      <summary>
        <para>Binds the value axis to a pane.</para>
      </summary>
      <param name="pane"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Position(DevExpress.AspNetCore.Bootstrap.UIElementPosition)">
      <summary>
        <para>Relocates the axis.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.ShowZero(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether to show zero on the value axis.</para>
      </summary>
      <param name="showZero"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.StripCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartStripCollectionBuilder})">
      <summary>
        <para>Declares a collection of strips belonging to the argument axis.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.SynchronizedValue(System.Decimal)">
      <summary>
        <para>Synchronizes two or more value axes with each other at a specific value.</para>
      </summary>
      <param name="synchronizedValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.TickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between axis ticks.</para>
      </summary>
      <param name="tickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.TickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the interval between axis ticks.</para>
      </summary>
      <param name="tickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.TickLength(System.Int32)">
      <summary>
        <para>Specifies the length of ticks in pixels.</para>
      </summary>
      <param name="tickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.TickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether ticks are visible.</para>
      </summary>
      <param name="tickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.TitleText(System.String)">
      <summary>
        <para>Specifies the text of the axis title.</para>
      </summary>
      <param name="titleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Type(DevExpress.AspNetCore.Bootstrap.AxisScaleType)">
      <summary>
        <para>Specifies the type of the axis.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.ValueMarginsEnabled(System.Boolean)">
      <summary>
        <para>Adds an empty space between the axis and the minimum and maximum series points.</para>
      </summary>
      <param name="valueMarginsEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.ValueType(System.Type)">
      <summary>
        <para>Sets the type of values.</para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies whether the axis line is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.VisualRangeEnd(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="visualRangeEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.VisualRangeStart(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="visualRangeStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.WholeRangeEnd(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="wholeRangeEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisBuilder.WholeRangeStart(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="wholeRangeStart"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisCollectionBuilder">
      <summary>
        <para>A collection of the  control&#39;s value axes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisCollectionBuilder.Add">
      <summary>
        <para>Adds a new value axis with default settings to the collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueAxisCollectionBuilder.AddValueAxis">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder">
      <summary>
        <para>Stores settings of the value error bars for numeric axes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.CssClass(System.String)">
      <summary>
        <para>Specifies the name of a CSS class applied to the error bar.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.DisplayMode(DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarDisplayMode)">
      <summary>
        <para>Specifies whether error bars must be displayed in full or partially.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.EdgeLength(System.Int32)">
      <summary>
        <para>Specifies the length of the lines that indicate the error bar edges.</para>
      </summary>
      <param name="edgeLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.HighValueField(System.String)">
      <summary>
        <para>Specifies which data field provides high error values.</para>
      </summary>
      <param name="highValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.LowValueField(System.String)">
      <summary>
        <para>Specifies which data field provides low error values.</para>
      </summary>
      <param name="lowValueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.Type(DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType)">
      <summary>
        <para>Specifies how error bar values must be calculated.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder.Value(System.Decimal)">
      <summary>
        <para>Specifies the value to be used for generating error bars.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckboxAndRadioBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores BootstrapCheckBox&#39;s and BootstrapRadioButton&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckboxAndRadioBootstrapSpecificSettingsBuilder.InlineMode(System.Boolean)">
      <summary>
        <para>Specifies whether or not the checkbox or radio button should be displayed as an inline element.</para>
      </summary>
      <param name="inlineMode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilder">
      <summary>
        <para>Represents the check box control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.AllowGrayed(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowGrayed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.AllowGrayedByClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowGrayedByClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.Checked(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckboxAndRadioBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ValueChecked(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="valueChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ValueGrayed(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="valueGrayed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxBuilderBase`1.ValueUnchecked(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="valueUnchecked"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Check Box control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilder">
      <summary>
        <para>A control to display a list of check boxes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.RepeatColumns(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="repeatColumns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.RepeatDirection(DevExpress.AspNetCore.RepeatDirection)">
      <summary>
        <para></para>
      </summary>
      <param name="repeatDirection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.SelectedIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="selectedIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListBuilderBase`1.ValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Check Box List&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxListCssClassesBuilder.Item(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a list item element.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a checkbox editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.AllowGrayed(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether the grayed state is available for a check box.</para>
      </summary>
      <param name="allowGrayed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.AllowGrayedByClick(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a check box can be set to a grayed state by a mouse click.</para>
      </summary>
      <param name="allowGrayedByClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the CheckBox.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.DisplayTextChecked(System.String)">
      <summary>
        <para>Sets the text that represents the checked state of a column editor in browse mode.</para>
      </summary>
      <param name="displayTextChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.DisplayTextGrayed(System.String)">
      <summary>
        <para>Sets the text that is denoted by the grayed state of a column editor in browse mode.</para>
      </summary>
      <param name="displayTextGrayed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.DisplayTextUnchecked(System.String)">
      <summary>
        <para>Sets the text that represents the unchecked state of a column editor in browse mode.</para>
      </summary>
      <param name="displayTextUnchecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.UseDisplayImages(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s check state is represented by custom images in browse mode.</para>
      </summary>
      <param name="useDisplayImages"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.ValueChecked(System.Object)">
      <summary>
        <para>Sets the value that represents the editor&#39;s checked state.</para>
      </summary>
      <param name="valueChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.ValueGrayed(System.Object)">
      <summary>
        <para>Sets the value that corresponds to the editor&#39;s grayed state.</para>
      </summary>
      <param name="valueGrayed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.ValueType(System.Type)">
      <summary>
        <para>The data type of the editor&#39;s values.</para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder.ValueUnchecked(System.Object)">
      <summary>
        <para>Sets the value that represents the editor&#39;s unchecked state.</para>
      </summary>
      <param name="valueUnchecked"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder">
      <summary>
        <para>Implements the Clear button functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder.DisplayMode(DevExpress.AspNetCore.ClearButtonDisplayMode)">
      <summary>
        <para>Controls the Clear Button availability in a non-empty editor&#39;s text box.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current edit button&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilder">
      <summary>
        <para>Represents an editor which displays a list of items within its dropdown window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s edited value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.AllowMouseWheel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.AllowNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.CallbackPageSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackPageSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.DropDownAutoWidth(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.DropDownButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.DropDownRows(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.DropDownStyle(DevExpress.AspNetCore.DropDownStyle)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownStyle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.Fields(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.FilterMinLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="filterMinLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.IconCssClassField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.IncrementalFilteringDelay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="incrementalFilteringDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.IncrementalFilteringMode(DevExpress.AspNetCore.IncrementalFilteringMode)">
      <summary>
        <para></para>
      </summary>
      <param name="incrementalFilteringMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.LoadDropDownOnDemand(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="loadDropDownOnDemand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.OnCustomJSProperties(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapComboBox,DevExpress.AspNetCore.ICustomJSPropertiesEventArgs})">
      <summary>
        <para>Enables you to supply any server data that can then be parsed on the client.</para>
      </summary>
      <param name="action">A <see cref="T:DevExpress.AspNetCore.ICustomJSPropertiesEventArgs"/> object allowing you to implement custom processing.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.EditorRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.TextFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxBuilderBase`1.ValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Clear button element.</para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Combo Box control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.IconDropDownButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the dropdown button.</para>
      </summary>
      <param name="iconDropDownButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.Item(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a list item element.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.ListBox(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the dropdown list box element.</para>
      </summary>
      <param name="listBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a combobox editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.AllowMouseWheel(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an end-user is able to change the editor&#39;s value using the mouse wheel.</para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.AllowNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the combo box allows null values to be entered.</para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para>The collection of editor buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.CallbackPageSize(System.Int32)">
      <summary>
        <para>Sets the number of items returned from the server on each callback request performed in response to a predefined client user action.</para>
      </summary>
      <param name="callbackPageSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s Clear button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the ComboBox.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DataMember(System.String)">
      <summary>
        <para>Sets a specific data member in a multimember data source to bind to the editor.</para>
      </summary>
      <param name="dataMember"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DropDownAutoWidth(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the drop down window&#39;s width is calculated automatically.</para>
      </summary>
      <param name="dropDownAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DropDownButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s drop down button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DropDownRows(System.Int32)">
      <summary>
        <para>Sets the number of list items displayed within the editor&#39;s scrollable dropdown window simultaneously.</para>
      </summary>
      <param name="dropDownRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.DropDownStyle(DevExpress.AspNetCore.DropDownStyle)">
      <summary>
        <para>Sets a value that specifies the manner in which end users can change the edit value of the dropdown list editor.</para>
      </summary>
      <param name="dropDownStyle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.EnableCallbackMode(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s list items can be loaded to the client side on demand via callbacks.</para>
      </summary>
      <param name="enableCallbackMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.Fields(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldCollectionBuilder})">
      <summary>
        <para>Provides access to a ComboBox&#39;s field collection.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.FilterMinLength(System.Int32)">
      <summary>
        <para>Sets a value that defines the minimum length for the filter string input, after which filtering operations are initiated.</para>
      </summary>
      <param name="filterMinLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.IconCssClassField(System.String)">
      <summary>
        <para>Sets the data source field that provides the names of CSS classes that define images for the editor&#39;s items.</para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.IncrementalFilteringDelay(System.Int32)">
      <summary>
        <para>Sets the time interval between the time a user starts typing within the editor&#39; edit box, and filtering is applied.</para>
      </summary>
      <param name="incrementalFilteringDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.IncrementalFilteringMode(DevExpress.AspNetCore.IncrementalFilteringMode)">
      <summary>
        <para>Sets a value that specifies the filtering mode of the editor.</para>
      </summary>
      <param name="incrementalFilteringMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para>The collection of items displayed in the  editor&#39;s dropdown window.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all items within the combo box and token box.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all items within the combo box and token box.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.LoadDropDownOnDemand(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether the HTML code that represents the editor&#39;s drop-down window should be loaded via a callback on demand.</para>
      </summary>
      <param name="loadDropDownOnDemand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para>Sets the maximum number of characters an end user can enter into the editor.</para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.TextField(System.String)">
      <summary>
        <para>Sets the data source field that provides display texts for the editor&#39;s items.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the selected item&#39;s text displayed within the editor&#39;s edit box.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ValueField(System.String)">
      <summary>
        <para>Sets the data source field that provides values for the editor&#39;s items.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.ValueType(System.Type)">
      <summary>
        <para>The data type of the editor&#39;s values.</para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.EncodeHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Height(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Height(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapControlBuilder`1.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
      <summary>
        <para></para>
      </summary>
      <param name="writer"></param>
      <param name="encoder"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder">
      <summary>
        <para>Serves as the base class for classes containing client-side events handlers for coordinate system charts.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.ArgumentAxisClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.ArgumentAxisClick"/> event.</para>
      </summary>
      <param name="argumentAxisClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.Disposing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Disposing"/> event.</para>
      </summary>
      <param name="disposing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.Done(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.Done"/> event.</para>
      </summary>
      <param name="done"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.Drawn(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Drawn"/> event.</para>
      </summary>
      <param name="drawn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.Exported(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Exported"/> event.</para>
      </summary>
      <param name="exported"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.Exporting(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.Exporting"/> event.</para>
      </summary>
      <param name="exporting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.FileSaving(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.FileSaving"/> event.</para>
      </summary>
      <param name="fileSaving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.IncidentOccurred(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapUIWidgetBase.IncidentOccurred"/> event.</para>
      </summary>
      <param name="incidentOccurred"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.LegendClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.LegendClick"/> event.</para>
      </summary>
      <param name="legendClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.PointClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointClick"/> event.</para>
      </summary>
      <param name="pointClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.PointHoverChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointHoverChanged"/> event.</para>
      </summary>
      <param name="pointHoverChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.PointSelectionChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.PointSelectionChanged"/> event.</para>
      </summary>
      <param name="pointSelectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.SeriesClick(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.SeriesClick"/> event.</para>
      </summary>
      <param name="seriesClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.SeriesHoverChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.SeriesHoverChanged"/> event.</para>
      </summary>
      <param name="seriesHoverChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.SeriesSelectionChanged(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.SeriesSelectionChanged"/> event.</para>
      </summary>
      <param name="seriesSelectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.TooltipHidden(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.TooltipHidden"/> event.</para>
      </summary>
      <param name="tooltipHidden"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder.TooltipShown(System.String)">
      <summary>
        <para>Specifies the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Bootstrap.Scripts.BootstrapClientChartBase.TooltipShown"/> event.</para>
      </summary>
      <param name="tooltipShown"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilder">
      <summary>
        <para>A date editor control with a dropdown window containing a calendar and a time editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.AllowMouseWheel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.AllowNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.AllowUserInput(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.CalendarProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.DateOnError(DevExpress.AspNetCore.DateOnError)">
      <summary>
        <para></para>
      </summary>
      <param name="dateOnError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.DateRangeSettings(System.Action{DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.DropDownButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.EditFormat(DevExpress.AspNetCore.EditFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.EditFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.MaxDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.MinDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ShowOutOfRangeWarning(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showOutOfRangeWarning"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.TimeSectionProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.UseMaskBehavior(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useMaskBehavior"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarAdaptivitySettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarAdaptivitySettingsBuilder.SwitchToSingleMonthAtWindowInnerWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="switchToSingleMonthAtWindowInnerWidth"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control&#39;s drop-down calendar.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.Day(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s day element.</para>
      </summary>
      <param name="day"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.DayDisabled(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s disabled day element.</para>
      </summary>
      <param name="dayDisabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.DayHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s day of the week header element.</para>
      </summary>
      <param name="dayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.DayOtherMonth(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar day that does not belong to the current month.</para>
      </summary>
      <param name="dayOtherMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.DayOutOfRange(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar day that does not belong the active date range.</para>
      </summary>
      <param name="dayOutOfRange"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.DaySelected(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s selected day element.</para>
      </summary>
      <param name="daySelected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.DayWeekEnd(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s weekend day element.</para>
      </summary>
      <param name="dayWeekEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.FastNavHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the area that allows a user to return back to the previous mode within the fast navigation area.</para>
      </summary>
      <param name="fastNavHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.FastNavigation(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s fast navigation panel element.</para>
      </summary>
      <param name="fastNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.FastNavItem(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the fast navigation area&#39;s item.</para>
      </summary>
      <param name="fastNavItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.FastNavItemOtherPeriod(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the fast navigation area&#39;s items that belong to the neighboring period.</para>
      </summary>
      <param name="fastNavItemOtherPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.Footer(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s footer element.</para>
      </summary>
      <param name="footer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.Header(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s header element.</para>
      </summary>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconFastNavBack(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Back fast navigation panel element.</para>
      </summary>
      <param name="iconFastNavBack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconFastNavNextPeriod(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Period fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavNextPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconFastNavNextYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Year fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconFastNavPrevPeriod(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Period fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavPrevPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconFastNavPrevYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Year fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconNextMonth(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Month button.</para>
      </summary>
      <param name="iconNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconNextYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Year button.</para>
      </summary>
      <param name="iconNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconPrevMonth(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Month button.</para>
      </summary>
      <param name="iconPrevMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.IconPrevYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Year button.</para>
      </summary>
      <param name="iconPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.MonthGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s grid element.</para>
      </summary>
      <param name="monthGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.Today(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s current day element.</para>
      </summary>
      <param name="today"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder.WeekNumber(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s week number element.</para>
      </summary>
      <param name="weekNumber"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a date editor&#39;s dropdown calendar.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ChangeVisibleDateAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para>Sets a value specifying the animation type used to change the visible date.</para>
      </summary>
      <param name="changeVisibleDateAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ClearButtonText(System.String)">
      <summary>
        <para>Sets the text displayed within the calendar&#39;s Clear button.</para>
      </summary>
      <param name="clearButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.Columns(System.Int32)">
      <summary>
        <para>Sets the number of columns (months) displayed in a multi-view calendar.</para>
      </summary>
      <param name="columns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the  control&#39;s drop-down calendar.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.DayNameFormat(DevExpress.AspNetCore.DayNameFormat)">
      <summary>
        <para>Sets the name format for days of the week.</para>
      </summary>
      <param name="dayNameFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.EnableChangeVisibleDateGestures(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value specifying whether an end-user can change the visible date with a swipe gesture.</para>
      </summary>
      <param name="enableChangeVisibleDateGestures"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.EnableMonthNavigation(System.Boolean)">
      <summary>
        <para>Sets the visibility of the PrevMonth and NextMonth buttons, thus controlling the availability of month navigation within the calendar.</para>
      </summary>
      <param name="enableMonthNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.EnableYearNavigation(System.Boolean)">
      <summary>
        <para>Sets the visibility of the PrevYear and NextYear buttons, thus controlling the availability of year navigation within the calendar.</para>
      </summary>
      <param name="enableYearNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.FastNavProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder})">
      <summary>
        <para>The settings of the calendar&#39;s dropdown fast navigation panel.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.FirstDayOfWeek(DevExpress.AspNetCore.FirstDayOfWeek)">
      <summary>
        <para>Sets the day to display as the first day of the week within the calendar.</para>
      </summary>
      <param name="firstDayOfWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.HighlightToday(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a day that corresponds to today&#39;s date is highlighted within the calendar.</para>
      </summary>
      <param name="highlightToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.HighlightWeekends(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether weekend days are highlighted within the calendar.</para>
      </summary>
      <param name="highlightWeekends"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.Rows(System.Int32)">
      <summary>
        <para>Sets the number of rows (months) displayed in a multi-view calendar.</para>
      </summary>
      <param name="rows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ShowClearButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the Clear button is displayed within the calendar&#39;s footer.</para>
      </summary>
      <param name="showClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ShowDayHeaders(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the heading for the days of the week is displayed.</para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the calendar&#39;s title heading is displayed.</para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ShowTodayButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the Today button is displayed within the calendar&#39;s footer.</para>
      </summary>
      <param name="showTodayButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.ShowWeekNumbers(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the week number section is displayed within the calendar.</para>
      </summary>
      <param name="showWeekNumbers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder.TodayButtonText(System.String)">
      <summary>
        <para>Sets the text displayed within the calendar&#39;s Today button.</para>
      </summary>
      <param name="todayButtonText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.Calendar(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the dropdown calendar element.</para>
      </summary>
      <param name="calendar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Clear button element.</para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Date Edit control&#39;s element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.IconDropDownButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the dropdown button.</para>
      </summary>
      <param name="iconDropDownButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.TimeEdit(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied the Date Edit control&#39;s time edit element.</para>
      </summary>
      <param name="timeEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCssClassesBuilder.TimeSection(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied the Date Edit control&#39;s time section element.</para>
      </summary>
      <param name="timeSection"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a date editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.AllowMouseWheel(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an end-user is able to change the editor&#39;s value using the mouse wheel.</para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.AllowNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the date editor allows null values to be entered.</para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.AllowUserInput(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether end-users are allowed to input values into an editor&#39;s edit box.</para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para>The collection of editor buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.CalendarProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditCalendarPropertiesBuilder})">
      <summary>
        <para>The settings of the editor&#39;s dropdown calendar.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s Clear button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the DateEdit.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.DateOnError(DevExpress.AspNetCore.DateOnError)">
      <summary>
        <para>Sets a value that specifies how the date editor responds to an invalid date being entered by an end user.</para>
      </summary>
      <param name="dateOnError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.DateRangeSettings(System.Action{DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder})">
      <summary>
        <para>Settings related to the date range functionality.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.DropDownButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s drop down button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.EditFormat(DevExpress.AspNetCore.EditFormat)">
      <summary>
        <para>Sets the edit format for a date editor&#39;s value.</para>
      </summary>
      <param name="editFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.EditFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s edited value displayed within the edit box, when the editor&#39;s Edit Format (specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.EditFormat(DevExpress.AspNetCore.EditFormat)"/> method) is set to <see cref="F:DevExpress.AspNetCore.EditFormat.Custom"/>.</para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.MaxDate(System.DateTime)">
      <summary>
        <para>Sets the maximum date allowed to be entered into the editor by an end-user.</para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.MinDate(System.DateTime)">
      <summary>
        <para>Sets the minimum date allowed to be entered into the editor by an end-user.</para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.ShowOutOfRangeWarning(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a warning message is displayed when an end-user types a date that is out of the range specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.MinDate(System.DateTime)"/> and <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.MaxDate(System.DateTime)"/> methods.</para>
      </summary>
      <param name="showOutOfRangeWarning"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.TimeSectionProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder})">
      <summary>
        <para>The settings of the editor&#39;s drop-down window time section.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.UseMaskBehavior(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the mask behavior is applied to the date editor input.</para>
      </summary>
      <param name="useMaskBehavior"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control&#39;s time edit.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Clear button element.</para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.IconDecrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Time Edit control&#39;s decrement button.</para>
      </summary>
      <param name="iconDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.IconIncrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Time Edit control&#39;s increment button.</para>
      </summary>
      <param name="iconIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to time edit.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.AllowMouseWheel(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an end-user is able to change the editor&#39;s value using the mouse wheel.</para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.AllowNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the time editor allows a null value to be entered.</para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.AllowUserInput(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether end-users are allowed to input values into an editor&#39;s edit box.</para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para>The collection of editor buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s Clear button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the  control&#39;s time edit.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the time edit value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.EditFormat(DevExpress.AspNetCore.EditFormat)">
      <summary>
        <para>Sets the edit format for a time editor&#39;s value.</para>
      </summary>
      <param name="editFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.EditFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s edited value displayed within the edit box.</para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.SpinButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder})">
      <summary>
        <para>The settings of the editor&#39;s spin buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder">
      <summary>
        <para>Contains settings specific to the  control&#39;s time section.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder.CancelButtonText(System.String)">
      <summary>
        <para>Sets the text displayed within the Cancel button of the date edit&#39;s time section.</para>
      </summary>
      <param name="cancelButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder.OkButtonText(System.String)">
      <summary>
        <para>Sets the text displayed within the Ok button of the date edit&#39;s time section.</para>
      </summary>
      <param name="okButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder.ShowCancelButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the Cancel button is displayed within the time section.</para>
      </summary>
      <param name="showCancelButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder.ShowOkButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the Ok button is displayed within the time section.</para>
      </summary>
      <param name="showOkButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder.TimeEditProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeEditPropertiesBuilder})">
      <summary>
        <para>The time edit settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditTimeSectionPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the time section is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.DayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.NavigationButtonAppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonAppointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.NavigationButtonVisibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ResourcesPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="resourcesPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ScrollAreaHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="scrollAreaHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ShowAllAppointmentsAtTimeCells(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllAppointmentsAtTimeCells"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ShowAllDayArea(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllDayArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ShowDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ShowMoreButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ShowMoreButtonsOnEachColumn(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtonsOnEachColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ShowWorkTimeOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWorkTimeOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.TimeIndicatorDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.TimeIndicatorDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.TimeMarkerVisibility(DevExpress.XtraScheduler.TimeMarkerVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.TimeRulers(System.Action{DevExpress.AspNetCore.Bootstrap.TimeRulerCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.TimeScale(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="timeScale"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.TimeSlots(System.Action{DevExpress.AspNetCore.Bootstrap.TimeSlotCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.VisibleTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.VisibleTimeSnapMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleTimeSnapMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder.WorkTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.AllDayArea(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="allDayArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.AlternateDateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="alternateDateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.BottomMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="bottomMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.DateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.HorizontalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.IconBottomMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBottomMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.IconTopMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTopMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.TimeCellBody(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeCellBody"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.TimeMarker(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarker"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.TimeMarkerLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.TimeRulerHoursItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeRulerHoursItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.TimeRulerMinuteItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeRulerMinuteItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.TopMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="topMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDayViewCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDialogSizing">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapDialogSizing.ExtraLarge">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapDialogSizing.Large">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapDialogSizing.Medium">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapDialogSizing.Small">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder">
      <summary>
        <para>Represents the default edit button that invokes the editor&#39;s dropdown window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of an edit button on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the button is enabled, allowing it to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder.Position(DevExpress.AspNetCore.ButtonsPosition)">
      <summary>
        <para>Sets the button&#39;s horizontal position within an editor.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed within the editor button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current edit button&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets the edit button&#39;s visibility status.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilder">
      <summary>
        <para>An editor that provides the dropdown list functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.DropDownAutoWidth(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.DropDownButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.DropDownWindowTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownWindowTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Clear button element.</para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Dropdown Edit control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.DropDownWindow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the dropdown window element.</para>
      </summary>
      <param name="dropDownWindow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.IconDropDownButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s dropdown button.</para>
      </summary>
      <param name="iconDropDownButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to dropdown editors.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para>The collection of editor buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s Clear button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder"/>.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.DropDownAutoWidth(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the drop down window&#39;s width is calculated automatically.</para>
      </summary>
      <param name="dropDownAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.DropDownButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s drop down button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.DropDownWindowTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of the drop down window.</para>
      </summary>
      <param name="dropDownWindowTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para>Sets the maximum number of characters an end user can enter into the editor.</para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused, and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder">
      <summary>
        <para>Represents a button for a button editor control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of an edit button on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the button is enabled, allowing it to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the button.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.Position(DevExpress.AspNetCore.ButtonsPosition)">
      <summary>
        <para>Sets the button&#39;s horizontal position within an editor.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed within the editor button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current edit button&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets the edit button&#39;s visibility status.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder">
      <summary>
        <para>Represents a collection of buttons in a button editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder.Add">
      <summary>
        <para>Adds the specified button to the collection</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.CssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.RequiredMarkDisplayMode(DevExpress.AspNetCore.FieldRequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ShowCancelButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showCancelButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.ShowUpdateButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showUpdateButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditModeCommandLayoutItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBaseBuilder">
      <summary>
        <para>The base class for editor caption settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBaseBuilder.Hidden(System.Boolean)">
      <summary>
        <para>Specifies whether the caption is hidden.</para>
      </summary>
      <param name="hidden"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBaseBuilder.Position(DevExpress.AspNetCore.Bootstrap.BootstrapCaptionPosition)">
      <summary>
        <para>Specifies the position of a caption relative to the editor.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBaseBuilder.ShowColon(System.Boolean)">
      <summary>
        <para>Specifies whether the colon sign is displayed after the caption text.</para>
      </summary>
      <param name="showColon"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder">
      <summary>
        <para>Contains settings specific to the editor caption.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder.Hidden(System.Boolean)">
      <summary>
        <para>Specifies whether the caption is hidden.</para>
      </summary>
      <param name="hidden"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder.OptionalMark(System.String)">
      <summary>
        <para>Specifies the text of the optional mark displayed by the editor caption.</para>
      </summary>
      <param name="optionalMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.BootstrapCaptionPosition)">
      <summary>
        <para>Specifies the position of a caption relative to the editor.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder.RequiredMark(System.String)">
      <summary>
        <para>Specifies the text of the required mark displayed by the editor caption.</para>
      </summary>
      <param name="requiredMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder.RequiredMarkDisplayMode(DevExpress.AspNetCore.EditorRequiredMarkMode)">
      <summary>
        <para>Sets the required mark display mode.</para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder.ShowColon(System.Boolean)">
      <summary>
        <para>Specifies whether the colon sign is displayed after the caption text.</para>
      </summary>
      <param name="showColon"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder">
      <summary>
        <para>Contains the settings that relate to editor validation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder.DisplayErrors(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="displayErrors"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder.ErrorDisplayMode(DevExpress.AspNetCore.Bootstrap.ErrorDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="errorDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder.ErrorIconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the error icon.</para>
      </summary>
      <param name="errorIconCssClass"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder">
      <summary>
        <para>Contains settings specific to the button that when clicked, navigates a user to the first page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the button&#39;s image.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed in a pager button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format a pager button&#39;s text for display.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBinaryImageBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBinaryImageBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBinaryImageBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder.Bind``1(``0)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder`1.Bind(`0)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.AlignItemCaptionsInAllGroups(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="alignItemCaptionsInAllGroups"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.LayoutType(DevExpress.AspNetCore.Bootstrap.FormLayoutType)">
      <summary>
        <para></para>
      </summary>
      <param name="layoutType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.OnDataBinding(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapFormLayout,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapFormLayout,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.OnLayoutItemDataBound(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapFormLayout,DevExpress.AspNetCore.Bootstrap.IBootstrapLayoutItemDataBoundEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.OptionalMark(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="optionalMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.RequiredMark(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.RequiredMarkDisplayMode(DevExpress.AspNetCore.RequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.ShowItemCaptionColon(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showItemCaptionColon"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutButtonBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutButtonBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutButtonBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutButtonEditBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutButtonEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutButtonEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCalendarBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCalendarBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCalendarBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCheckBoxBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCheckBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCheckBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCheckBoxListBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCheckBoxListBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCheckBoxListBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutComboBoxBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutComboBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutComboBoxBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutComboBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder.Item(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder.ItemCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder.ItemControl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemControl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutCssClassesBuilder.ItemHelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemHelpText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutDateEditBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutDateEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutDateEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutDropDownEditBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutDropDownEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutDropDownEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder.Group(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="group"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder.GroupContent(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupContent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder.GroupHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutHyperLinkBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutHyperLinkBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutHyperLinkBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of a  item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a layout item&#39;s caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a layout item&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the help text element.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder.Item(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a layout item element.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutListBoxBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutListBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutListBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutMemoBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutMemoBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutMemoBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutProgressBarBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutProgressBarBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutProgressBarBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutRadioButtonBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutRadioButtonBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutRadioButtonBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutRadioButtonListBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutRadioButtonListBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutRadioButtonListBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutSpinEditBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutSpinEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutSpinEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTagBoxBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTagBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTagBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTextBoxBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTextBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTextBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTimeEditBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTimeEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutTimeEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutUploadControlBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutUploadControlBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutUploadControlBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder.ActiveTab(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="activeTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder.Content(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="content"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder.Group(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="group"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder.Tab(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tab"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.DayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.NavigationButtonAppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonAppointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.NavigationButtonVisibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ResourcesPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="resourcesPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ScrollAreaHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="scrollAreaHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ShowAllAppointmentsAtTimeCells(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllAppointmentsAtTimeCells"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ShowAllDayArea(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllDayArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ShowDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ShowMoreButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ShowMoreButtonsOnEachColumn(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtonsOnEachColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ShowWorkTimeOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWorkTimeOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.TimeIndicatorDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.TimeIndicatorDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.TimeMarkerVisibility(DevExpress.XtraScheduler.TimeMarkerVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.TimeRulers(System.Action{DevExpress.AspNetCore.Bootstrap.TimeRulerCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.TimeScale(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="timeScale"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.TimeSlots(System.Action{DevExpress.AspNetCore.Bootstrap.TimeSlotCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.VisibleTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.VisibleTimeSnapMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleTimeSnapMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder.WorkTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.AllDayArea(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="allDayArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.AlternateDateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="alternateDateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.BottomMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="bottomMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.DateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.HorizontalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.IconBottomMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBottomMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.IconTopMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTopMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.TimeCellBody(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeCellBody"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.TimeMarker(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarker"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.TimeMarkerLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.TimeRulerHoursItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeRulerHoursItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.TimeRulerMinuteItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeRulerMinuteItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.TopMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="topMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.DeletedKeys">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.Insert">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.IsValid(`0)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.SetErrorText(`0,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <param name="errorText"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.SetErrorText(`1,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="deletedKey"></param>
      <param name="errorText"></param>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridBatchUpdateValues`2.Update">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridBootstrapSpecificSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridBootstrapSpecificSettingsBuilder.Sizing(DevExpress.AspNetCore.Bootstrap.BootstrapSizing)">
      <summary>
        <para></para>
      </summary>
      <param name="sizing"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder">
      <summary>
        <para>Provides the edit cell&#39;s settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder.Caption(System.String)">
      <summary>
        <para>Sets the edit cell&#39;s caption.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder.ColumnSpan(System.Int32)">
      <summary>
        <para>Sets the number of columns in the  that the cell spans.</para>
      </summary>
      <param name="columnSpan"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder.Visible(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether the edit cell that corresponds to the current data column is displayed within the .</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets the edit cell&#39;s position within the .</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImage(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImageButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImageButtonPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageButtonPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImageDeleteButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImageEmptyValueText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageEmptyValueText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImageOpenDialogButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageOpenDialogButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.BinaryImageProgressBar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageProgressBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ButtonEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ButtonEditButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonEditButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ButtonEditClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonEditClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.Calendar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDay(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDayDisabled(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayDisabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDayHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDayOtherMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayOtherMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDayOutOfRange(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayOutOfRange"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDaySelected(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDaySelected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarDayWeekEnd(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayWeekEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarFastNavHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarFastNavigation(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarFastNavItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarFastNavItemOtherPeriod(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavItemOtherPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarFooter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarMonthGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarMonthGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarToday(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CalendarWeekNumber(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarWeekNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CheckBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="checkBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.CheckBoxList(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="checkBoxList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ComboBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="comboBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.DateEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.DateEditTimeSection(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateEditTimeSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.DropDownEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.DropDownWindow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownWindow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.Hyperlink(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="hyperlink"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconBinaryImageDeleteButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBinaryImageDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconBinaryImageOpenDialogButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBinaryImageOpenDialogButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconDecrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconDropDownButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDropDownButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconFastNavBack(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavBack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconFastNavNextPeriod(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavNextPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconFastNavNextYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconFastNavPrevPeriod(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavPrevPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconFastNavPrevYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconIncrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconLargeDecrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconLargeDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconLargeIncrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconLargeIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconListBoxHideFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconListBoxHideFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconListBoxShowFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconListBoxShowFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconNextMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconNextYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconPrevMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrevMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconPrevYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.IconTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.Image(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="image"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ListBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ListBoxFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ListBoxFilterEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxFilterEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ListBoxItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ListBoxSelectAll(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxSelectAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.Memo(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="memo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.ProgressBar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="progressBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.RadioButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="radioButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.RadioButtonList(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="radioButtonList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.SpinEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="spinEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.TagBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.TagBoxInput(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.TagBoxTag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxTag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.TagBoxTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.TextBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridEditorCssClassesBuilder.TimeEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeEdit"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder.Item(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder.ItemCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder.ItemControl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemControl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridFormLayoutCssClassesBuilder.ItemHelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemHelpText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.#ctor(System.String,System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayText"></param>
      <param name="value"></param>
      <param name="query"></param>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.BeginGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.CreateShowAllValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.CreateShowBlanksValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.CreateShowNonBlanksValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.DisplayText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.Query">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridHeaderFilterValue.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridItemTemplateContainerSettings.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridItemTemplateContainerSettings.Eval(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridItemTemplateContainerSettings.KeyValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridItemTemplateContainerSettings.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.Button(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.CurrentPageNumber(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="currentPageNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.Ellipsis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="ellipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.PageNumber(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.Pager(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pager"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPagerCssClassesBuilder.Summary(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="summary"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder">
      <summary>
        <para>Contains the popup edit form&#39;s adaptivity settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.FixedFooter(System.Boolean)">
      <summary>
        <para>Sets whether the footer is fixed on the bottom while scrolling the popup window in adaptive mode.</para>
      </summary>
      <param name="fixedFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.FixedHeader(System.Boolean)">
      <summary>
        <para>Sets whether the header is fixed on the top while scrolling the popup window in adaptive mode.</para>
      </summary>
      <param name="fixedHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign)">
      <summary>
        <para>Sets the value that defines the horizontal alignment of the popup window in adaptive mode.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MaxHeight(System.Int32)">
      <summary>
        <para>Sets the maximum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MaxHeight(System.String)">
      <summary>
        <para>Sets the maximum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MaxWidth(System.Int32)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MaxWidth(System.String)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para>Sets the minimum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MinHeight(System.String)">
      <summary>
        <para>Sets the minimum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.Mode(DevExpress.AspNetCore.PopupControlAdaptivityMode)">
      <summary>
        <para>Specifies the adaptivity mode for the grid&#39;s popup edit form.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.SwitchAtWindowInnerWidth(System.Int32)">
      <summary>
        <para>Sets a value that defines the maximum browser window inner width when the popup window is rendered in adaptive mode.</para>
      </summary>
      <param name="switchAtWindowInnerWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder.VerticalAlign(DevExpress.AspNetCore.PopupAdaptiveVerticalAlign)">
      <summary>
        <para>Sets the value that defines the vertical alignment of the popup window in adaptive mode.</para>
      </summary>
      <param name="verticalAlign"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptiveCommandButtonSettingsBuilder">
      <summary>
        <para>Provide access to properties that allow customizing settings of grid adaptive command buttons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptiveCommandButtonSettingsBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the command button when the grid is in adaptivity mode.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptiveCommandButtonSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para>Specifies the button type that is used to render the current command button.</para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptiveCommandButtonSettingsBuilder.Text(System.String)">
      <summary>
        <para>The command button&#39;s text.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder">
      <summary>
        <para>Contains settings that relate to the grid&#39;s adaptivity.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder.AdaptiveDetailLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder})">
      <summary>
        <para>Provides access to the settings allowing you to customize the adaptive detail row layout.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder.HtmlHelper">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder`1">
      <summary>
        <para>Contains settings that relate to the grid&#39;s adaptivity.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder`1.AdaptiveDetailLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder{`0}})">
      <summary>
        <para>Provides access to the settings allowing you to customize the adaptive detail row layout.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder`1.HtmlHelper">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1.AdaptiveColumnPosition(DevExpress.AspNetCore.GridViewAdaptiveColumnPosition)">
      <summary>
        <para></para>
      </summary>
      <param name="adaptiveColumnPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1.AdaptiveDetailColumnCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="adaptiveDetailColumnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1.AdaptivityMode(DevExpress.AspNetCore.GridViewAdaptivityMode)">
      <summary>
        <para></para>
      </summary>
      <param name="adaptivityMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1.AllowOnlyOneAdaptiveDetailExpanded(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowOnlyOneAdaptiveDetailExpanded"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1.HideDataCellsAtWindowInnerWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="hideDataCellsAtWindowInnerWidth"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnBuilder.AllowDragDrop(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowDragDrop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnBuilder.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnBuilder.HeaderBadge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBandColumnCssClassesBuilder.HeaderCell(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="headerCell"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBaseRowTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder">
      <summary>
        <para>Contains  specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.AllowEndEditOnValidationError(System.Boolean)">
      <summary>
        <para>Specifies whether an editor can lose focus when validation fails.</para>
      </summary>
      <param name="allowEndEditOnValidationError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.AllowRegularDataItemTemplate(System.Boolean)">
      <summary>
        <para>Specifies whether a data item template should be overwritten in a data cell when its editing is completed.</para>
      </summary>
      <param name="allowRegularDataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.AllowValidationOnEndEdit(System.Boolean)">
      <summary>
        <para>Specifies whether an editor value should be validated when editing is completed.</para>
      </summary>
      <param name="allowValidationOnEndEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.AlwaysShowCheckboxesInCheckColumns(System.Boolean)">
      <summary>
        <para>Specifies whether or not Check Column cells should display native checkboxes both in Edit and Browse modes when batch editing is enabled.</para>
      </summary>
      <param name="alwaysShowCheckboxesInCheckColumns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.EditMode(DevExpress.AspNetCore.GridViewBatchEditMode)">
      <summary>
        <para>Specifies which control element (data cell or data row) is used to edit the data.</para>
      </summary>
      <param name="editMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.ErrorImagePosition(DevExpress.AspNetCore.GridBatchEditErrorImagePosition)">
      <summary>
        <para>Sets the position of the validation error image relative to the editor content.</para>
      </summary>
      <param name="errorImagePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.HighlightDeletedRows(System.Boolean)">
      <summary>
        <para>Specifies if the deleted row is highlighted in Batch Edit Mode.</para>
      </summary>
      <param name="highlightDeletedRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.ShowConfirmOnLosingChanges(System.Boolean)">
      <summary>
        <para>Provides the capability to disable the confirmation message.</para>
      </summary>
      <param name="showConfirmOnLosingChanges"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder.StartEditAction(DevExpress.AspNetCore.GridViewBatchStartEditAction)">
      <summary>
        <para>Specifies the action that will be used to begin editing grid data in batch edit mode.</para>
      </summary>
      <param name="startEditAction"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder">
      <summary>
        <para>Provides behavior options for <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowAutoFilter(System.Boolean)">
      <summary>
        <para>Specifies whether auto filtering is allowed.</para>
      </summary>
      <param name="allowAutoFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowCellMerge(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowCellMerge"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowClientEventsOnLoad(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the FocusedElementChanged and SelectionChanged client-side events are invoked on the first load.</para>
      </summary>
      <param name="allowClientEventsOnLoad"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowDragDrop(System.Boolean)">
      <summary>
        <para>Sets whether end-users can drag column headers.</para>
      </summary>
      <param name="allowDragDrop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowEllipsisInText(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowEllipsisInText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowFocusedRow(System.Boolean)">
      <summary>
        <para>Sets whether the focused row is displayed.</para>
      </summary>
      <param name="allowFocusedRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowGroup(System.Boolean)">
      <summary>
        <para>Sets whether grid data can be grouped.</para>
      </summary>
      <param name="allowGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowHeaderFilter(System.Boolean)">
      <summary>
        <para>Specifies whether filtering using the header filter is allowed.</para>
      </summary>
      <param name="allowHeaderFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowSelectByRowClick(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether selection via row clicks is available within the GridView.</para>
      </summary>
      <param name="allowSelectByRowClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowSelectSingleRowOnly(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether multiple row selection is available within the GridView.</para>
      </summary>
      <param name="allowSelectSingleRowOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AllowSort(System.Boolean)">
      <summary>
        <para>Sets whether grid data can be sorted.</para>
      </summary>
      <param name="allowSort"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AutoExpandAllGroups(System.Boolean)">
      <summary>
        <para>Sets whether all group rows displayed within the GridView are automatically expanded.</para>
      </summary>
      <param name="autoExpandAllGroups"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.AutoFilterRowInputDelay(System.Int32)">
      <summary>
        <para>Sets the time interval between the time a user starts typing within the , and filtering is applied.</para>
      </summary>
      <param name="autoFilterRowInputDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.ColumnMoveMode(DevExpress.AspNetCore.GridColumnMoveMode)">
      <summary>
        <para></para>
      </summary>
      <param name="columnMoveMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.ConfirmDelete(System.Boolean)">
      <summary>
        <para>Sets whether the Confirm Delete window is displayed when deleting a data item (row, card or record).</para>
      </summary>
      <param name="confirmDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.EnableRowHotTrack(System.Boolean)">
      <summary>
        <para>Sets whether the GridView displays the hot tracked row.</para>
      </summary>
      <param name="enableRowHotTrack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.EncodeErrorHtml(System.Boolean)">
      <summary>
        <para>Sets whether the control keeps its error row content that is HTML as HTML, or instead, strips out the HTML markers.</para>
      </summary>
      <param name="encodeErrorHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.FilterRowMode(DevExpress.AspNetCore.GridViewFilterRowMode)">
      <summary>
        <para>Sets a value defining whether the  filter is applied automatically or on clicking the Apply button.</para>
      </summary>
      <param name="filterRowMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.HeaderFilterMaxRowCount(System.Int32)">
      <summary>
        <para>Sets the maximum number of records that are scanned to populate a header filter dropdown with unique filter values.</para>
      </summary>
      <param name="headerFilterMaxRowCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.MaxPreviewTextLength(System.Int32)">
      <summary>
        <para>Specifies the maximum length of the preview row text.</para>
      </summary>
      <param name="maxPreviewTextLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.MergeGroupsMode(DevExpress.AspNetCore.GridViewMergeGroupsMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mergeGroupsMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.ProcessColumnMoveOnClient(System.Boolean)">
      <summary>
        <para>Sets a value whether or not column move operations are processed on the client.</para>
      </summary>
      <param name="processColumnMoveOnClient"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.ProcessFocusedRowChangedOnServer(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a change to the focused row should be completely processed on the server side.</para>
      </summary>
      <param name="processFocusedRowChangedOnServer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.ProcessSelectionChangedOnServer(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether selection changes should be processed on the server side.</para>
      </summary>
      <param name="processSelectionChangedOnServer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.SelectionStoringMode(DevExpress.AspNetCore.GridViewSelectionStoringMode)">
      <summary>
        <para>Sets a value that specifies how the control stores the keys of the selected records.</para>
      </summary>
      <param name="selectionStoringMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.SortMode(DevExpress.XtraGrid.ColumnSortMode)">
      <summary>
        <para>Sets how data is sorted.</para>
      </summary>
      <param name="sortMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder.SummariesIgnoreNullValues(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="summariesIgnoreNullValues"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBinaryImageColumnBuilder">
      <summary>
        <para>Represents a data column that displays images from a binary stream.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBinaryImageColumnBuilder.PropertiesBinaryImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBinaryImageColumnBuilder`1">
      <summary>
        <para>Represents a data column that displays images from a binary stream.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBinaryImageColumnBuilder`1.PropertiesBinaryImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBinaryImageEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores BootstrapGridView&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBootstrapSpecificSettingsBuilder.Sizing(DevExpress.AspNetCore.Bootstrap.BootstrapSizing)">
      <summary>
        <para>Specifies the sizing mode of the Grid View elements.</para>
      </summary>
      <param name="sizing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBootstrapSpecificSettingsBuilder.Striped(System.Boolean)">
      <summary>
        <para>Specifies whether the grid rows are striped.</para>
      </summary>
      <param name="striped"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder">
      <summary>
        <para>A control that provides a two-dimensional representation of data from a data source in grid format</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder})">
      <summary>
        <para>Provides access to the grid layout adaptivity settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder.SettingsEditing(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1">
      <summary>
        <para>A control that provides a two-dimensional representation of data from a data source in grid format</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder{`0}})">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1"/> control&#39;s column collection.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.FormatConditions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder{`0}})">
      <summary>
        <para>Provides access to a collection of format condition rules.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.GroupSummary(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder{`0}})">
      <summary>
        <para>Provides access to group summary items.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.KeyFieldName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
        <para></para>
      </summary>
      <param name="keyExpressions"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.PreviewFieldName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para>Sets the name of the data source field whose values are displayed within the preview rows.</para>
      </summary>
      <param name="previewFieldExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilder{`0}})">
      <summary>
        <para>Provides access to the grid layout adaptivity settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.SettingsEditing(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.Templates(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder{`0}})">
      <summary>
        <para>Provides access to the templates used to display the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1"/>&#39;s elements (cells, rows, etc.).</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder`1.TotalSummary(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder{`0}})">
      <summary>
        <para>Provides access to total summary items.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1">
      <summary>
        <para>Serves as the base class that implements the main functionality of .</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Bind(System.Object)">
      <summary>
        <para>Binds the control to the specified data source.</para>
      </summary>
      <param name="dataObject">An object representing the control&#39;s data source.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.BindToLINQ(System.Linq.IQueryable)">
      <summary>
        <para>Binds the Grid View to a queryable data source on the server mode.</para>
      </summary>
      <param name="query">An IQueryable object that specifies the query request to the data service.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.BindToXPO(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Establishes a server-mode data binding via DevExpress eXpress Persistent Objects for .NET (XPO) ORM.</para>
      </summary>
      <param name="session">A session that is used to load and save persistent objects.</param>
      <param name="objectType">The type of an object that describes the target dataset.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.BindToXPO``1(DevExpress.Xpo.XPQuery{``0})">
      <summary>
        <para>Establishes a server-mode data binding via DevExpress eXpress Persistent Objects for .NET (XPO) ORM.</para>
      </summary>
      <param name="query">An object of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class that specifies a query.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Caption(System.String)">
      <summary>
        <para>Sets the text to render in the GridView&#39;s HTML caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder})">
      <summary>
        <para>Lists the client-side events specific to the control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of a web control on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder})">
      <summary>
        <para>Provides access to the  column collection.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder"/>&#39;s functionality.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to the control&#39;s visual elements.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.CssClassesEditor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of cell editors.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.CssClassesFormLayout(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to the Edit Form&#39;s visual elements.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.CssClassesPager(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to the pager&#39;s visual elements.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.EditErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.EnableCallbackAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a specific animation effect is used when a control&#39;s content is updated via a callback.</para>
      </summary>
      <param name="enableCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.EnableCallbackCompression(System.Boolean)">
      <summary>
        <para>Sets whether callback compression is enabled.</para>
      </summary>
      <param name="enableCallbackCompression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.EnableRowsCache(System.Boolean)">
      <summary>
        <para>Sets whether row data caching is enabled.</para>
      </summary>
      <param name="enableRowsCache"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.FormatConditions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder})">
      <summary>
        <para>Provides access to a collection of format condition rules.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.GroupSummary(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder})">
      <summary>
        <para>Provides access to group summary items.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder"/> class.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.KeyFieldName(System.String)">
      <summary>
        <para>Sets the name of the data source key field.</para>
      </summary>
      <param name="keyFieldName">A string value that specifies the name of the data source key field.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.KeyFieldName(System.String[])">
      <summary>
        <para>Sets the names of the data source key fields.</para>
      </summary>
      <param name="keyFieldNames">A string array that specifies the key field names.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnBeforeHeaderFilterFillItems(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewBeforeHeaderFilterFillItemsEventArgs})">
      <summary>
        <para>Enables you to provide custom filter items instead of default ones displayed within a filter dropdown.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnBeforeRender(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para>Enables you to perform custom actions before the control is rendered into a web page.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCommandButtonInitialize(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCommandButtonEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomColumnDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDisplayTextEventArgs})">
      <summary>
        <para>Enables custom display text to be provided for any cell.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomColumnGroup(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomColumnSortEventArgs})">
      <summary>
        <para>Enables you to group data using custom rules.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomColumnSort(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomColumnSortEventArgs})">
      <summary>
        <para>Enables you to sort data using custom rules.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomGroupDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDisplayTextEventArgs})">
      <summary>
        <para>Enables you to provide custom content for group rows.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomJSProperties(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.ICustomJSPropertiesEventArgs})">
      <summary>
        <para>Enables you to supply any server data that can then be parsed on the client.</para>
      </summary>
      <param name="action">A <see cref="T:DevExpress.AspNetCore.ICustomJSPropertiesEventArgs"/> object allowing you to implement custom processing.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomPreviewDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs})">
      <summary>
        <para>Enables you to provide custom display text for preview rows.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomSummaryCalculate(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomSummaryEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnCustomUnboundColumnData(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDataEventArgs})">
      <summary>
        <para>Enables data to be supplied to unbound columns.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnDataBinding(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnHeaderFilterFillItems(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewHeaderFilterEventArgs})">
      <summary>
        <para>Enables you to add custom filter items which filter data by the current column, to ones displayed within a filter dropdown.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para>Enables you to perform custom actions after the control is initialized.</para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.OnSummaryDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapGridView,DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryDisplayTextEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.PreviewEncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the preview row&#39;s display text containing HTML code should be parsed and rendered as a pure HTML markup or should be represented as text on a page.</para>
      </summary>
      <param name="previewEncodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.PreviewFieldName(System.String)">
      <summary>
        <para>Sets the name of the data source field whose values are displayed within the preview rows.</para>
      </summary>
      <param name="previewFieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewRouteCollectionBuilder})">
      <summary>
        <para>Specifies a collection of routes for &#39;s updates or performing other Controller-side operations on demand.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewRouteCollectionBuilder"/>&#39;s functionality.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Settings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder})">
      <summary>
        <para>Provides access to the control&#39;s display options.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsBehavior(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBehaviorSettingsBuilder})">
      <summary>
        <para>Provides access to the control&#39;s behavior settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBootstrapSpecificSettingsBuilder})">
      <summary>
        <para>Provides access to the control&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsCommandButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder})">
      <summary>
        <para>Provides access to the settings of the control&#39;s command buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsCookies(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder})">
      <summary>
        <para>Provides access to the control&#39;s cookie and layout settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsCustomizationDialog(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsDetail(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsPager(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder})">
      <summary>
        <para>Provides access to the pager&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsPopup(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPopupControlSettingsBuilder})">
      <summary>
        <para>Provides access to the settings of different popup elements.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsResizing(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewResizingSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsSearchPanel(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.SettingsText(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder})">
      <summary>
        <para>Provides access to the control&#39;s text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Templates(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder})">
      <summary>
        <para>Provides access to the templates used to display the &#39;s elements (cells, rows, etc.).</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder"/> class.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.Toolbars(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCollectionBuilder})">
      <summary>
        <para>Provides access to the collection of the control&#39;s toolbars.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilderBase`1.TotalSummary(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder})">
      <summary>
        <para>Provides access to total summary items.</para>
      </summary>
      <param name="config">An <see cref="T:System.Action"/> that configures the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder"/> class.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewButtonEditColumnBuilder">
      <summary>
        <para>Represents a data column with the button editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewButtonEditColumnBuilder.PropertiesButtonEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewButtonEditColumnBuilder`1">
      <summary>
        <para>Represents a data column with the button editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewButtonEditColumnBuilder`1.PropertiesButtonEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapButtonEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder">
      <summary>
        <para>Represents a Boolean data column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder.PropertiesCheckEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder`1">
      <summary>
        <para>Represents a Boolean data column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder`1.PropertiesCheckEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckBoxPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditChangesCanceling(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditChangesCanceling"/> event.</para>
      </summary>
      <param name="batchEditChangesCanceling"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditChangesSaving(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditChangesSaving"/> event.</para>
      </summary>
      <param name="batchEditChangesSaving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditConfirmShowing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditConfirmShowing"/> event.</para>
      </summary>
      <param name="batchEditConfirmShowing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditEndEditing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditEndEditing"/> event.</para>
      </summary>
      <param name="batchEditEndEditing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditRowDeleting(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditRowDeleting"/> event.</para>
      </summary>
      <param name="batchEditRowDeleting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditRowInserting(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditRowInserting"/> event.</para>
      </summary>
      <param name="batchEditRowInserting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditRowRecovering(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="batchEditRowRecovering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditRowValidating(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditRowValidating"/> event.</para>
      </summary>
      <param name="batchEditRowValidating"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditStartEditing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditStartEditing"/> event.</para>
      </summary>
      <param name="batchEditStartEditing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BatchEditTemplateCellFocused(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.BatchEditTemplateCellFocused"/> event.</para>
      </summary>
      <param name="batchEditTemplateCellFocused"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client BeginCallback event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client CallbackError event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.ColumnGrouping(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.ColumnGrouping"/> event.</para>
      </summary>
      <param name="columnGrouping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.ColumnMoving(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.ColumnMoving"/> event.</para>
      </summary>
      <param name="columnMoving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.ColumnSorting(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.ColumnSorting"/> event.</para>
      </summary>
      <param name="columnSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.ColumnStartDragging(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.ColumnStartDragging"/> event.</para>
      </summary>
      <param name="columnStartDragging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.CustomButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.CustomButtonClick"/> event.</para>
      </summary>
      <param name="customButtonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.DetailRowCollapsing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.DetailRowCollapsing"/> event.</para>
      </summary>
      <param name="detailRowCollapsing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.DetailRowExpanding(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.DetailRowExpanding"/> event.</para>
      </summary>
      <param name="detailRowExpanding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client EndCallback event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.FocusedCellChanging(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.FocusedCellChanging"/> event.</para>
      </summary>
      <param name="focusedCellChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.FocusedRowChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.FocusedRowChanged"/> event.</para>
      </summary>
      <param name="focusedRowChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.RowClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.RowClick"/> event.</para>
      </summary>
      <param name="rowClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.RowCollapsing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.RowCollapsing"/> event.</para>
      </summary>
      <param name="rowCollapsing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.RowDblClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.RowDblClick"/> event.</para>
      </summary>
      <param name="rowDblClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.RowExpanding(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.RowExpanding"/> event.</para>
      </summary>
      <param name="rowExpanding"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.RowFocusing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rowFocusing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.SelectionChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client GridView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientGridView.SelectionChanged"/> event.</para>
      </summary>
      <param name="selectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewClientSideEventsBuilder.ToolbarItemClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientGridBase.ToolbarItemClick"/> event.</para>
      </summary>
      <param name="toolbarItemClick"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.AdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="adaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.AllowTextTruncationInAdaptiveMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowTextTruncationInAdaptiveMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.ExportWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="exportWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.FilterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="filterTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.FilterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFilterCellTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="filterTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.FooterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="footerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.FooterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFooterCellTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="footerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.GroupFooterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="groupFooterTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.GroupFooterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="groupFooterTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.HeaderCaptionTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="headerCaptionTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.HeaderCaptionTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="headerCaptionTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.ToString">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnBaseBuilder`1.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder">
      <summary>
        <para>Represents the GridView&#39;s column collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.Add">
      <summary>
        <para>Adds the specified column to the collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddBandColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddBinaryImageColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddButtonEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddCheckColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddComboBoxColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddCommandColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddDateEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddDropDownEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddHyperLinkColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddImageColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddMemoColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddProgressBarColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddSpinEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddTagBoxColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddTextColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder.AddTimeEditColumn">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1">
      <summary>
        <para>Represents the GridView&#39;s column collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddBinaryImageColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddButtonEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddCheckColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddComboBoxColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddDateEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddDropDownEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddHyperLinkColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddImageColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddMemoColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddProgressBarColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddSpinEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddTagBoxColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddTextColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder`1.AddTimeEditColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of a  column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder.DataCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a data cell element.</para>
      </summary>
      <param name="dataCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder.EditCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an edit cell element.</para>
      </summary>
      <param name="editCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder.FilterCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a filter cell element.</para>
      </summary>
      <param name="filterCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder.FooterCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a footer cell element.</para>
      </summary>
      <param name="footerCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder.GroupFooterCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a group footer cell element.</para>
      </summary>
      <param name="groupFooterCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder.HeaderCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a column header cell element.</para>
      </summary>
      <param name="headerCell"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.ClearButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.EnableMonthNavigation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMonthNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.EnableMultiSelect(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMultiSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.EnableYearNavigation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableYearNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.FastNavProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.FirstDayOfWeek(DevExpress.AspNetCore.FirstDayOfWeek)">
      <summary>
        <para></para>
      </summary>
      <param name="firstDayOfWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.HighlightToday(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.HighlightWeekends(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightWeekends"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.MaxDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.MinDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.ShowClearButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.ShowDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.ShowTodayButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showTodayButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.ShowWeekNumbers(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWeekNumbers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder.TodayButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayButtonText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.CalendarColumnCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarColumnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.ClearButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.EditFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.FastNavProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCalendarFastNavPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.MaxDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.MaxDayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxDayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.MinDate(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="minDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.MinDayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minDayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder.TodayButtonText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayButtonText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder">
      <summary>
        <para>Represents a layout item within the Grid View&#39;s edit form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.BeginRow(System.Boolean)">
      <summary>
        <para>Specifies whether an item should be rendered within a new row.</para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.Caption(System.String)">
      <summary>
        <para>Sets the text displayed in the layout item.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para>Provides access to the item&#39;s caption settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the layout item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ColSpanLg(System.Int32)">
      <summary>
        <para>Specifies the number of virtual columns an item occupies within a Form Layout on screens with a resolution bigger than or equal to 992px.</para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ColSpanMd(System.Int32)">
      <summary>
        <para>Specifies the number of virtual columns an item occupies within a Form Layout on screens with a resolution bigger than or equal to 768px.</para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ColSpanSm(System.Int32)">
      <summary>
        <para>Specifies the number of virtual columns an item occupies within a Form Layout on screens with a resolution bigger than or equal to 576px.</para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ColumnName(System.String)">
      <summary>
        <para>Sets the name of a column assigned to the current item.</para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a Form Layout item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current layout item help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para>Provides access to the help text settings within a layout item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para>Sets the current layout item&#39;s horizontal alignment.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current layout item or layout group.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.RequiredMarkDisplayMode(DevExpress.AspNetCore.FieldRequiredMarkMode)">
      <summary>
        <para>Sets the required mark visibility mode.</para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value that defines whether to show or hide the layout item&#39;s caption.</para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the particular column layout item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the particular column layout item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current layout item or group.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnLayoutItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current layout item or group amongst the visible items in a group (or at a control&#39;s root level).</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewComboBoxColumnBuilder">
      <summary>
        <para>Represents a data column with the combo box editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewComboBoxColumnBuilder.PropertiesComboBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewComboBoxColumnBuilder`1">
      <summary>
        <para>Represents a data column with the combo box editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewComboBoxColumnBuilder`1.PropertiesComboBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapComboBoxPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder">
      <summary>
        <para>Provides settings that affect the command button&#39;s appearance and functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder.CssClass(System.String)">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a command button.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon to display within the command button.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para>Specifies the command button&#39;s render mode.</para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder.Text(System.String)">
      <summary>
        <para>The command button&#39;s text.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder">
      <summary>
        <para>Provide access to properties that allow customizing the settings of grid command buttons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.ApplyFilterButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>This member is not in effect for this class. It is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio designer tools.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.CancelButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>The Cancel command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.ClearFilterButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>This member is not in effect for this class. It is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio designer tools.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.CustomizationDialogApplyButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogCommandButtonSettingsBuilder})">
      <summary>
        <para>The Apply button&#39;s settings in the Customization Dialog.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.CustomizationDialogCloseButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogCommandButtonSettingsBuilder})">
      <summary>
        <para>The Close button&#39;s settings in the Customization Dialog%&gt;.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.DeleteButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>The Delete command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.EditButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>The Edit command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a command button&#39;s display text keeps any of its values that are HTML as HTML, or instead, strips out the HTML markers.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.HideAdaptiveDetailButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptiveCommandButtonSettingsBuilder})">
      <summary>
        <para>The Hide Adaptive Detail command item&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.NewButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>The New command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.RecoverButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>This member is not in effect for this class. It is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio designer tools.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para>Specifies the render mode of command buttons in GridView.</para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.SearchPanelApplyButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder})">
      <summary>
        <para>Settings of the Apply command button displayed in the search panel.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.SearchPanelClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder})">
      <summary>
        <para>Settings of the Clear command button displayed in the search panel.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.SelectButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>The Select command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.ShowAdaptiveDetailButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptiveCommandButtonSettingsBuilder})">
      <summary>
        <para>The Show Adaptive Detail command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonsSettingsBuilder.UpdateButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandButtonSettingsBuilder})">
      <summary>
        <para>The Update command button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder">
      <summary>
        <para>Represents a command column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.AllowDragDrop(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether end-users can drag the column&#39;s header.</para>
      </summary>
      <param name="allowDragDrop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ButtonRenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para>Specifies the render mode of the command buttons for the current command column.</para>
      </summary>
      <param name="buttonRenderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.CellRowSpan(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cellRowSpan"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a  command column.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.CustomButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.HeaderBadge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the command column header.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.HorizontalAlign(DevExpress.AspNetCore.HorizontalAlign)">
      <summary>
        <para>This property is not in effect for the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder"/> class.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.MinWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.SelectAllCheckboxMode(DevExpress.AspNetCore.GridViewSelectAllCheckBoxMode)">
      <summary>
        <para>Specifies the Select All check box visibility and selection mode.</para>
      </summary>
      <param name="selectAllCheckboxMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowApplyFilterButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Apply command button is displayed in the command column.</para>
      </summary>
      <param name="showApplyFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowCancelButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Cancel command button is displayed in the command column.</para>
      </summary>
      <param name="showCancelButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowClearFilterButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Clear command button is displayed in the command column.</para>
      </summary>
      <param name="showClearFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowDeleteButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Delete command button is displayed in the command column.</para>
      </summary>
      <param name="showDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowEditButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Edit command button is displayed in the command column.</para>
      </summary>
      <param name="showEditButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowInCustomizationDialog(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showInCustomizationDialog"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowNewButton(System.Boolean)">
      <summary>
        <para>Specifies whether the New command button is displayed in the command column.</para>
      </summary>
      <param name="showNewButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowNewButtonInHeader(System.Boolean)">
      <summary>
        <para>Specifies whether the New command button is displayed in the command column header.</para>
      </summary>
      <param name="showNewButtonInHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowRecoverButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Recover command button is displayed in the command column.</para>
      </summary>
      <param name="showRecoverButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowSelectButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Select command button is displayed in the command column.</para>
      </summary>
      <param name="showSelectButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowSelectCheckbox(System.Boolean)">
      <summary>
        <para>Sets whether an editor(a check box or radio button) used to select/deselect data rows is shown.</para>
      </summary>
      <param name="showSelectCheckbox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnBuilder.ShowUpdateButton(System.Boolean)">
      <summary>
        <para>Specifies whether the Update command button is displayed in the command column.</para>
      </summary>
      <param name="showUpdateButton"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of a  command column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder.Cell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a cell element.</para>
      </summary>
      <param name="cell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder.FilterCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a filter cell element.</para>
      </summary>
      <param name="filterCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder.FooterCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a footer cell element.</para>
      </summary>
      <param name="footerCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder.GroupFooterCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a group footer cell element.</para>
      </summary>
      <param name="groupFooterCell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCssClassesBuilder.HeaderCell(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a column header cell element.</para>
      </summary>
      <param name="headerCell"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonBuilder">
      <summary>
        <para>Represents a custom command button.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonBuilder.CssClass(System.String)">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a custom button located within a command column.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon to display within the custom button.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonBuilder.ID(System.String)">
      <summary>
        <para>Sets a value that identifies the custom button.</para>
      </summary>
      <param name="iD"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonBuilder.Text(System.String)">
      <summary>
        <para>Sets the custom button&#39;s text.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonBuilder.Visibility(DevExpress.AspNetCore.GridViewCustomButtonVisibility)">
      <summary>
        <para>Sets a value that specifies in which rows the custom button is displayed.</para>
      </summary>
      <param name="visibility"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonCollectionBuilder">
      <summary>
        <para>A collection of custom command buttons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCommandColumnCustomButtonCollectionBuilder.Add">
      <summary>
        <para>Adds the specified array of items to the end of the collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder">
      <summary>
        <para>Provides cookies and layout settings for <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.CookiesID(System.String)">
      <summary>
        <para>Sets the cookie&#39;s name (identifier).</para>
      </summary>
      <param name="cookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets whether cookies are enabled.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StoreColumnsHierarchy(System.Boolean)">
      <summary>
        <para>Sets whether a cookie contains information on a column&#39;s hierarchy.</para>
      </summary>
      <param name="storeColumnsHierarchy"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StoreColumnsVisiblePosition(System.Boolean)">
      <summary>
        <para>Sets whether a cookie and layout data contain information on a column&#39;s visible position.</para>
      </summary>
      <param name="storeColumnsVisiblePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StoreColumnsWidth(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeColumnsWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StoreFiltering(System.Boolean)">
      <summary>
        <para>Sets whether a cookie and layout data contain information on the filter criteria applied to the control.</para>
      </summary>
      <param name="storeFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StoreGroupingAndSorting(System.Boolean)">
      <summary>
        <para>Sets whether a cookie and layout data contain information on sorting and grouping applied to GridView.</para>
      </summary>
      <param name="storeGroupingAndSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StorePaging(System.Boolean)">
      <summary>
        <para>Sets whether a cookie and layout data contain information on the active page.</para>
      </summary>
      <param name="storePaging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.StoreSearchPanelFiltering(System.Boolean)">
      <summary>
        <para>Sets whether a cookie and layout data contain information on the search panel filter.</para>
      </summary>
      <param name="storeSearchPanelFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCookiesSettingsBuilder.Version(System.String)">
      <summary>
        <para>Sets the cookie&#39;s version.</para>
      </summary>
      <param name="version"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.CommandColumn(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a Command Column element.</para>
      </summary>
      <param name="commandColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.CommandColumnItem(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a command column item element.</para>
      </summary>
      <param name="commandColumnItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.EditForm(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Edit Form element.</para>
      </summary>
      <param name="editForm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.FilterRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Filter Row element.</para>
      </summary>
      <param name="filterRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.FocusedRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the currently focused row element.</para>
      </summary>
      <param name="focusedRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.FooterRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a footer row element.</para>
      </summary>
      <param name="footerRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.GroupFooterRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a group footer row element.</para>
      </summary>
      <param name="groupFooterRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.GroupRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a group row element.</para>
      </summary>
      <param name="groupRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.HeaderRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the header row element.</para>
      </summary>
      <param name="headerRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconCollapseButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a Collapse Group button.</para>
      </summary>
      <param name="iconCollapseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconCustomizationDialogApply(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Customization Dialog&#39;s Apply button.</para>
      </summary>
      <param name="iconCustomizationDialogApply"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconCustomizationDialogClose(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Customization Dialog&#39;s Close button.</para>
      </summary>
      <param name="iconCustomizationDialogClose"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconDetailCollapseButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a Collapse Detail button.</para>
      </summary>
      <param name="iconDetailCollapseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconDetailExpandButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an Expand Detail button.</para>
      </summary>
      <param name="iconDetailExpandButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconDragAndDropArrowDown(System.String)">
      <summary>
        <para>The CSS class of an image displayed at the column header&#39;s bottom when it is dragged by an end-user.</para>
      </summary>
      <param name="iconDragAndDropArrowDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconDragAndDropArrowLeft(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDragAndDropArrowLeft"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconDragAndDropArrowRight(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDragAndDropArrowRight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconDragAndDropArrowUp(System.String)">
      <summary>
        <para>The CSS class of an image displayed at the column header&#39;s top when it is dragged by an end-user.</para>
      </summary>
      <param name="iconDragAndDropArrowUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconErrorItem(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an error item.</para>
      </summary>
      <param name="iconErrorItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconExpandButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an Expand Group button.</para>
      </summary>
      <param name="iconExpandButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconFilterRowButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within a filter button.</para>
      </summary>
      <param name="iconFilterRowButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconHeaderFilter(System.String)">
      <summary>
        <para>The CSS class of a header filter button icon.</para>
      </summary>
      <param name="iconHeaderFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconHeaderSortDown(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the header of a column sorted in the descending order.</para>
      </summary>
      <param name="iconHeaderSortDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconHeaderSortUp(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the header of a column sorted in the ascending order.</para>
      </summary>
      <param name="iconHeaderSortUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconHideAdaptiveDetailButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Hide Adaptive Detail button.</para>
      </summary>
      <param name="iconHideAdaptiveDetailButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconParentGroupRows(System.String)">
      <summary>
        <para>The CSS class of an icon used to indicate to which group the data rows belongs.</para>
      </summary>
      <param name="iconParentGroupRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconShowAdaptiveDetailButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Show Adaptive Detail button.</para>
      </summary>
      <param name="iconShowAdaptiveDetailButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarCancel(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Cancel toolbar item.</para>
      </summary>
      <param name="iconToolbarCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarClearFilter(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Clear Filter toolbar item.</para>
      </summary>
      <param name="iconToolbarClearFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarClearGrouping(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Clear Grouping toolbar item.</para>
      </summary>
      <param name="iconToolbarClearGrouping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarClearSorting(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Clear Sorting toolbar item.</para>
      </summary>
      <param name="iconToolbarClearSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarCollapseDetailRow(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Collapse Detail toolbar item.</para>
      </summary>
      <param name="iconToolbarCollapseDetailRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarCollapseRow(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Collapse toolbar item.</para>
      </summary>
      <param name="iconToolbarCollapseRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarDelete(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Delete toolbar item.</para>
      </summary>
      <param name="iconToolbarDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarEdit(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Edit toolbar item.</para>
      </summary>
      <param name="iconToolbarEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarExpandDetailRow(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Expand Detail toolbar item.</para>
      </summary>
      <param name="iconToolbarExpandDetailRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarExpandRow(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Expand toolbar item.</para>
      </summary>
      <param name="iconToolbarExpandRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarFullCollapse(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Collapse All toolbar item.</para>
      </summary>
      <param name="iconToolbarFullCollapse"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarFullExpand(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Expand All toolbar item.</para>
      </summary>
      <param name="iconToolbarFullExpand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarNew(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the New toolbar item.</para>
      </summary>
      <param name="iconToolbarNew"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarRefresh(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Refresh toolbar item.</para>
      </summary>
      <param name="iconToolbarRefresh"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarShowCustomizationDialog(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Customization Dialog toolbar item.</para>
      </summary>
      <param name="iconToolbarShowCustomizationDialog"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarShowFilterRow(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Filter Row toolbar item.</para>
      </summary>
      <param name="iconToolbarShowFilterRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarShowFilterRowMenu(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Filter Row Menu toolbar item.</para>
      </summary>
      <param name="iconToolbarShowFilterRowMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarShowFooter(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Footer toolbar item.</para>
      </summary>
      <param name="iconToolbarShowFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarShowGroupPanel(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Group Panel toolbar item.</para>
      </summary>
      <param name="iconToolbarShowGroupPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarShowSearchPanel(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Search Panel toolbar item.</para>
      </summary>
      <param name="iconToolbarShowSearchPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.IconToolbarUpdate(System.String)">
      <summary>
        <para>The CSS class of an icon displayed within the Update toolbar item.</para>
      </summary>
      <param name="iconToolbarUpdate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.InlineEditRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an edit row element.</para>
      </summary>
      <param name="inlineEditRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.PanelBodyBottom(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a panel body&#39;s bottom.</para>
      </summary>
      <param name="panelBodyBottom"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.PanelBodyTop(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a panel body&#39;s top.</para>
      </summary>
      <param name="panelBodyTop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.PanelHeading(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a panel&#39;s header.</para>
      </summary>
      <param name="panelHeading"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.PreviewRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a preview row element.</para>
      </summary>
      <param name="previewRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.Row(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a row element.</para>
      </summary>
      <param name="row"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.SelectedRow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a selected row element.</para>
      </summary>
      <param name="selectedRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCssClassesBuilder.Table(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the table element.</para>
      </summary>
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogCommandButtonSettingsBuilder">
      <summary>
        <para>Provides settings that affect the customization dialog&#39;s command button appearance and functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogCommandButtonSettingsBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the command button.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogCommandButtonSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para>Specifies the render mode of command buttons in the</para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogCommandButtonSettingsBuilder.Text(System.String)">
      <summary>
        <para>The command button&#39;s text.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder.ShowColumnChooserPage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showColumnChooserPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder.ShowFilteringPage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showFilteringPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder.ShowGroupingPage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showGroupingPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCustomizationDialogSettingsBuilder.ShowSortingPage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showSortingPage"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilder">
      <summary>
        <para>Serves as a base for classes that represent data columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilder.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilder`1">
      <summary>
        <para>Serves as a base for classes that represent data columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilder`1.Columns(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.CellRowSpan(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cellRowSpan"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a Grid View data column.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.DataItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying data cells within the current column.</para>
      </summary>
      <param name="dataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.DataItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying data cells within the current column.</para>
      </summary>
      <param name="dataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.EditItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying edit cells which correspond to the current column.</para>
      </summary>
      <param name="editItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.EditItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying edit cells which correspond to the current column.</para>
      </summary>
      <param name="editItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.FieldName(System.String)">
      <summary>
        <para>Sets the name of the database field assigned to the current column.</para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.GroupIndex(System.Int32)">
      <summary>
        <para>Sets a value that specifies whether the column takes part in grouping and at which level.</para>
      </summary>
      <param name="groupIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.GroupRowTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying group rows.</para>
      </summary>
      <param name="groupRowTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.GroupRowTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying group rows.</para>
      </summary>
      <param name="groupRowTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.HeaderBadge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Specifies settings of a badge displayed within the data column header.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.HorizontalAlign(DevExpress.AspNetCore.HorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.MinWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para>Sets whether end-users are allowed to edit the column&#39;s cell values.</para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.Settings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder})">
      <summary>
        <para>Provides access to the column&#39;s options.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.SettingsEditForm(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridColumnEditFormSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.SettingsHeaderFilter(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.ShowInCustomizationDialog(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showInCustomizationDialog"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.SortIndex(System.Int32)">
      <summary>
        <para>Sets the column&#39;s position among sorted columns.</para>
      </summary>
      <param name="sortIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.SortOrder(DevExpress.Data.ColumnSortOrder)">
      <summary>
        <para>Sets the column&#39;s sort order.</para>
      </summary>
      <param name="sortOrder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.UnboundExpression(System.String)">
      <summary>
        <para>Sets an expression used to evaluate values for the current unbound column.</para>
      </summary>
      <param name="unboundExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`1.UnboundType(DevExpress.Data.UnboundColumnType)">
      <summary>
        <para>Sets the data type and binding mode of the column.</para>
      </summary>
      <param name="unboundType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`2.DataItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings{`1}})">
      <summary>
        <para>Sets a template for displaying data cells within the current column.</para>
      </summary>
      <param name="dataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`2.EditItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings{`1}})">
      <summary>
        <para>Sets a template for displaying edit cells which correspond to the current column.</para>
      </summary>
      <param name="editItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnBuilderBase`2.GroupRowTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings{`1}})">
      <summary>
        <para>Sets a template for displaying group rows.</para>
      </summary>
      <param name="groupRowTemplate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder">
      <summary>
        <para>Contains the column&#39;s header filter specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder.DateRangeCalendarSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangeCalendarSettingsBuilder})">
      <summary>
        <para>The settings of the header filter calendar.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder.DateRangePeriodsSettings(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder})">
      <summary>
        <para>The settings of the header filter periods section.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder.DateRangePickerSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewColumnDateRangePickerSettingsBuilder})">
      <summary>
        <para>The settings of the header filter date range picker.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder.ListBoxSearchUISettings(System.Action{DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnHeaderFilterSettingsBuilder.Mode(DevExpress.AspNetCore.GridHeaderFilterMode)">
      <summary>
        <para>Specifies the type of header filter used for the current column.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder">
      <summary>
        <para>Provides options for data columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowAutoFilter(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether end-users can filter data by the column&#39;s values.</para>
      </summary>
      <param name="allowAutoFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowAutoFilterTextInputTimer(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether the filter expression entered by an end-user within the auto-filter row cell is automatically applied.</para>
      </summary>
      <param name="allowAutoFilterTextInputTimer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowCellMerge(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowCellMerge"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowDragDrop(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether end-users can drag the column&#39;s header.</para>
      </summary>
      <param name="allowDragDrop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowEllipsisInText(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowEllipsisInText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowFilterBySearchPanel(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether end-users can filter data by the column&#39;s (row&#39;s for VerticalGrid)  display text using the search panel.</para>
      </summary>
      <param name="allowFilterBySearchPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowGroup(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether grid data can be grouped by the current column.</para>
      </summary>
      <param name="allowGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowHeaderFilter(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether the filter button is displayed within the current column&#39;s (row&#39;s for VerticalGrid) header.</para>
      </summary>
      <param name="allowHeaderFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AllowSort(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether the column&#39;s (row&#39;s for VerticalGrid) values can be sorted.</para>
      </summary>
      <param name="allowSort"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.AutoFilterCondition(DevExpress.AspNetCore.AutoFilterCondition)">
      <summary>
        <para>Specifies the type of comparison operator used by filter row to create filter conditions for the current column.</para>
      </summary>
      <param name="autoFilterCondition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.FilterMode(DevExpress.AspNetCore.ColumnFilterMode)">
      <summary>
        <para>Sets how column (row for VerticalGrid) values are filtered.</para>
      </summary>
      <param name="filterMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.GroupInterval(DevExpress.XtraGrid.ColumnGroupInterval)">
      <summary>
        <para>Sets how data rows are grouped when grouping by the current column is applied.</para>
      </summary>
      <param name="groupInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.ShowEditorInBatchEditMode(System.Boolean)">
      <summary>
        <para>Specifies whether an editor is displayed for a read-only cell in batch edit mode.</para>
      </summary>
      <param name="showEditorInBatchEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.ShowFilterRowMenu(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether filter row buttons are displayed within the auto filter row.</para>
      </summary>
      <param name="showFilterRowMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.ShowFilterRowMenuLikeItem(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets whether the Like item is displayed within the filter row menu.</para>
      </summary>
      <param name="showFilterRowMenuLikeItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataColumnSettingsBuilder.SortMode(DevExpress.XtraGrid.ColumnSortMode)">
      <summary>
        <para>Sets how the column&#39;s (row&#39;s for VerticalGrid) data is sorted when sorting is applied to it.</para>
      </summary>
      <param name="sortMode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDateColumnBuilder">
      <summary>
        <para>Represents a data column used to display DateTime values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDateColumnBuilder.PropertiesDateEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDateColumnBuilder`1">
      <summary>
        <para>Represents a data column used to display DateTime values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDateColumnBuilder`1.PropertiesDateEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder.AllowOnlyOneMasterRowExpanded(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowOnlyOneMasterRowExpanded"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder.ExportIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="exportIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder.ExportMode(DevExpress.AspNetCore.GridViewDetailExportMode)">
      <summary>
        <para></para>
      </summary>
      <param name="exportMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder.ShowDetailButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDetailButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailSettingsBuilder.ShowDetailRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDetailRow"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDropDownEditColumnBuilder">
      <summary>
        <para>Represents a data column with an editor containing a customizable dropdown window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDropDownEditColumnBuilder.PropertiesDropDownEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDropDownEditColumnBuilder`1">
      <summary>
        <para>Represents a data column with an editor containing a customizable dropdown window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDropDownEditColumnBuilder`1.PropertiesDropDownEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDropDownEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder">
      <summary>
        <para>Contains Popup Edit Form specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.AllowResize(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the popup edit form can be resized by end-users on the client side.</para>
      </summary>
      <param name="allowResize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.CloseOnEscape(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value specifying whether a popup edit form is closed when an end-user presses the ESC key.</para>
      </summary>
      <param name="closeOnEscape"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.Height(System.Int32)">
      <summary>
        <para>Sets the popup edit form&#39;s height.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.Height(System.String)">
      <summary>
        <para>Sets the popup edit form&#39;s height.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.PopupHorizontalAlign)">
      <summary>
        <para>Sets the popup edit form&#39;s horizontal alignment.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.HorizontalOffset(System.Int32)">
      <summary>
        <para>Sets a value that indicates the distance that the popup edit form is offset from its baseline in the horizontal direction. This is a dependency property.</para>
      </summary>
      <param name="horizontalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para>Sets the minimum height of the popup edit form&#39;s popup window.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.MinHeight(System.String)">
      <summary>
        <para>Sets the minimum height of the popup edit form&#39;s popup window.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of popup edit form&#39;s popup window.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of popup edit form&#39;s popup window.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.Modal(System.Boolean)">
      <summary>
        <para>Sets whether the popup edit form is displayed in modal mode.</para>
      </summary>
      <param name="modal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.PopupAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para>Sets a value specifying the animation type used to show the popup edit form.</para>
      </summary>
      <param name="popupAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.ResizingMode(DevExpress.AspNetCore.ResizingMode)">
      <summary>
        <para>Sets a value that specifies when the popup edit form being resized should be redrawn.</para>
      </summary>
      <param name="resizingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridPopupEditFormAdaptivitySettingsBuilder})">
      <summary>
        <para>Sets the popup edit form&#39;s adaptivity settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.ShowCloseButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether or not to display the popup edit form&#39;s close button.</para>
      </summary>
      <param name="showCloseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.ShowFooter(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether or not to display the popup edit form&#39;s footer.</para>
      </summary>
      <param name="showFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the popup edit form&#39;s title heading is displayed.</para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.ShowPageScrollbarWhenModal(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a browser&#39;s scroll bars can be displayed when the edit form is shown in the modal mode.</para>
      </summary>
      <param name="showPageScrollbarWhenModal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.ShowViewportScrollbarWhenModal(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the vertical and horizontal scroll bars can be displayed in the viewport when a popup window is shown in modal mode.</para>
      </summary>
      <param name="showViewportScrollbarWhenModal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.VerticalAlign(DevExpress.AspNetCore.PopupVerticalAlign)">
      <summary>
        <para>Sets the popup edit form&#39;s vertical alignment.</para>
      </summary>
      <param name="verticalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.VerticalOffset(System.Int32)">
      <summary>
        <para>Sets a value that indicates the distance that the popup edit form is offset from its baseline in the vertical direction. This is a dependency property.</para>
      </summary>
      <param name="verticalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the popup edit form&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder.Width(System.String)">
      <summary>
        <para>Sets the popup edit form&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings.CancelAction">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings.UpdateAction">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings.ValidationGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilder">
      <summary>
        <para>Provides editing settings for <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilder.FormLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder})">
      <summary>
        <para>Provides access to the settings allowing you to customize the form layout.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilder`1.FormLayoutProperties(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilderBase`1.BatchEditSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBatchEditSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilderBase`1.EditFormColumnSpan(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormColumnSpan"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilderBase`1.Mode(DevExpress.AspNetCore.GridViewEditingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditingSettingsBuilderBase`1.NewItemRowPosition(DevExpress.AspNetCore.GridViewNewItemRowPosition)">
      <summary>
        <para></para>
      </summary>
      <param name="newItemRowPosition"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings.ValidationGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditItemTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of  editors.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImage(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImageButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImageButtonPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageButtonPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImageDeleteButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImageEmptyValueText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageEmptyValueText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImageOpenDialogButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageOpenDialogButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.BinaryImageProgressBar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageProgressBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ButtonEdit(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Button Edit control&#39;s root element.</para>
      </summary>
      <param name="buttonEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ButtonEditButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Button Edit&#39;s button element.</para>
      </summary>
      <param name="buttonEditButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ButtonEditClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Button Edit&#39;s Clear button element.</para>
      </summary>
      <param name="buttonEditClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.Calendar(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s root element.</para>
      </summary>
      <param name="calendar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button displayed within the Calendar control.</para>
      </summary>
      <param name="calendarButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDay(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to applied to a calendar day element.</para>
      </summary>
      <param name="calendarDay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDayDisabled(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a disabled calendar day element.</para>
      </summary>
      <param name="calendarDayDisabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDayHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s day of the week header element.</para>
      </summary>
      <param name="calendarDayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDayOtherMonth(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar day that does not belong to the current month.</para>
      </summary>
      <param name="calendarDayOtherMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDayOutOfRange(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar day that does not belong the active date range.</para>
      </summary>
      <param name="calendarDayOutOfRange"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDaySelected(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a selected calendar day element.</para>
      </summary>
      <param name="calendarDaySelected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarDayWeekEnd(System.String)">
      <summary>
        <para>Sets the name of a CSS class  applied to a calendar weekend day element.</para>
      </summary>
      <param name="calendarDayWeekEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarFastNavHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s area that allows a user to return back to the previous mode within the fast navigation area.</para>
      </summary>
      <param name="calendarFastNavHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarFastNavigation(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s fast navigation panel.</para>
      </summary>
      <param name="calendarFastNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarFastNavItem(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s fast navigation area items.</para>
      </summary>
      <param name="calendarFastNavItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarFastNavItemOtherPeriod(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s fast navigation area items that belong to the neighboring period.</para>
      </summary>
      <param name="calendarFastNavItemOtherPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarFooter(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s footer element.</para>
      </summary>
      <param name="calendarFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarHeader(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s header element.</para>
      </summary>
      <param name="calendarHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarMonthGrid(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a calendar grid element.</para>
      </summary>
      <param name="calendarMonthGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarToday(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Calendar control&#39;s current day element.</para>
      </summary>
      <param name="calendarToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CalendarWeekNumber(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the calendar week number element.</para>
      </summary>
      <param name="calendarWeekNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CheckBox(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a Check Box control&#39;s root element.</para>
      </summary>
      <param name="checkBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.CheckBoxList(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Check Box List control&#39;s root element.</para>
      </summary>
      <param name="checkBoxList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ComboBox(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Combo Box control&#39;s root element.</para>
      </summary>
      <param name="comboBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.DateEdit(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Date Edit control&#39;s root element.</para>
      </summary>
      <param name="dateEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.DateEditTimeSection(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied the Date Edit control&#39;s time section element.</para>
      </summary>
      <param name="dateEditTimeSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.DropDownEdit(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Dropdown Edit control&#39;s root element.</para>
      </summary>
      <param name="dropDownEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.DropDownWindow(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an editor&#39;s drop-down window element.</para>
      </summary>
      <param name="dropDownWindow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.Hyperlink(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Text Box control&#39;s root element.</para>
      </summary>
      <param name="hyperlink"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconBinaryImageDeleteButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBinaryImageDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconBinaryImageOpenDialogButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBinaryImageOpenDialogButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconCheckColumnChecked(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder"/>&#39;s cell in the checked state.</para>
      </summary>
      <param name="iconCheckColumnChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconCheckColumnIndeterminate(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder"/>&#39;s cell in the indeterminate state.</para>
      </summary>
      <param name="iconCheckColumnIndeterminate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconCheckColumnUnchecked(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewCheckColumnBuilder"/>&#39;s cell in the unchecked state.</para>
      </summary>
      <param name="iconCheckColumnUnchecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconDecrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Spin Edit control&#39;s decrement button.</para>
      </summary>
      <param name="iconDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconDropDownButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s dropdown button.</para>
      </summary>
      <param name="iconDropDownButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconFastNavBack(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Back fast navigation panel element.</para>
      </summary>
      <param name="iconFastNavBack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconFastNavNextPeriod(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Period fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavNextPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconFastNavNextYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Year fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconFastNavPrevPeriod(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Period fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavPrevPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconFastNavPrevYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Year fast navigation panel button.</para>
      </summary>
      <param name="iconFastNavPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconIncrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Spin Edit control&#39;s increment button.</para>
      </summary>
      <param name="iconIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconLargeDecrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Spin Edit control&#39;s large decrement button.</para>
      </summary>
      <param name="iconLargeDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconLargeIncrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Spin Edit control&#39;s large increment button.</para>
      </summary>
      <param name="iconLargeIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconListBoxHideFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconListBoxHideFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconListBoxShowFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconListBoxShowFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconNextMonth(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Month button.</para>
      </summary>
      <param name="iconNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconNextYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Next Year button.</para>
      </summary>
      <param name="iconNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconPrevMonth(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Month button.</para>
      </summary>
      <param name="iconPrevMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconPrevYear(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Calendar control&#39;s Previous Year button.</para>
      </summary>
      <param name="iconPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.IconTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.Image(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="image"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ListBox(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the List Box control&#39;s root element.</para>
      </summary>
      <param name="listBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ListBoxFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ListBoxFilterEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxFilterEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ListBoxItem(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the List Box item element.</para>
      </summary>
      <param name="listBoxItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ListBoxSelectAll(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxSelectAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.Memo(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Memo control&#39;s root element.</para>
      </summary>
      <param name="memo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an editor&#39;s Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.ProgressBar(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Progress Bar control&#39;s root element.</para>
      </summary>
      <param name="progressBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.RadioButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Radio Button control&#39;s root element.</para>
      </summary>
      <param name="radioButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.RadioButtonList(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Radio Button List control&#39;s root element.</para>
      </summary>
      <param name="radioButtonList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.SpinEdit(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Spin Edit control&#39;s root element.</para>
      </summary>
      <param name="spinEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.TagBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.TagBoxInput(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.TagBoxTag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxTag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.TagBoxTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.TextBox(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Spin Edit control&#39;s root element.</para>
      </summary>
      <param name="textBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditorCssClassesBuilder.TimeEdit(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied the Time Edit control&#39;s root element.</para>
      </summary>
      <param name="timeEdit"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFilterCellTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFilterCellTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFilterCellTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFilterCellTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFooterCellTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFooterCellTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFooterCellTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFooterCellTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder">
      <summary>
        <para>A collection of format conditions in the GridView control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder.AddColorScale">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder.AddHighlight">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder.AddIconSet">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder.AddTopBottom">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder`1">
      <summary>
        <para>A collection of format conditions in the GridView control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder`1.AddColorScale``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder`1.AddHighlight``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder`1.AddIconSet``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormatConditionCollectionBuilder`1.AddTopBottom``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the GridView&#39;s form layout.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of the CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder.Item(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a layout item element.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder.ItemCaption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to an item caption element.</para>
      </summary>
      <param name="itemCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder.ItemControl(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a layout item&#39;s root element.</para>
      </summary>
      <param name="itemControl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutCssClassesBuilder.ItemHelpText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the help text element.</para>
      </summary>
      <param name="itemHelpText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder">
      <summary>
        <para>Contains settings that relate to the FormLayout used in the GridView&#39;s edit form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder})">
      <summary>
        <para>Provides access to the collection of items placed in the edit form layout.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder`1">
      <summary>
        <para>Contains settings that relate to the FormLayout used in the GridView&#39;s edit form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para>Provides access to the collection of items placed in the edit form layout.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.AlignItemCaptionsInAllGroups(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="alignItemCaptionsInAllGroups"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.EncodeHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.LayoutType(DevExpress.AspNetCore.Bootstrap.FormLayoutType)">
      <summary>
        <para></para>
      </summary>
      <param name="layoutType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.OptionalMark(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="optionalMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.RequiredMark(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.RequiredMarkDisplayMode(DevExpress.AspNetCore.RequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFormLayoutPropertiesBuilderBase`1.ShowItemCaptionColon(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showItemCaptionColon"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings.GroupedColumn">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings.GroupedColumns">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterRowTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterRowTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterRowTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings.GroupText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings.GroupTexts">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings.SummaryText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettingsBase">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettingsBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettingsBase"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettingsBase.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettingsBase.Columns">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettingsBase.Expanded">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder">
      <summary>
        <para>Contains  specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.CloseOnEscape(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether a header filter is closed when an end-user presses the Esc key.</para>
      </summary>
      <param name="closeOnEscape"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.Height(System.Int32)">
      <summary>
        <para>Sets the header filter&#39;s height.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.Height(System.String)">
      <summary>
        <para>Sets the header filter&#39;s height.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para>Sets the minimum height of header filter&#39;s popup window.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.MinHeight(System.String)">
      <summary>
        <para>Sets the minimum height of header filter&#39;s popup window.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of header filter&#39;s popup window.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of header filter&#39;s popup window.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.PopupAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para>Sets a value specifying the animation type used to show the header filter&#39;s popup window.</para>
      </summary>
      <param name="popupAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.ResizingMode(DevExpress.AspNetCore.ResizingMode)">
      <summary>
        <para>Sets a value that specifies when the header filter being resized should be redrawn.</para>
      </summary>
      <param name="resizingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder})">
      <summary>
        <para>Sets the header filter&#39;s adaptivity settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.ShowCloseButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether or not to display the header filter popup window&#39;s close button.</para>
      </summary>
      <param name="showCloseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether or not to display the header filter popup window&#39;s header.</para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the header filter&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder.Width(System.String)">
      <summary>
        <para>Sets the header filter&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings.HeaderLocation">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHyperLinkColumnBuilder">
      <summary>
        <para>Specifies a data column with hyperlink functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHyperLinkColumnBuilder.PropertiesHyperLinkEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHyperLinkColumnBuilder.ShowUrlAsDisplayText(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showUrlAsDisplayText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHyperLinkColumnBuilder`1">
      <summary>
        <para>Specifies a data column with hyperlink functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHyperLinkColumnBuilder`1.PropertiesHyperLinkEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHyperLinkColumnBuilder`1.ShowUrlAsDisplayText(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showUrlAsDisplayText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewImageColumnBuilder">
      <summary>
        <para>Represents a data column that displays images located at the specified URLs.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewImageColumnBuilder.PropertiesImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewImageColumnBuilder`1">
      <summary>
        <para>Represents a data column that displays images located at the specified URLs.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewImageColumnBuilder`1.PropertiesImage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ColumnCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="columnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.Decoration(DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupDecoration)">
      <summary>
        <para></para>
      </summary>
      <param name="decoration"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutGroupBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder">
      <summary>
        <para>Represents a collection of layout items and groups within the FormLayout used in the GridView&#39;s edit form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder.Add">
      <summary>
        <para>Adds the specified item to the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder"/> collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder.AddEditModeCommandItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder.AddGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder.AddTabbedGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder`1">
      <summary>
        <para>Represents a collection of layout items and groups within the FormLayout used in the GridView&#39;s edit form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder`1.AddGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder`1.AddTabbedGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder.Delay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder.ImagePosition(DevExpress.AspNetCore.ImagePosition)">
      <summary>
        <para></para>
      </summary>
      <param name="imagePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder.Mode(DevExpress.AspNetCore.GridViewLoadingPanelMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder.ShowImage(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLoadingPanelSettingsBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewMemoColumnBuilder">
      <summary>
        <para>Represents a data column used to display memo data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewMemoColumnBuilder.PropertiesMemoEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewMemoColumnBuilder`1">
      <summary>
        <para>Represents a data column used to display memo data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewMemoColumnBuilder`1.PropertiesMemoEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerBarTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerBarTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerBarTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerBarTemplateContainerSettings.Position">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the GridView&#39;s .</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Pager control&#39;s button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of the CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.CurrentPageNumber(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Pager control&#39;s current page button element.</para>
      </summary>
      <param name="currentPageNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.Ellipsis(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Pager control&#39;s ellipsis button element.</para>
      </summary>
      <param name="ellipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.PageNumber(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Pager control&#39;s page number element.</para>
      </summary>
      <param name="pageNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.Pager(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Pager control&#39;s root element.</para>
      </summary>
      <param name="pager"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerCssClassesBuilder.Summary(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Pager control&#39;s summary element.</para>
      </summary>
      <param name="summary"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder">
      <summary>
        <para>Contains pager settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.AllButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAllButtonPropertiesBuilder})">
      <summary>
        <para>The All button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.AlwaysShowPager(System.Boolean)">
      <summary>
        <para>Sets whether the pager is displayed in the control when there is only one page.</para>
      </summary>
      <param name="alwaysShowPager"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.CurrentPageNumberFormat(System.String)">
      <summary>
        <para>Sets the pattern used to format the text of the numeric button that corresponds to the selected page.</para>
      </summary>
      <param name="currentPageNumberFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.EllipsisMode(DevExpress.AspNetCore.PagerEllipsisMode)">
      <summary>
        <para>Sets how an Ellipsis symbol(s) is drawn to indicate page numbers that are omitted.</para>
      </summary>
      <param name="ellipsisMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.EnableAdaptivity(System.Boolean)">
      <summary>
        <para>Specifies whether an adaptive behavior is enabled for the pager.</para>
      </summary>
      <param name="enableAdaptivity"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.FirstPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFirstButtonPropertiesBuilder})">
      <summary>
        <para>The First button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.LastPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder})">
      <summary>
        <para>The Last button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.Mode(DevExpress.AspNetCore.GridViewPagerMode)">
      <summary>
        <para>Sets whether page-mode navigation is enabled.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.NextPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder})">
      <summary>
        <para>The Next button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.NumericButtonCount(System.Int32)">
      <summary>
        <para>Sets the maximum number of numeric buttons that can be displayed within a paginated control.</para>
      </summary>
      <param name="numericButtonCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.PageNumberFormat(System.String)">
      <summary>
        <para>Sets the pattern used to format the text of numeric buttons.</para>
      </summary>
      <param name="pageNumberFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.PageSize(System.Int32)">
      <summary>
        <para>Sets the maximum number of rows that can be displayed on a page.</para>
      </summary>
      <param name="pageSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.PageSizeItemSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder})">
      <summary>
        <para>The Page Size Item element&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.Position(DevExpress.AspNetCore.PagerPosition)">
      <summary>
        <para>Specifies the pager&#39;s position in a grid control.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.PrevPageButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder})">
      <summary>
        <para>The Previous button&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.ShowDisabledButtons(System.Boolean)">
      <summary>
        <para>Sets whether navigation buttons that are temporarily disabled are shown.</para>
      </summary>
      <param name="showDisabledButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.ShowEmptyDataRows(System.Boolean)">
      <summary>
        <para>Sets whether to show empty data rows if the number of data rows displayed within the last page fits entirely on the page.</para>
      </summary>
      <param name="showEmptyDataRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.ShowNumericButtons(System.Boolean)">
      <summary>
        <para>Sets whether numeric buttons are visible.</para>
      </summary>
      <param name="showNumericButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.Summary(System.Action{DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder})">
      <summary>
        <para>The control&#39;s  settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets whether the pager is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPopupControlSettingsBuilder">
      <summary>
        <para>Contains specific settings for different popup elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPopupControlSettingsBuilder.CustomizationDialog(System.Action{DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupSettingsBuilder})">
      <summary>
        <para>Provides access to the Customization Dialog&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPopupControlSettingsBuilder.EditForm(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormPopupSettingsBuilder})">
      <summary>
        <para>Provides access to the Popup Edit Form&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPopupControlSettingsBuilder.HeaderFilter(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderFilterPopupSettingsBuilder})">
      <summary>
        <para>Provides access to the &#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewProgressBarColumnBuilder">
      <summary>
        <para>Represents a data column with the progress bar editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewProgressBarColumnBuilder.PropertiesProgressBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewProgressBarColumnBuilder`1">
      <summary>
        <para>Represents a data column with the progress bar editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewProgressBarColumnBuilder`1.PropertiesProgressBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewResizingSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewResizingSettingsBuilder.ColumnResizeMode(DevExpress.AspNetCore.ColumnResizeMode)">
      <summary>
        <para></para>
      </summary>
      <param name="columnResizeMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewResizingSettingsBuilder.Visualization(DevExpress.AspNetCore.ResizingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="visualization"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder">
      <summary>
        <para>Provides settings that affect the appearance and functionality of a command button displayed on the Grid View&#39;s search panel.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder.CssClass(System.String)">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a command button.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon to display within the command button.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder.RenderMode(DevExpress.AspNetCore.GridCommandButtonRenderMode)">
      <summary>
        <para>Specifies the render mode of command buttons in the search panel.</para>
      </summary>
      <param name="renderMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelCommandButtonSettingsBuilder.Text(System.String)">
      <summary>
        <para>The command button&#39;s text.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.AllowTextInputTimer(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowTextInputTimer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.ColumnNames(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.CustomEditorID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customEditorID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.Delay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.EditorNullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="editorNullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.GroupOperator(DevExpress.AspNetCore.GridViewSearchPanelGroupOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="groupOperator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.HighlightResults(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightResults"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.SearchInPreview(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="searchInPreview"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.ShowApplyButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showApplyButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.ShowClearButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSearchPanelSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder">
      <summary>
        <para>Provides view options for the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/> control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ColumnMinWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="columnMinWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.GridLines(DevExpress.AspNetCore.GridLines)">
      <summary>
        <para>Sets the gridline style for the GridView.</para>
      </summary>
      <param name="gridLines"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.GroupFormat(System.String)">
      <summary>
        <para>Sets the text pattern for group rows.</para>
      </summary>
      <param name="groupFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.GroupFormatForMergedGroup(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupFormatForMergedGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.GroupFormatForMergedGroupRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupFormatForMergedGroupRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.GroupSummaryTextSeparator(System.String)">
      <summary>
        <para>Sets a separator dividing multiple summary texts displayed within group rows.</para>
      </summary>
      <param name="groupSummaryTextSeparator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.MergedGroupSeparator(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="mergedGroupSeparator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowColumnHeaders(System.Boolean)">
      <summary>
        <para>Sets whether column headers are displayed.</para>
      </summary>
      <param name="showColumnHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowFilterRow(System.Boolean)">
      <summary>
        <para>Sets whether the filter row is displayed.</para>
      </summary>
      <param name="showFilterRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowFilterRowMenu(System.Boolean)">
      <summary>
        <para>Sets whether filter row buttons are displayed within the auto filter row.</para>
      </summary>
      <param name="showFilterRowMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowFilterRowMenuLikeItem(System.Boolean)">
      <summary>
        <para>Sets whether the Like item is displayed within the filter row menu.</para>
      </summary>
      <param name="showFilterRowMenuLikeItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowFooter(System.Boolean)">
      <summary>
        <para>Sets whether the view&#39;s footer is displayed.</para>
      </summary>
      <param name="showFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowGroupButtons(System.Boolean)">
      <summary>
        <para>Sets whether group expand buttons are displayed within group rows.</para>
      </summary>
      <param name="showGroupButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowGroupedColumns(System.Boolean)">
      <summary>
        <para>Sets whether the grouped columns are displayed within the GridView.</para>
      </summary>
      <param name="showGroupedColumns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowGroupFooter(DevExpress.AspNetCore.GridViewGroupFooterMode)">
      <summary>
        <para>Sets a value that specifies the GridView group footers visibility.</para>
      </summary>
      <param name="showGroupFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowGroupPanel(System.Boolean)">
      <summary>
        <para>Sets whether the  is displayed.</para>
      </summary>
      <param name="showGroupPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowHeaderFilterBlankItems(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the filter dropdown contains service filter items (&#39;Blanks&#39; and &#39;Non blanks&#39;) to allow filtering data by blank and non blank values.</para>
      </summary>
      <param name="showHeaderFilterBlankItems"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowHeaderFilterButton(System.Boolean)">
      <summary>
        <para>Sets whether column/row headers display filter buttons.</para>
      </summary>
      <param name="showHeaderFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowHeaderFilterListBoxSearchUI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showHeaderFilterListBoxSearchUI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowPreview(System.Boolean)">
      <summary>
        <para>Sets whether preview rows are displayed.</para>
      </summary>
      <param name="showPreview"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowStatusBar(DevExpress.AspNetCore.GridViewStatusBarMode)">
      <summary>
        <para>Sets whether the status bar is displayed.</para>
      </summary>
      <param name="showStatusBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.ShowTitlePanel(System.Boolean)">
      <summary>
        <para>Sets whether the title panel is displayed.</para>
      </summary>
      <param name="showTitlePanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSettingsBuilder.UseFixedTableLayout(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useFixedTableLayout"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSpinEditColumnBuilder">
      <summary>
        <para>Represents a data column used to display numeric data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSpinEditColumnBuilder.PropertiesSpinEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSpinEditColumnBuilder`1">
      <summary>
        <para>Represents a data column used to display numeric data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewSpinEditColumnBuilder`1.PropertiesSpinEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ActiveTabIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="activeTabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.SettingsTabPages(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.TabAlign(DevExpress.AspNetCore.TabAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="tabAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTabbedLayoutGroupBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTagBoxColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTagBoxColumnBuilder.PropertiesTagBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTagBoxColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTagBoxColumnBuilder`1.PropertiesTagBox(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder">
      <summary>
        <para>Contains the templates used to display the Grid View&#39;s data cells, rows, etc.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.DataItem(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying data cells.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.DataItem(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying data cells.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.DataRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying data rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.DataRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying data rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.DetailRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying detail rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.DetailRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying detail rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.EditForm(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.EditForm(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying the .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.EmptyDataRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the empty data row.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.FilterCell(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying a filter row cell.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.FilterCell(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFilterCellTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying a filter row cell.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.FilterRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying a filter row.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.FooterCell(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying footer cells.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.FooterCell(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewFooterCellTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying footer cells.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.FooterRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupFooterCell(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying a group footer cell.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupFooterCell(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterCellTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying a group footer cell.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupFooterRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying a group footer row.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupFooterRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupFooterRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying a group footer row.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying group rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying group rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupRowContent(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the content of group rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.GroupRowContent(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying the content of group rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.Header(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying column headers.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.Header(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying column headers.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.HeaderCaption(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying column header captions.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.HeaderCaption(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewHeaderTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying column header captions.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.PagerBar(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the GridView&#39;s .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.PagerBar(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerBarTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying the GridView&#39;s .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.PreviewRow(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying preview rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.PreviewRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings})">
      <summary>
        <para>Sets a template for displaying preview rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.StatusBar(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the GridView&#39;s status bar.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder.TitlePanel(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template for displaying the .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1">
      <summary>
        <para>Contains the templates used to display the Grid View&#39;s data cells, rows, etc.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1.DataItem(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataItemTemplateContainerSettings{`0}})">
      <summary>
        <para>Sets a template for displaying data cells.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1.DataRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDataRowTemplateContainerSettings{`0}})">
      <summary>
        <para>Sets a template for displaying group rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1.DetailRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewDetailRowTemplateContainerSettings{`0}})">
      <summary>
        <para>Sets a template for displaying detail rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1.EditForm(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewEditFormTemplateContainerSettings{`0}})">
      <summary>
        <para>Sets a template for displaying the .</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1.GroupRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewGroupRowTemplateContainerSettings{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTemplatesBuilder`1.PreviewRow(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPreviewRowTemplateContainerSettings{`0}})">
      <summary>
        <para>Sets a template for displaying preview rows.</para>
      </summary>
      <param name="templateBlock"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextColumnBuilder">
      <summary>
        <para>Represents a data column used to display string values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextColumnBuilder.PropertiesTextEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextColumnBuilder`1">
      <summary>
        <para>Represents a data column used to display string values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextColumnBuilder`1.PropertiesTextEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder})">
      <summary>
        <para>The column editor&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder">
      <summary>
        <para>Provides text options for <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandApplyFilter(System.String)">
      <summary>
        <para>Sets the text displayed within the Apply Filter command item.</para>
      </summary>
      <param name="commandApplyFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandApplySearchPanelFilter(System.String)">
      <summary>
        <para>Sets the text displayed within the Apply command item in the search panel.</para>
      </summary>
      <param name="commandApplySearchPanelFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandBatchEditCancel(System.String)">
      <summary>
        <para>Sets the text displayed in the batch edit mode&#39;s Cancel command item.</para>
      </summary>
      <param name="commandBatchEditCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandBatchEditUpdate(System.String)">
      <summary>
        <para>Sets the text displayed in the batch edit mode&#39;s Update command item.</para>
      </summary>
      <param name="commandBatchEditUpdate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandCancel(System.String)">
      <summary>
        <para>Sets the text displayed within the Cancel command item.</para>
      </summary>
      <param name="commandCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandClearFilter(System.String)">
      <summary>
        <para>Sets the text displayed within the Clear Filter command item.</para>
      </summary>
      <param name="commandClearFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandClearSearchPanelFilter(System.String)">
      <summary>
        <para>Sets the text displayed within the Clear command item in the search panel.</para>
      </summary>
      <param name="commandClearSearchPanelFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandDelete(System.String)">
      <summary>
        <para>Sets the text displayed within the Delete command item.</para>
      </summary>
      <param name="commandDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandEdit(System.String)">
      <summary>
        <para>Sets the text displayed within the Edit command item.</para>
      </summary>
      <param name="commandEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandHideAdaptiveDetail(System.String)">
      <summary>
        <para>Sets the text displayed in the Hide Adaptive Detail command item&#39;s tooltip.</para>
      </summary>
      <param name="commandHideAdaptiveDetail"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandNew(System.String)">
      <summary>
        <para>Sets the text displayed within the New command item.</para>
      </summary>
      <param name="commandNew"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandRecover(System.String)">
      <summary>
        <para>Sets the text displayed within the Recover command item.</para>
      </summary>
      <param name="commandRecover"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandSelect(System.String)">
      <summary>
        <para>Sets the text displayed within the Select command item.</para>
      </summary>
      <param name="commandSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandShowAdaptiveDetail(System.String)">
      <summary>
        <para>Sets the text displayed in the Show Adaptive Detail command item&#39;s tooltip.</para>
      </summary>
      <param name="commandShowAdaptiveDetail"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CommandUpdate(System.String)">
      <summary>
        <para>Sets the text displayed within the Update command item.</para>
      </summary>
      <param name="commandUpdate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ConfirmDelete(System.String)">
      <summary>
        <para>Sets the text displayed within the Confirm Delete window.</para>
      </summary>
      <param name="confirmDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ConfirmOnLosingBatchChanges(System.String)">
      <summary>
        <para>Sets the text of the confirm message that is shown before grid data changes are lost in batch edit mode.</para>
      </summary>
      <param name="confirmOnLosingBatchChanges"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogColumnChooserTab(System.String)">
      <summary>
        <para>Sets the text of the Column Chooser tab displayed within the .</para>
      </summary>
      <param name="customizationDialogColumnChooserTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogFilteringPageUniqueFilterLoadValues(System.String)">
      <summary>
        <para>Sets the text of the &quot;Load Items&quot; link displayed within the Customization Dialog&#39;s Filtering page.</para>
      </summary>
      <param name="customizationDialogFilteringPageUniqueFilterLoadValues"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogFilteringTab(System.String)">
      <summary>
        <para>Sets the text of the Filtering tab displayed within the .</para>
      </summary>
      <param name="customizationDialogFilteringTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogGroupingPageEmptyDragArea(System.String)">
      <summary>
        <para>Sets the text of the empty drag area within the &#39;s &quot;Grouping&quot; page.</para>
      </summary>
      <param name="customizationDialogGroupingPageEmptyDragArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogGroupingPageListArea(System.String)">
      <summary>
        <para>Sets the text of the list area within the &#39;s &quot;Grouping&quot; page.</para>
      </summary>
      <param name="customizationDialogGroupingPageListArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogGroupingTab(System.String)">
      <summary>
        <para>Sets the text of the Grouping tab displayed within the .</para>
      </summary>
      <param name="customizationDialogGroupingTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogSortingPageEmptyDragArea(System.String)">
      <summary>
        <para>Sets the text of the empty drag area displayed within the &#39;s &quot;Sorting&quot; page.</para>
      </summary>
      <param name="customizationDialogSortingPageEmptyDragArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogSortingPageListArea(System.String)">
      <summary>
        <para>Sets the text of the list area displayed within the &#39;s &quot;Sorting&quot; page.</para>
      </summary>
      <param name="customizationDialogSortingPageListArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.CustomizationDialogSortingTab(System.String)">
      <summary>
        <para>Sets the text of the Sorting tab displayed within the .</para>
      </summary>
      <param name="customizationDialogSortingTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.EmptyDataRow(System.String)">
      <summary>
        <para>Sets the text displayed within the .</para>
      </summary>
      <param name="emptyDataRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.EmptyHeaders(System.String)">
      <summary>
        <para>Sets the text displayed within the column header panel when there are no visible columns.</para>
      </summary>
      <param name="emptyHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.GroupContinuedOnNextPage(System.String)">
      <summary>
        <para>Sets the text displayed within a group row when its child rows are displayed on another page(s).</para>
      </summary>
      <param name="groupContinuedOnNextPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.GroupPanel(System.String)">
      <summary>
        <para>Sets the text displayed within the GridView&#39;s .</para>
      </summary>
      <param name="groupPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterCancelButton(System.String)">
      <summary>
        <para>Sets the text displayed within the header filter&#39;s Cancel button.</para>
      </summary>
      <param name="headerFilterCancelButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterFrom(System.String)">
      <summary>
        <para>Sets the text of the From label displayed in the date range header filter.</para>
      </summary>
      <param name="headerFilterFrom"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterHeaderCaption(System.String)">
      <summary>
        <para>Sets the text displayed within the header filter&#39;s header.</para>
      </summary>
      <param name="headerFilterHeaderCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterLastMonth(System.String)">
      <summary>
        <para>Sets the text of the Last Month item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterLastMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterLastWeek(System.String)">
      <summary>
        <para>Sets the text of the Last Week item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterLastWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterLastYear(System.String)">
      <summary>
        <para>Sets the text of the Last Year item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterLastYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterNextMonth(System.String)">
      <summary>
        <para>Sets the text of the Next Month item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterNextWeek(System.String)">
      <summary>
        <para>Sets the text of the Next Week item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterNextWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterNextYear(System.String)">
      <summary>
        <para>Sets the text of the Next Year item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterOkButton(System.String)">
      <summary>
        <para>Sets the text displayed within the header filter&#39;s Ok button.</para>
      </summary>
      <param name="headerFilterOkButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterSelectAll(System.String)">
      <summary>
        <para>Sets the Select All header filter item&#39;s caption.</para>
      </summary>
      <param name="headerFilterSelectAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterShowAll(System.String)">
      <summary>
        <para>Sets the Show All header filter item&#39;s caption.</para>
      </summary>
      <param name="headerFilterShowAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterShowBlanks(System.String)">
      <summary>
        <para>Sets the &#39;Blanks&#39; filter item&#39;s caption.</para>
      </summary>
      <param name="headerFilterShowBlanks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterShowNonBlanks(System.String)">
      <summary>
        <para>Sets the &#39;Non blanks&#39; filter item&#39;s caption.</para>
      </summary>
      <param name="headerFilterShowNonBlanks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterThisMonth(System.String)">
      <summary>
        <para>Sets the text of the This Month item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterThisMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterThisWeek(System.String)">
      <summary>
        <para>Sets the text of the This Week item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterThisWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterThisYear(System.String)">
      <summary>
        <para>Sets the text of the This Year item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterThisYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterTo(System.String)">
      <summary>
        <para>Sets the text of the To label displayed in the date range header filter.</para>
      </summary>
      <param name="headerFilterTo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterToday(System.String)">
      <summary>
        <para>Sets the text of the Today item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterTomorrow(System.String)">
      <summary>
        <para>Sets the text of the Tomorrow item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterTomorrow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.HeaderFilterYesterday(System.String)">
      <summary>
        <para>Sets the text of the Yesterday item displayed within the Date Range Header Filter.</para>
      </summary>
      <param name="headerFilterYesterday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.PopupEditFormCaption(System.String)">
      <summary>
        <para>Sets the &#39;s caption.</para>
      </summary>
      <param name="popupEditFormCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.PopupEditFormFooterText(System.String)">
      <summary>
        <para>Sets the text displayed within the GridView popup edit form&#39;s footer.</para>
      </summary>
      <param name="popupEditFormFooterText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.SearchPanelEditorNullText(System.String)">
      <summary>
        <para>Sets the text displayed in a search panel editor when it is empty and not focused.</para>
      </summary>
      <param name="searchPanelEditorNullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.SelectAllCheckBoxInAllPagesMode(System.String)">
      <summary>
        <para>Sets the text of the Select All check box tooltip in the All Pages mode.</para>
      </summary>
      <param name="selectAllCheckBoxInAllPagesMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.SelectAllCheckBoxInPageMode(System.String)">
      <summary>
        <para>Sets the text of the unselected Select All check box tooltip in the Page mode.</para>
      </summary>
      <param name="selectAllCheckBoxInPageMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.Title(System.String)">
      <summary>
        <para>Sets the text displayed within the GridView&#39;s .</para>
      </summary>
      <param name="title"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarCancel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarCancel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarClearFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarClearFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarClearGrouping(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarClearGrouping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarClearSorting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarClearSorting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarCollapseDetailRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarCollapseDetailRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarCollapseRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarCollapseRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarDelete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarExpandDetailRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarExpandDetailRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarExpandRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarExpandRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarFullCollapse(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarFullCollapse"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarFullExpand(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarFullExpand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarNew(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarNew"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarRefresh(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarRefresh"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarShowCustomizationDialog(System.String)">
      <summary>
        <para>Sets the text displayed within the Show Customization Dialog toolbar item.</para>
      </summary>
      <param name="toolbarShowCustomizationDialog"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarShowFilterRow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowFilterRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarShowFilterRowMenu(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowFilterRowMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarShowFooter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarShowGroupPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowGroupPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarShowSearchPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarShowSearchPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTextSettingsBuilder.ToolbarUpdate(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbarUpdate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTimeEditColumnBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTimeEditColumnBuilder.PropertiesTimeEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTimeEditColumnBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewTimeEditColumnBuilder`1.PropertiesTimeEdit(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder">
      <summary>
        <para>A base class for the Grid View&#39;s toolbar.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the toolbar element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the toolbar is enabled, allowing the toolbar to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemCollectionBuilder})">
      <summary>
        <para>The collection of items within the toolbar and provides indexed access to them.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder.Name(System.String)">
      <summary>
        <para>Sets the toolbar&#39;s unique identifier name.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder.Position(DevExpress.AspNetCore.GridToolbarPosition)">
      <summary>
        <para>Sets the toolbar position.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the toolbar.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCollectionBuilder">
      <summary>
        <para>Represents the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>&#39;s toolbar collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCollectionBuilder.Add">
      <summary>
        <para>Adds a new toolbar to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand">
      <summary>
        <para>Lists the values that specify names of commands that can be performed by clicking toolbar items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.Cancel">
      <summary>
        <para>A command that discards any changes made to the current row and switches the Grid View to browse mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ClearFilter">
      <summary>
        <para>A command that clears the filter applied to the current column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ClearGrouping">
      <summary>
        <para>A command that clears the grouping in the grid&#39;s group panel.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ClearSorting">
      <summary>
        <para>A command that clears sorting by the current column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.CollapseDetailRow">
      <summary>
        <para>A command that collapses the detail row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.CollapseRow">
      <summary>
        <para>A command that collapses the row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.Custom">
      <summary>
        <para>A custom user command.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.Delete">
      <summary>
        <para>A command that deletes the current row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.DeleteSelectedRowsOnPage">
      <summary>
        <para>A command that deletes the selected rows on the page.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.Edit">
      <summary>
        <para>A command that allows editing the current row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExpandDetailRow">
      <summary>
        <para>A command that expands the detail row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExpandRow">
      <summary>
        <para>A command that expands the row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExportToCsv">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExportToDocx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExportToPdf">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExportToRtf">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExportToXls">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ExportToXlsx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.FullCollapse">
      <summary>
        <para>A command that collapses all rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.FullExpand">
      <summary>
        <para>A command that expands all rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.New">
      <summary>
        <para>A command that creates a new row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.Refresh">
      <summary>
        <para>A command that refreshes grid data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ShowCustomizationDialog">
      <summary>
        <para>A command that controls the Show Customization Dialog visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ShowFilterRow">
      <summary>
        <para>A command that controls the filter row visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ShowFilterRowMenu">
      <summary>
        <para>A command that controls the filter row menu visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ShowFooter">
      <summary>
        <para>A command that controls the footer visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ShowGroupPanel">
      <summary>
        <para>A command that controls the group panel visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.ShowSearchPanel">
      <summary>
        <para>A command that controls the search panel visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand.Update">
      <summary>
        <para>A command that saves all the changes made to the current data row and switches the GridView to browse mode.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder">
      <summary>
        <para>Implements the Grid View&#39;s toolbar item functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item starts a group.</para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Checked(System.Boolean)">
      <summary>
        <para>Sets whether the menu item is checked.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the toolbar item is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the toolbar item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Command(DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand)">
      <summary>
        <para>Sets a command to execute when the item is clicked.</para>
      </summary>
      <param name="command"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the item element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.DisplayMode(DevExpress.AspNetCore.GridToolbarItemDisplayMode)">
      <summary>
        <para>Sets the display mode of the current toolbar item within the toolbar.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.DropDownMode(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the toolbar item&#39;s dropdown should only be invoked by using a specific drop down button.</para>
      </summary>
      <param name="dropDownMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled, allowing the item to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.GroupName(System.String)">
      <summary>
        <para>Sets the name of a logical check group to which the menu item belongs.</para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed by the toolbar item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemCollectionBuilder})">
      <summary>
        <para>Collection that contains child items of the current toolbar item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Name(System.String)">
      <summary>
        <para>Sets a value that is the toolbar item name.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBootstrapSpecificSettingsBuilder})">
      <summary>
        <para>Provides access to the toolbar item&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current menu item.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current menu item.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets a value that is the toolbar item tooltip.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current menu item.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current menu item amongst the visible items in a submenu (or at a menu&#39;s root level).</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemCollectionBuilder">
      <summary>
        <para>Represents a collection of a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/>&#39;s toolbar items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarItemCollectionBuilder.Add">
      <summary>
        <para>Adds a new toolbar item to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder">
      <summary>
        <para>An individual item within a Grid View toolbar item&#39;s drop-down menu.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item starts a group.</para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Checked(System.Boolean)">
      <summary>
        <para>Sets whether the menu item is checked.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the toolbar item is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the toolbar item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Command(DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarCommand)">
      <summary>
        <para>Sets a command to execute when the item is clicked.</para>
      </summary>
      <param name="command"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the item element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.DisplayMode(DevExpress.AspNetCore.GridToolbarItemDisplayMode)">
      <summary>
        <para>Sets the display mode of the current toolbar item within the toolbar.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled, allowing the item to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.GroupName(System.String)">
      <summary>
        <para>Sets the name of a logical check group to which the menu item belongs.</para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed by the toolbar item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemCollectionBuilder})">
      <summary>
        <para>Collection that contains child items of the current toolbar item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Name(System.String)">
      <summary>
        <para>Sets a value that is the toolbar item name.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current menu item.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current menu item.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets a value that is the toolbar item tooltip.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current menu item.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current menu item amongst the visible items in a submenu (or at a menu&#39;s root level).</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemCollectionBuilder">
      <summary>
        <para>Represents a collection of a <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewBuilder"/> toolbar item&#39;s nested items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewToolbarMenuItemCollectionBuilder.Add">
      <summary>
        <para>Adds a new toolbar menu item to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilder">
      <summary>
        <para>Represents a text editor with hyperlink functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.AllowEllipsisInText(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowEllipsisInText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.StaticEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapHyperlinkCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.NavigateUrl(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.Target(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapHyperlinkCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperlinkCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Hyperlink control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperlinkCssClassesBuilder.Icon(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the Hyperlink control.</para>
      </summary>
      <param name="icon"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a hyperlink editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.AllowEllipsisInText(System.Boolean)">
      <summary>
        <para>Specifies if the hyper link editor can automatically truncate the text content if it don&#39;t fit into the editor width.</para>
      </summary>
      <param name="allowEllipsisInText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed by the hyperlink.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.StaticEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the StaticEdit.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the editor.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.IconCssClassField(System.String)">
      <summary>
        <para>Sets the data source field that provides names of CSS classes that define images displayed by the inplace editor&#39;s hyperlink.</para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the navigation location for the inplace editor&#39;s hyperlink.</para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.RemovePotentiallyDangerousNavigateUrl(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="removePotentiallyDangerousNavigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the editor.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text caption displayed for the hyperlink in the hyperlink editor.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.TextField(System.String)">
      <summary>
        <para>Sets the data source field that provides caption texts for the inplace editor&#39;s hyperlink.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapHyperLinkPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the hyperlinks&#39;s caption text within the inplace hyperlink editor.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapIconSet">
      <summary>
        <para>Lists the values that define external icon libraries supported by DevExpress Bootstrap controls.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapIconSet.Embedded">
      <summary>
        <para>Applies the embedded icon set to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapIconSet.FontAwesome">
      <summary>
        <para>Applies the Font Awesome icon set to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapIconSet.Glyphicons">
      <summary>
        <para>Applies the GLYPHICONS icon set to a control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of the CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to an image editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.AlternateText(System.String)">
      <summary>
        <para>Sets the alternate text displayed instead of the image when the image is unavailable.</para>
      </summary>
      <param name="alternateText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.AlternateTextField(System.String)">
      <summary>
        <para>Sets the data source field that provides alternate texts to the inplace image editor.</para>
      </summary>
      <param name="alternateTextField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.AlternateTextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the image&#39;s alternate text.</para>
      </summary>
      <param name="alternateTextFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.StaticEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the StaticEdit.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.DescriptionUrl(System.String)">
      <summary>
        <para>Sets the location of the image&#39;s detailed description.</para>
      </summary>
      <param name="descriptionUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.DescriptionUrlField(System.String)">
      <summary>
        <para>Sets the data source field which contains locations to image detailed descriptions of the inplace editor.</para>
      </summary>
      <param name="descriptionUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.DescriptionUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the location of the image&#39;s detailed description.</para>
      </summary>
      <param name="descriptionUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ExportImageSettings(System.Action{DevExpress.AspNetCore.Bootstrap.ExportBinaryImageSettingsBuilder})">
      <summary>
        <para>Provides access to settings that are applied to an exported binary image.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ImageAlign(DevExpress.AspNetCore.ImageAlign)">
      <summary>
        <para>Sets the alignment of the image control in relation to the other items on the web page.</para>
      </summary>
      <param name="imageAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ImageHeight(System.Int32)">
      <summary>
        <para>Sets the height of the image displayed within the image control.</para>
      </summary>
      <param name="imageHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ImageHeight(System.String)">
      <summary>
        <para>Sets the height of the image displayed within the image control.</para>
      </summary>
      <param name="imageHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ImageUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the URL that points to the image displayed in the editor.</para>
      </summary>
      <param name="imageUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ImageWidth(System.Int32)">
      <summary>
        <para>Sets the width of the image displayed within the image control.</para>
      </summary>
      <param name="imageWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ImageWidth(System.String)">
      <summary>
        <para>Sets the width of the image displayed within the image control.</para>
      </summary>
      <param name="imageWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.LoadingImageUrl(System.String)">
      <summary>
        <para>Specifies a custom loading image.</para>
      </summary>
      <param name="loadingImageUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ShowLoadingImage(System.Boolean)">
      <summary>
        <para>Specifies whether the loading image is displayed while the main image is being loaded.</para>
      </summary>
      <param name="showLoadingImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the image.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides the tooltip text for images.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapImageEditPropertiesBuilder.ToolTipFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the image&#39;s tooltip text.</para>
      </summary>
      <param name="toolTipFormatString"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapItemTemplateContainerBase">
      <summary>
        <para>Represents a base class for different template container objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapItemTemplateContainerBase.Eval(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapItemTemplateContainerBase.Eval``1(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder">
      <summary>
        <para>Contains settings specific to the button that when clicked, navigates a user to the last page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the button&#39;s image.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed in a pager button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format a pager button&#39;s text for display.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLastButtonPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ColumnCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="columnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutGroupCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.Decoration(DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupDecoration)">
      <summary>
        <para></para>
      </summary>
      <param name="decoration"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupDecoration">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupDecoration.Card">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupDecoration.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder">
      <summary>
        <para>Contains settings specific to layout items displayed within a layout group.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para>Sets the current layout group item&#39;s horizontal alignment.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value that defines whether to show or hide the layout group item&#39;s caption.</para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.Content(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormLayoutItemCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.RequiredMarkDisplayMode(DevExpress.AspNetCore.FieldRequiredMarkMode)">
      <summary>
        <para></para>
      </summary>
      <param name="requiredMarkDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.ShowCaption(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionPosition">
      <summary>
        <para>Lists values that define the position of the caption within a layout item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionPosition.After">
      <summary>
        <para>The caption is displayed after the content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionPosition.Before">
      <summary>
        <para>The caption is displayed before the content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionPosition.NotSet">
      <summary>
        <para>The caption position is not assigned.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder">
      <summary>
        <para>Contains settings specific to layout item caption.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.FormLayoutHorizontalAlign)">
      <summary>
        <para>Sets the current layout item&#39;s caption horizontal alignment.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionPosition)">
      <summary>
        <para>Specifies the position of the layout item caption relative to the layout item content.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder.AddGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder.AddItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder.AddTabbedGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder`1.AddGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder`1.AddItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder`1.AddItem``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder`1.AddTabbedGroup">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.BinaryImage">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.Button">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.ButtonEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.Calendar">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.CheckBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.CheckBoxList">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.ComboBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.DateEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.DropDownEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.HyperLink">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.ListBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.Memo">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.ProgressBar">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.RadioButton">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.RadioButtonList">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.SpinEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.TagBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.TextBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.TimeEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder.UploadControl">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextPosition">
      <summary>
        <para>Lists values that define the position of help text within a layout item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextPosition.Bottom">
      <summary>
        <para>Help text is positioned at the bottom of the layout item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextPosition.NotSet">
      <summary>
        <para>The positioning of help text is not set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextPosition.Top">
      <summary>
        <para>Help text is positioned at the top of the layout item.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder">
      <summary>
        <para>Contains settings specific to the layout item help text.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.HelpTextHorizontalAlign)">
      <summary>
        <para>Sets the current layout item&#39;s help text horizontal alignment.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder.Position(DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextPosition)">
      <summary>
        <para>Sets the position of the layout item help text.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilder">
      <summary>
        <para>Represents a control to display a list of items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.AllowCustomValues(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowCustomValues"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.CallbackPageSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackPageSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.EnableSelectAll(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableSelectAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.Fields(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.FilteringSettings(System.Action{DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.IconCssClassField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.EditorRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.Rows(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="rows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.SelectAllText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="selectAllText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.SelectedIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="selectedIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.SelectionMode(DevExpress.AspNetCore.ListEditSelectionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="selectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxBuilderBase`1.ValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.CheckBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="checkBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.Filter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.FilterEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filterEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.FilterEditNullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filterEditNullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.IconClearFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconClearFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.IconHideFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconHideFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.IconShowFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconShowFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.Item(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxCssClassesBuilder.SelectAll(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="selectAll"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldBuilder">
      <summary>
        <para>Contains settings that define an individual data field providing values to a list editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldBuilder.FieldName(System.String)">
      <summary>
        <para>Sets the name of the database field assigned to the current column.</para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldCollectionBuilder">
      <summary>
        <para>Represents a collection of list editor data fields.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListBoxFieldCollectionBuilder.Add">
      <summary>
        <para>Adds the specified field to the end of an editor&#39;s field collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder">
      <summary>
        <para>Represents an individual list item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the list item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the list item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets whether a list box item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the list item&#39;s text.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the item&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemBuilder.Value(System.Object)">
      <summary>
        <para>Sets the item&#39;s associated value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder">
      <summary>
        <para>Represents the collection of list items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder.Add">
      <summary>
        <para>Adds the specified item to the collection</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilder">
      <summary>
        <para>Represents a multi-line text editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.Columns(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="columns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMemoCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.Rows(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="rows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMemoCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Memo control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a memo editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the Memo.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.Columns(System.Int32)">
      <summary>
        <para>Sets the memo editor&#39;s display width in characters.</para>
      </summary>
      <param name="columns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para>Sets the maximum number of characters an end user can enter into the editor.</para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.Rows(System.Int32)">
      <summary>
        <para>Sets the number of text lines displayed by the memo editor.</para>
      </summary>
      <param name="rows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMemoPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores BootstrapMenu&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBootstrapSpecificSettingsBuilder.NavbarMode(System.Boolean)">
      <summary>
        <para>Specifies whether the menu should be displayed as navigation headers.</para>
      </summary>
      <param name="navbarMode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder">
      <summary>
        <para>Represents a menu control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.AllowSelectItem(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether items can be selected within the menu.</para>
      </summary>
      <param name="allowSelectItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.AppearAfter(System.Int32)">
      <summary>
        <para>Sets the delay in displaying submenus within the menu.</para>
      </summary>
      <param name="appearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.BeginGroupField(System.String)">
      <summary>
        <para>Sets the data source field which identifies menu items that start a group.</para>
      </summary>
      <param name="beginGroupField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the menu.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of a web control on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.DisappearAfter(System.Int32)">
      <summary>
        <para>Sets the duration after which a dynamic menu (a menu item&#39;s submenu or a popup menu) disappears when the mouse pointer is no longer positioned over the menu.</para>
      </summary>
      <param name="disappearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the menu can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.FirstSubMenuDirection(DevExpress.AspNetCore.FirstSubMenuDirection)">
      <summary>
        <para>Sets the direction in which the first sub-menu appears.</para>
      </summary>
      <param name="firstSubMenuDirection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.IconCssClassField(System.String)">
      <summary>
        <para>Sets the data source field that provides names of CSS classes that define images displayed by the menu items.</para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ItemAutoWidth(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether root item widths are calculated automatically, so that root items are resized (stretched or shrinked) proportionally to the menu control&#39;s width.</para>
      </summary>
      <param name="itemAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemCollectionBuilder})">
      <summary>
        <para>Collection that contains menu items of the menu&#39;s root level.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ItemSubMenuOffset(System.Action{DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder})">
      <summary>
        <para>Specific offset settings for submenus of the submenu items.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all menu items within a menu control.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all menu items within a menu control.</para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of all menu items within a menu control.</para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of all menu items within a menu control.</para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.MaximumDisplayLevels(System.Int32)">
      <summary>
        <para>Sets the number of menu levels to render.</para>
      </summary>
      <param name="maximumDisplayLevels"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.NameField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides menu item unique identifier names.</para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.NavigateUrlField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides menu item navigation locations.</para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format item navigation URLs.</para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapMenu,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.Orientation(DevExpress.AspNetCore.Orientation)">
      <summary>
        <para>Sets the direction in which to render the menu.</para>
      </summary>
      <param name="orientation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.RootItemSubMenuOffset(System.Action{DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder})">
      <summary>
        <para>Specific offset settings for submenus of the root menu items.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.RootItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all root items within a menu control.</para>
      </summary>
      <param name="rootItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.RootItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all root items within a menu control.</para>
      </summary>
      <param name="rootItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.RootItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of all root menu items within a menu control.</para>
      </summary>
      <param name="rootItemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.RootItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of all root menu items within a menu control.</para>
      </summary>
      <param name="rootItemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.SelectParentItem(System.Boolean)">
      <summary>
        <para>Sets whether a root menu item is displayed selected when selecting any of its subitems.</para>
      </summary>
      <param name="selectParentItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMenuBootstrapSpecificSettingsBuilder})">
      <summary>
        <para>Provides access to BootstrapMenu&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ShowPopOutImages(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value specifying whether  that indicate that a menu item has a submenu are displayed.</para>
      </summary>
      <param name="showPopOutImages"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the client region&#39;s content of all submenus within a menu control.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the client region&#39;s content of all submenus within a menu control.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.SyncSelectionMode(DevExpress.AspNetCore.SyncSelectionMode)">
      <summary>
        <para>Sets whether the menu item, whose navigation location points to the currently browsed web page, is automatically selected.</para>
      </summary>
      <param name="syncSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URLs associated with all links within a menu.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.TextField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides menu item texts.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format menu item texts.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides menu item tooltip texts.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.IconSubMenuItemChecked(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconSubMenuItemChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.Menu(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Menu&#39;s root element.</para>
      </summary>
      <param name="menu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.MenuItem(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a menu item element.</para>
      </summary>
      <param name="menuItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.Separator(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a separator element.</para>
      </summary>
      <param name="separator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.SubMenu(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder.SubMenuItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuItem"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder">
      <summary>
        <para>Represents an individual menu item within menu controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the menu item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item starts a group.</para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Checked(System.Boolean)">
      <summary>
        <para>Sets whether the menu item is checked.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the menu item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the menu item element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled, allowing the item to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.GroupName(System.String)">
      <summary>
        <para>Sets the name of a logical check group to which the menu item belongs.</para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the menu item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemCollectionBuilder})">
      <summary>
        <para>Collection that contains the submenu items of the current menu item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current menu item.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current menu item.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current menu item.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the item&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current menu item&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current menu item.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current menu item amongst the visible items in a submenu (or at a menu&#39;s root level).</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemCollectionBuilder">
      <summary>
        <para>Represents a collection that maintains menu items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemCollectionBuilder.Add">
      <summary>
        <para>Adds a new menu item to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMode">
      <summary>
        <para>Lists values that specify the used Bootstrap framework version.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapMode.Bootstrap3">
      <summary>
        <para>Bootstrap v3 is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapMode.Bootstrap4">
      <summary>
        <para>Bootstrap v4 is used.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.AppointmentAutoHeight(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentAutoHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.AppointmentGapWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentGapWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.AppointmentHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.AppointmentInterspacing(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentInterspacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.ContinueArrowDisplayType(DevExpress.XtraScheduler.AppointmentContinueArrowDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="continueArrowDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.EndTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="endTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.FirstAppointmentTopIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="firstAppointmentTopIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.LastAppointmentBottomIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="lastAppointmentBottomIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.ShowBordersForSameDayAppointments(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showBordersForSameDayAppointments"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.ShowRecurrence(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.ShowReminder(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showReminder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.StartTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="startTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.StatusDisplayType(DevExpress.XtraScheduler.AppointmentStatusDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="statusDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder.TimeDisplayType(DevExpress.XtraScheduler.AppointmentTimeDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="timeDisplayType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.CellAutoHeightOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.CompressWeekend(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="compressWeekend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.NavigationButtonAppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonAppointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.NavigationButtonVisibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.ResourcesPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="resourcesPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.ShowMoreButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.ShowWeekend(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWeekend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder.WeekCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="weekCount"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.DateCellBody(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateCellBody"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.DateCellHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateCellHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.DayHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.HorizontalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.TodayCellHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayCellHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder">
      <summary>
        <para>Contains settings specific to the button that when clicked, navigates a user to the next page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the button&#39;s image.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed in a pager button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format a pager button&#39;s text for display.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapNextButtonPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapOptions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapOptions.BackwardCompatibility">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapOptions.IconSet">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapOptions.Mode">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder">
      <summary>
        <para>Represents a navigation control made up of multiple tabbed pages.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ActivateTabPageAction(DevExpress.AspNetCore.ActivateTabPageAction)">
      <summary>
        <para>Sets a value that specifies which action forces a tab to be selected.</para>
      </summary>
      <param name="activateTabPageAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ActiveTabIndex(System.Int32)">
      <summary>
        <para>Sets the index of a tab (tabbed page) which is selected within the control.</para>
      </summary>
      <param name="activeTabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of an active tab within the current page control.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of an active tab within the current page control.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of an active tab within the current page control.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of an active tab within the current page control.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to a tab control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of a web control on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the Page Control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.EnableCallbackAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a specific animation effect is used when a control&#39;s content is updated via a callback.</para>
      </summary>
      <param name="enableCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.EnableCallbackCompression(System.Boolean)">
      <summary>
        <para>Sets whether callback result compression is enabled.</para>
      </summary>
      <param name="enableCallbackCompression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the tab control can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapPageControl,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.PageControlRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.SaveStateToCookies(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether cookies are used to persist information about the active tab.</para>
      </summary>
      <param name="saveStateToCookies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.SaveStateToCookiesID(System.String)">
      <summary>
        <para>Sets the name (identifier) of the cookie in which the PageControl&#39;s state is persisted.</para>
      </summary>
      <param name="saveStateToCookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para>Provides access to the loading panel settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ShowTabs(System.Boolean)">
      <summary>
        <para>Sets whether tab page headers are displayed within the PageControl.</para>
      </summary>
      <param name="showTabs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabAlign(DevExpress.AspNetCore.TabAlign)">
      <summary>
        <para>Sets the alignment of tabs along the control&#39;s side.</para>
      </summary>
      <param name="tabAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabPages(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTabPageCollectionBuilder})">
      <summary>
        <para>Provides access to the collection of tabbed pages within the PageControl.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all tabs within the current page control.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all tabs within the current page control.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of all tabs within the current page control.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of all tabs within the current page control.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the Page Control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlCssClassesBuilder.ActiveTab(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Tab Control&#39;s active tab element.</para>
      </summary>
      <param name="activeTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlCssClassesBuilder.Content(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the content container element.</para>
      </summary>
      <param name="content"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlCssClassesBuilder.Tab(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Tab Control&#39;s tab element.</para>
      </summary>
      <param name="tab"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings.TabPage">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder">
      <summary>
        <para>Contains  element specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder.AllItemText(System.String)">
      <summary>
        <para>Sets a text displayed within the  element&#39;s drop-down window All item.</para>
      </summary>
      <param name="allItemText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder.Caption(System.String)">
      <summary>
        <para>Sets the  element&#39;s caption.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder.Items(System.String[])">
      <summary>
        <para>The collection of items displayed within the page size item element&#39;s drop-down window.</para>
      </summary>
      <param name="items"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder.Position(DevExpress.AspNetCore.PagerPageSizePosition)">
      <summary>
        <para>Sets the  element&#39;s position within a pager.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder.ShowAllItem(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the All item is displayed within the  element&#39;s drop-down window.</para>
      </summary>
      <param name="showAllItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPageSizeItemSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder">
      <summary>
        <para>A pie chart control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.AccessibleDescription(System.String)">
      <summary>
        <para>Sets the description of the widget intended for accessibility client applications.</para>
      </summary>
      <param name="accessibleDescription"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.Bind(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartClientSideEventsBaseBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder"/> descendants.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartCssClassesBaseBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of a chart control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.CustomPalette(System.Drawing.Color[])">
      <summary>
        <para>Specifies a custom color palette used by the widget.</para>
      </summary>
      <param name="customPalette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.Diameter(System.Decimal)">
      <summary>
        <para>Specifies the ratio of the  diameter to the smallest widget&#39;s side length.</para>
      </summary>
      <param name="diameter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.InnerRadius(System.Decimal)">
      <summary>
        <para>Specifies the fraction of the inner radius relative to the total radius in the series of the &quot;doughnut&quot; type. The value should be between 0 and 1.</para>
      </summary>
      <param name="innerRadius"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Provides access to CSS classes applied to legend markers of the  control.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.LoadingIndicatorText(System.String)">
      <summary>
        <para>Sets the text displayed by the loading indicator.</para>
      </summary>
      <param name="loadingIndicatorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.OnClientCustomizeLabel(System.String)">
      <summary>
        <para>Customizes the appearance of an individual point label on the client side.</para>
      </summary>
      <param name="onClientCustomizeLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.OnClientCustomizePoint(System.String)">
      <summary>
        <para>Customizes the appearance of an individual series point on the client side.</para>
      </summary>
      <param name="onClientCustomizePoint"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.Palette(DevExpress.AspNetCore.Bootstrap.VizPalette)">
      <summary>
        <para>Specifies the predefined DevExtreme palette used by the widget.</para>
      </summary>
      <param name="palette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.PaletteExtensionMode(DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="paletteExtensionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.PathModified(System.Boolean)">
      <summary>
        <para>Notifies the widget that it is embedded into an HTML page that uses a tag to modify the path.</para>
      </summary>
      <param name="pathModified"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.PointSelectionMode(DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode)">
      <summary>
        <para>Specifies whether a single point or multiple points can be selected in the chart.</para>
      </summary>
      <param name="pointSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.ResolveLabelOverlapping(DevExpress.AspNetCore.Bootstrap.PieChartResolveLabelOverlapping)">
      <summary>
        <para>Specifies options for displaying the overlapping labels.</para>
      </summary>
      <param name="resolveLabelOverlapping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.RightToLeft(System.Nullable{System.Boolean})">
      <summary>
        <para>Gets or sets a value specifying whether or not the current control supports right-to-left representation.</para>
      </summary>
      <param name="rightToLeft"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SegmentsDirection(DevExpress.AspNetCore.Bootstrap.PieChartSegmentsDirection)">
      <summary>
        <para>Specifies the direction that the pie chart segments will occupy.</para>
      </summary>
      <param name="segmentsDirection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SeriesCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesCollectionBuilder})">
      <summary>
        <para>Specifies options for the series of the  widget.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SettingsAnimation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s animation settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SettingsCommonSeries(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder})">
      <summary>
        <para>Provides access to settings applied to all series displayed by the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SettingsExport(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder})">
      <summary>
        <para>Provides access to the widget&#39;s export settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SettingsLegend(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s legend settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SettingsToolTip(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s tooltip settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.ShowLoadingIndicator(System.Boolean)">
      <summary>
        <para>Specifies whether or not to display a loading indicator when obtaining data from a remote data source.</para>
      </summary>
      <param name="showLoadingIndicator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.StartAngle(System.Decimal)">
      <summary>
        <para>Specifies the angle in arc degrees from which the first segment of a pie chart should start.</para>
      </summary>
      <param name="startAngle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.SubtitleText(System.String)">
      <summary>
        <para>Sets the widget&#39;s subtitle.</para>
      </summary>
      <param name="subtitleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.TitleText(System.String)">
      <summary>
        <para>Sets the widget&#39;s title.</para>
      </summary>
      <param name="titleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.Type(DevExpress.AspNetCore.Bootstrap.PieChartType)">
      <summary>
        <para>Specifies the type of the pie chart series.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder">
      <summary>
        <para>Stores settings that are common for all series of a Pie Chart control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.ArgumentType(DevExpress.AspNetCore.Bootstrap.ChartDataType)">
      <summary>
        <para>Specifies the required type for series arguments.</para>
      </summary>
      <param name="argumentType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.MinSegmentSize(System.Decimal)">
      <summary>
        <para>Specifies a minimal size of a displayed pie segment.</para>
      </summary>
      <param name="minSegmentSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.SmallValuesGrouping(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder})">
      <summary>
        <para>Specifies chart segment grouping options.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Specifies which data source field provides auxiliary data for series points.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartCommonSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder">
      <summary>
        <para>Stores settings of a  series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.ArgumentType(DevExpress.AspNetCore.Bootstrap.ChartDataType)">
      <summary>
        <para>Specifies the required type for series arguments.</para>
      </summary>
      <param name="argumentType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.MinSegmentSize(System.Decimal)">
      <summary>
        <para>Specifies a minimal size of a displayed pie segment.</para>
      </summary>
      <param name="minSegmentSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.SmallValuesGrouping(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder})">
      <summary>
        <para>Specifies chart segment grouping options.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesCollectionBuilder">
      <summary>
        <para>A collection of  series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSeriesCollectionBuilder.Add">
      <summary>
        <para>Adds a new series with default settings to the collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder">
      <summary>
        <para>Stores Pie Chart segment grouping options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder.GroupName(System.String)">
      <summary>
        <para>Specifies the name of the grouped chart segment. This name represents the segment in the chart legend.</para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder.Mode(DevExpress.AspNetCore.Bootstrap.SmallValuesGroupingMode)">
      <summary>
        <para>Specifies the segment grouping mode.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder.Threshold(System.Decimal)">
      <summary>
        <para>Specifies a threshold for segment values.</para>
      </summary>
      <param name="threshold"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder.TopCount(System.Int32)">
      <summary>
        <para>Specifies how many segments must not be grouped.</para>
      </summary>
      <param name="topCount"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder">
      <summary>
        <para>Stores settings of the Area series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.Closed(System.Boolean)">
      <summary>
        <para>Specifies whether to close the chart by joining the end point with the first point.</para>
      </summary>
      <param name="closed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>An object defining configuration options for points in line and area series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAreaSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder">
      <summary>
        <para>Stores settings of the  control&#39;s argument axis.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.ArgumentType(System.Type)">
      <summary>
        <para>Sets the type of argument values.</para>
      </summary>
      <param name="argumentType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.AxisDivisionFactor(System.Int32)">
      <summary>
        <para>Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; types.</para>
      </summary>
      <param name="axisDivisionFactor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.Categories(System.String[])">
      <summary>
        <para>Specifies the order in which arguments (categories) are arranged on the discrete argument axis.</para>
      </summary>
      <param name="categories"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.ConstantLineCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineCollectionBuilder})">
      <summary>
        <para>Provides access to a collection of constant lines belonging to the axis.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.ConstantLineStyle(System.Action{DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.DiscreteAxisDivisionMode(DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode)">
      <summary>
        <para>Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the &quot;discrete&quot; type.</para>
      </summary>
      <param name="discreteAxisDivisionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.FirstPointOnStartAngle(System.Boolean)">
      <summary>
        <para>Specifies whether to display the first point at the angle specified using the <see cref="P:DevExpress.Web.Bootstrap.BootstrapPolarChartArgumentAxis.StartAngle"/> method.</para>
      </summary>
      <param name="firstPointOnStartAngle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.GridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether grid lines are visible.</para>
      </summary>
      <param name="gridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.HoverMode(DevExpress.AspNetCore.Bootstrap.ArgumentAxisHoverMode)">
      <summary>
        <para>Specifies the elements that will be highlighted when the argument axis is hovered over.</para>
      </summary>
      <param name="hoverMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.Inverted(System.Boolean)">
      <summary>
        <para>Inverts the axis.</para>
      </summary>
      <param name="inverted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder})">
      <summary>
        <para>An object defining the label configuration options that are common for all axes in the Polar Chart widget.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.LogarithmBase(System.Int32)">
      <summary>
        <para>Specifies the value to be raised to a power when generating ticks for an axis of the logarithmic type.</para>
      </summary>
      <param name="logarithmBase"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MaxValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinorGridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether the minor grid is visible.</para>
      </summary>
      <param name="minorGridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinorTickCount(System.Int32)">
      <summary>
        <para>Specifies how many minor ticks to place between two neighboring major ticks.</para>
      </summary>
      <param name="minorTickCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinorTickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between minor ticks.</para>
      </summary>
      <param name="minorTickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinorTickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the minor tick interval.</para>
      </summary>
      <param name="minorTickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinorTickLength(System.Int32)">
      <summary>
        <para>Specifies the length of minor ticks in pixels.</para>
      </summary>
      <param name="minorTickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinorTickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether minor ticks are visible.</para>
      </summary>
      <param name="minorTickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.MinValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.OriginValue(System.Decimal)">
      <summary>
        <para>Specifies the value to be used as the origin for the argument axis.</para>
      </summary>
      <param name="originValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.Period(System.Decimal)">
      <summary>
        <para>Specifies the period of the argument values in the data source.</para>
      </summary>
      <param name="period"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.StartAngle(System.Decimal)">
      <summary>
        <para>Specifies the angle in arc degrees to which the argument axis should be rotated. The positive values rotate the axis clockwise.</para>
      </summary>
      <param name="startAngle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.StripCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartStripCollectionBuilder})">
      <summary>
        <para>Declares a collection of strips belonging to the argument axis.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.TickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between axis ticks.</para>
      </summary>
      <param name="tickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.TickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the interval between axis ticks.</para>
      </summary>
      <param name="tickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.TickLength(System.Int32)">
      <summary>
        <para>Specifies the length of ticks in pixels.</para>
      </summary>
      <param name="tickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.TickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether ticks are visible.</para>
      </summary>
      <param name="tickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.Type(DevExpress.AspNetCore.Bootstrap.AxisScaleType)">
      <summary>
        <para>Specifies the type of the axis.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.ValueMarginsEnabled(System.Boolean)">
      <summary>
        <para>Adds an empty space between the axis and the minimum and maximum series points.</para>
      </summary>
      <param name="valueMarginsEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies whether the axis line is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder">
      <summary>
        <para>Stores settings of the  control&#39;s axis labels.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.DisplayMode(DevExpress.AspNetCore.Bootstrap.AxisLabelDisplayMode)">
      <summary>
        <para>Allows you to rotate or stagger axis labels. Applies to the horizontal axis only.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.Format(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para>Formats a value before it is displayed in an axis label.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.IndentFromAxis(System.Int32)">
      <summary>
        <para>Sets the size of indentation between an axis and its labels in pixels.</para>
      </summary>
      <param name="indentFromAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.OnClientCustomizeHint(System.String)">
      <summary>
        <para>Specifies the hint that appears when a user points to an axis label.</para>
      </summary>
      <param name="onClientCustomizeHint"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.OnClientCustomizeText(System.String)">
      <summary>
        <para>Customizes the text displayed by axis labels.</para>
      </summary>
      <param name="onClientCustomizeText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.OverlappingBehavior(DevExpress.AspNetCore.Bootstrap.PolarChartOverlappingBehavior)">
      <summary>
        <para>Decides how to arrange axis labels when there is not enough space to keep all of them.</para>
      </summary>
      <param name="overlappingBehavior"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the visibility of axis labels.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder">
      <summary>
        <para>Stores settings of the Bar series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal length of a displayed bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBarSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder">
      <summary>
        <para>A chart control visualizing data in a polar coordinate system.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.AccessibleDescription(System.String)">
      <summary>
        <para>Sets the description of the widget intended for accessibility client applications.</para>
      </summary>
      <param name="accessibleDescription"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.ArgumentAxis(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartArgumentAxisBuilder})">
      <summary>
        <para>Specifies argument axis options for the Polar Chart control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.Bind(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCoordinateSystemChartClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder"/> descendants.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.CustomPalette(System.Drawing.Color[])">
      <summary>
        <para>Specifies a custom color palette used by the widget.</para>
      </summary>
      <param name="customPalette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.LoadingIndicatorText(System.String)">
      <summary>
        <para>Sets the text displayed by the loading indicator.</para>
      </summary>
      <param name="loadingIndicatorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.NegativesAsZeroes(System.Boolean)">
      <summary>
        <para>Forces the chart to treat negative values as zeroes.</para>
      </summary>
      <param name="negativesAsZeroes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.OnClientCustomizeLabel(System.String)">
      <summary>
        <para>Customizes the appearance of an individual point label on the client side.</para>
      </summary>
      <param name="onClientCustomizeLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.OnClientCustomizePoint(System.String)">
      <summary>
        <para>Customizes the appearance of an individual series point on the client side.</para>
      </summary>
      <param name="onClientCustomizePoint"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.Palette(DevExpress.AspNetCore.Bootstrap.VizPalette)">
      <summary>
        <para>Specifies the predefined DevExtreme palette used by the widget.</para>
      </summary>
      <param name="palette"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.PaletteExtensionMode(DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="paletteExtensionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.PathModified(System.Boolean)">
      <summary>
        <para>Notifies the widget that it is embedded into an HTML page that uses a tag to modify the path.</para>
      </summary>
      <param name="pathModified"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.PointSelectionMode(DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode)">
      <summary>
        <para>Specifies whether a single point or multiple points can be selected in the chart.</para>
      </summary>
      <param name="pointSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.ResolveLabelOverlapping(DevExpress.AspNetCore.Bootstrap.ChartResolveLabelOverlapping)">
      <summary>
        <para>Specifies how the chart must behave when series point labels overlap.</para>
      </summary>
      <param name="resolveLabelOverlapping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.RightToLeft(System.Nullable{System.Boolean})">
      <summary>
        <para>Gets or sets a value specifying whether or not the current control supports right-to-left representation.</para>
      </summary>
      <param name="rightToLeft"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SeriesCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder})">
      <summary>
        <para>Specifies options for Polar Chart widget series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SeriesSelectionMode(DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode)">
      <summary>
        <para>Specifies whether a single series or multiple series can be selected in the chart.</para>
      </summary>
      <param name="seriesSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAdaptivitySettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsAnimation(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartAnimationSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s animation settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsCommonAxis(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartCommonAxisSettingsBuilder})">
      <summary>
        <para>Provides access to settings common to all axes in a coordinate system chart.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsCommonSeries(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder})">
      <summary>
        <para>Provides access to settings applied to all series displayed by the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsDataPrepare(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartDataPrepareSettingsBuilder})">
      <summary>
        <para>Provides access to settings that determine how the chart manages data from a data source.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsExport(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder})">
      <summary>
        <para>Provides access to the widget&#39;s export settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsLegend(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartLegendSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s legend settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsSeriesTemplate(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesTemplateSettingsBuilder})">
      <summary>
        <para>Provides access to the chart&#39;s series template settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SettingsToolTip(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartTooltipSettingsBuilder})">
      <summary>
        <para>Provides access to a chart control&#39;s tooltip settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.ShowLoadingIndicator(System.Boolean)">
      <summary>
        <para>Specifies whether or not to display a loading indicator when obtaining data from a remote data source.</para>
      </summary>
      <param name="showLoadingIndicator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.SubtitleText(System.String)">
      <summary>
        <para>Sets the widget&#39;s subtitle.</para>
      </summary>
      <param name="subtitleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.TitleText(System.String)">
      <summary>
        <para>Sets the widget&#39;s title.</para>
      </summary>
      <param name="titleText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.UseSpiderWeb(System.Boolean)">
      <summary>
        <para>Indicates whether to display a &quot;spider web&quot;.</para>
      </summary>
      <param name="useSpiderWeb"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartBuilder.ValueAxis(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder})">
      <summary>
        <para>Specifies value axis options for the Polar Chart control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder">
      <summary>
        <para>Stores settings that are common for all Polar Chart series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Closed(System.Boolean)">
      <summary>
        <para>Specifies whether to close the chart by joining the end point with the first point.</para>
      </summary>
      <param name="closed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal length of a displayed bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>An object defining configuration options for points in line and area series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies the name of the stack where the values of the StackedBar series must be located.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Type(DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType)">
      <summary>
        <para>Sets a series type.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCommonSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisConstantLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisConstantLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisConstantLineLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisConstantLineLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisMinorGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisMinorGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisMinorLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisMinorLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisStrip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisStrip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ArgumentAxisStripLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentAxisStripLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisConstantLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisConstantLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisConstantLineLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisConstantLineLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisMinorGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisMinorGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisMinorLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisMinorLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisStrip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisStrip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.CommonAxisStripLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="commonAxisStripLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.IconExportButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconExportButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.LegendMarkers(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="legendMarkers"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.LegendRect(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="legendRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.LegendText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="legendText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.LoadingIndicatorRect(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="loadingIndicatorRect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.LoadingIndicatorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="loadingIndicatorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.Subtitle(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subtitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.Title(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="title"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.TooltipCloud(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tooltipCloud"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.TooltipText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tooltipText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisConstantLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisConstantLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisConstantLineLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisConstantLineLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisMinorGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisMinorGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisMinorLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisMinorLabel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisStrip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisStrip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartCssClassesBuilder.ValueAxisStripLabel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueAxisStripLabel"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder">
      <summary>
        <para>Stores settings of the Line series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.Closed(System.Boolean)">
      <summary>
        <para>Specifies whether to close the chart by joining the end point with the first point.</para>
      </summary>
      <param name="closed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>An object defining configuration options for points in line and area series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartLineSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder">
      <summary>
        <para>Stores settings of the Scatter series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>An object defining configuration options for points in line and area series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartScatterSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder">
      <summary>
        <para>Stores settings of a  series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Closed(System.Boolean)">
      <summary>
        <para>Specifies whether to close the chart by joining the end point with the first point.</para>
      </summary>
      <param name="closed"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal length of a displayed bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Point(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartPointSettingsBuilder})">
      <summary>
        <para>An object defining configuration options for points in line and area series.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies the name of the stack where the values of the StackedBar series must be located.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Type(DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType)">
      <summary>
        <para>Sets a series type.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.ValueErrorBar(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartValueErrorBarSettingsBuilder})">
      <summary>
        <para>Configures error bars for numeric axes.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder">
      <summary>
        <para>A collection of  series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder.AddAreaSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder.AddBarSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder.AddLineSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder.AddScatterSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartSeriesCollectionBuilder.AddStackedBarSeries">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder">
      <summary>
        <para>Stores settings of the Stacked Bar series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.ArgumentField(System.String)">
      <summary>
        <para>Sets the name of a data field providing arguments for series points.</para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the series element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para>Specifies whether a chart ignores null data points or not.</para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartSeriesLabelSettingsBuilder})">
      <summary>
        <para>Provides access to point label settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.LegendMarkerCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a legend marker element.</para>
      </summary>
      <param name="legendMarkerCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.MaxLabelCount(System.Int32)">
      <summary>
        <para>Specifies a limit for the number of point labels.</para>
      </summary>
      <param name="maxLabelCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.MinBarSize(System.Int32)">
      <summary>
        <para>Specifies the minimal length of a displayed bar in pixels.</para>
      </summary>
      <param name="minBarSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.Name(System.String)">
      <summary>
        <para>Specifies the name that identifies the series.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.ShowInLegend(System.Boolean)">
      <summary>
        <para>E sets a value that specifies whether or not to show the series in the chart&#39;s legend.</para>
      </summary>
      <param name="showInLegend"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.Stack(System.String)">
      <summary>
        <para>Specifies the name of the stack where the values of the StackedBar series must be located.</para>
      </summary>
      <param name="stack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.TagField(System.String)">
      <summary>
        <para>Sets the name of a data field providing auxiliary data associated with a point.</para>
      </summary>
      <param name="tagField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.ValueField(System.String)">
      <summary>
        <para>Specifies the data source field that provides values for series points.</para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartStackedBarSeriesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current chart series.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder">
      <summary>
        <para>Stores settings of the  control&#39;s value axis.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.AxisDivisionFactor(System.Int32)">
      <summary>
        <para>Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the &quot;continuous&quot; and &quot;logarithmic&quot; types.</para>
      </summary>
      <param name="axisDivisionFactor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.ConstantLineCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineCollectionBuilder})">
      <summary>
        <para>Provides access to a collection of constant lines belonging to the axis.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.ConstantLineStyle(System.Action{DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.DiscreteAxisDivisionMode(DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode)">
      <summary>
        <para>Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the &quot;discrete&quot; type.</para>
      </summary>
      <param name="discreteAxisDivisionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.GridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether grid lines are visible.</para>
      </summary>
      <param name="gridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.Inverted(System.Boolean)">
      <summary>
        <para>Inverts the axis.</para>
      </summary>
      <param name="inverted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartAxisLabelSettingsBuilder})">
      <summary>
        <para>An object defining the label configuration options that are common for all axes in the Polar Chart widget.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.LogarithmBase(System.Int32)">
      <summary>
        <para>Specifies the value to be raised to a power when generating ticks for an axis of the logarithmic type.</para>
      </summary>
      <param name="logarithmBase"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MaxValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinorGridVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether the minor grid is visible.</para>
      </summary>
      <param name="minorGridVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinorTickCount(System.Int32)">
      <summary>
        <para>Specifies how many minor ticks to place between two neighboring major ticks.</para>
      </summary>
      <param name="minorTickCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinorTickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between minor ticks.</para>
      </summary>
      <param name="minorTickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinorTickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the minor tick interval.</para>
      </summary>
      <param name="minorTickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinorTickLength(System.Int32)">
      <summary>
        <para>Specifies the length of minor ticks in pixels.</para>
      </summary>
      <param name="minorTickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinorTickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether minor ticks are visible.</para>
      </summary>
      <param name="minorTickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.MinValueMargin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValueMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.ShowZero(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether or not to indicate a zero value on the value axis.</para>
      </summary>
      <param name="showZero"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.StripCollection(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartStripCollectionBuilder})">
      <summary>
        <para>Declares a collection of strips belonging to the argument axis.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.TickInterval(System.Decimal)">
      <summary>
        <para>Specifies the interval between axis ticks.</para>
      </summary>
      <param name="tickInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.TickIntervalUnit(DevExpress.AspNetCore.Bootstrap.VizTimeInterval)">
      <summary>
        <para>Specifies the measurement unit of the interval between axis ticks.</para>
      </summary>
      <param name="tickIntervalUnit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.TickLength(System.Int32)">
      <summary>
        <para>Specifies the length of ticks in pixels.</para>
      </summary>
      <param name="tickLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.TickVisible(System.Nullable{System.Boolean})">
      <summary>
        <para>Specifies whether ticks are visible.</para>
      </summary>
      <param name="tickVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.Type(DevExpress.AspNetCore.Bootstrap.AxisScaleType)">
      <summary>
        <para>Specifies the type of the axis.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.ValueMarginsEnabled(System.Boolean)">
      <summary>
        <para>Adds an empty space between the axis and the minimum and maximum series points.</para>
      </summary>
      <param name="valueMarginsEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.ValueType(System.Type)">
      <summary>
        <para>Sets the type of values.</para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPolarChartValueAxisBuilder.Visible(System.Boolean)">
      <summary>
        <para>Specifies whether the axis line is visible.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores the &#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBootstrapSpecificSettingsBuilder.Sizing(DevExpress.AspNetCore.Bootstrap.BootstrapSizing)">
      <summary>
        <para>Specifies the sizing mode of the Popup Control&#39;s elements.</para>
      </summary>
      <param name="sizing"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder">
      <summary>
        <para>A web control that enables you to add the popup window functionality to your web application.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.AllowDragging(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a control&#39;s window can be dragged by end users.</para>
      </summary>
      <param name="allowDragging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.AllowResize(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the control&#39;s window can be resized by end-users on the client side.</para>
      </summary>
      <param name="allowResize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.AppearAfter(System.Int32)">
      <summary>
        <para>Sets the delay in displaying the popup control&#39;s popup window.</para>
      </summary>
      <param name="appearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.AutoUpdatePosition(System.Boolean)">
      <summary>
        <para>Sets the value that specifies whether the default popup window&#39;s position is updated automatically, when required.</para>
      </summary>
      <param name="autoUpdatePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the current popup control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.CloseAction(DevExpress.AspNetCore.CloseAction)">
      <summary>
        <para>Sets a value that specifies which action forces a displayed popup window to close.</para>
      </summary>
      <param name="closeAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.CloseAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para>Sets a value specifying the animation type used to close popup windows.</para>
      </summary>
      <param name="closeAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.CloseOnEscape(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a popup window is closed when an end-user presses the ESC key.</para>
      </summary>
      <param name="closeOnEscape"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Content(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ContentUrl(System.String)">
      <summary>
        <para>Sets the navigation location of a specific web page to be displayed within the control&#39;s window.</para>
      </summary>
      <param name="contentUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ContentUrlIFrameTitle(System.String)">
      <summary>
        <para>Sets the title of the window&#39;s IFRAME element.</para>
      </summary>
      <param name="contentUrlIFrameTitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the .</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.DisappearAfter(System.Int32)">
      <summary>
        <para>Sets the delay in hiding the popup control&#39;s popup window.</para>
      </summary>
      <param name="disappearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.DragElement(DevExpress.AspNetCore.DragElement)">
      <summary>
        <para>Sets a window&#39;s part available for drag and drop operations.</para>
      </summary>
      <param name="dragElement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.EnableCallbackAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a fade animation effect is used when a window&#39;s content is updated via a callback.</para>
      </summary>
      <param name="enableCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.EnableCallbackCompression(System.Boolean)">
      <summary>
        <para>Sets whether callback result compression is enabled.</para>
      </summary>
      <param name="enableCallbackCompression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the control can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.FooterContentTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template to display the content of the default window&#39;s footer.</para>
      </summary>
      <param name="footerContentTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.FooterNavigateUrl(System.String)">
      <summary>
        <para>Sets an URL where the client&#39;s web browser will navigate when the text or image is clicked within a window&#39;s footer.</para>
      </summary>
      <param name="footerNavigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.FooterTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template to display the default window&#39;s footer.</para>
      </summary>
      <param name="footerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.FooterText(System.String)">
      <summary>
        <para>Sets the text content of a window&#39;s footer.</para>
      </summary>
      <param name="footerText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.HeaderContentTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the default window&#39;s header.</para>
      </summary>
      <param name="headerContentTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.HeaderNavigateUrl(System.String)">
      <summary>
        <para>Sets an URL where the client&#39;s web browser will navigate when the text or image is clicked within a window&#39;s header.</para>
      </summary>
      <param name="headerNavigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.HeaderTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the default window&#39;s header.</para>
      </summary>
      <param name="headerTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.HeaderText(System.String)">
      <summary>
        <para>Sets the text content of a window&#39;s header.</para>
      </summary>
      <param name="headerText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Left(System.Int32)">
      <summary>
        <para>Sets the x-coordinate of a control&#39;s left side.</para>
      </summary>
      <param name="left"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.LoadContentViaCallback(DevExpress.AspNetCore.LoadContentViaCallback)">
      <summary>
        <para>Sets a value specifying the content loading mode for the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder"/>.</para>
      </summary>
      <param name="loadContentViaCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MaxHeight(System.Int32)">
      <summary>
        <para>Sets the maximum height of a control&#39;s window.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MaxHeight(System.String)">
      <summary>
        <para>Sets the maximum height of a control&#39;s window.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MaxWidth(System.Int32)">
      <summary>
        <para>Sets the maximum width of a control&#39;s window.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MaxWidth(System.String)">
      <summary>
        <para>Sets the maximum width of a control&#39;s window.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MinHeight(System.Int32)">
      <summary>
        <para>Sets the minimum height of a control&#39;s window.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MinHeight(System.String)">
      <summary>
        <para>Sets the minimum height of a control&#39;s window.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of a control&#39;s window.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of a control&#39;s window.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Modal(System.Boolean)">
      <summary>
        <para>Sets whether the default popup window is modal.</para>
      </summary>
      <param name="modal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupAction(DevExpress.AspNetCore.PopupAction)">
      <summary>
        <para>Sets a value that specifies which action forces a popup window to appear.</para>
      </summary>
      <param name="popupAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupAlignCorrection(DevExpress.AspNetCore.PopupAlignCorrection)">
      <summary>
        <para>Provides the capability to disable the automatic correction of a popup window position.</para>
      </summary>
      <param name="popupAlignCorrection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupAnimationType(DevExpress.AspNetCore.AnimationType)">
      <summary>
        <para>Sets a value specifying the animation type used to show popup windows.</para>
      </summary>
      <param name="popupAnimationType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupElementCssSelector(System.String)">
      <summary>
        <para>Sets the CSS selector of a web control or HTML element with which the current popup window is associated.</para>
      </summary>
      <param name="popupElementCssSelector"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupHorizontalAlign(DevExpress.AspNetCore.PopupHorizontalAlign)">
      <summary>
        <para>Sets a popup window&#39;s horizontal alignment.</para>
      </summary>
      <param name="popupHorizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupHorizontalOffset(System.Int32)">
      <summary>
        <para>Sets a popup window&#39;s horizontal offset.</para>
      </summary>
      <param name="popupHorizontalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupVerticalAlign(DevExpress.AspNetCore.PopupVerticalAlign)">
      <summary>
        <para>Sets a popup window&#39;s vertical alignment.</para>
      </summary>
      <param name="popupVerticalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.PopupVerticalOffset(System.Int32)">
      <summary>
        <para>Sets a popup window&#39;s vertical offset.</para>
      </summary>
      <param name="popupVerticalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.RenderIFrameForPopupElements(System.Nullable{System.Boolean})">
      <summary>
        <para>Sets a value that specifies whether the control&#39;s window (popup windows for PopupControl) is displayed above Java applets that may present on the web page.</para>
      </summary>
      <param name="renderIFrameForPopupElements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ResizingMode(DevExpress.AspNetCore.ResizingMode)">
      <summary>
        <para>Sets a value that specifies when the window being resized should be redrawn.</para>
      </summary>
      <param name="resizingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.PopupControlRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.SaveStateToCookies(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether cookies are used to persist the pin, minimize and maximize states, visibility, size, and position of the element (windows for PopupControl, dock panel for DockPanel).</para>
      </summary>
      <param name="saveStateToCookies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.SaveStateToCookiesID(System.String)">
      <summary>
        <para>Sets the name (identifier) of the cookie in which the control&#39;s state is persisted.</para>
      </summary>
      <param name="saveStateToCookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ScrollBars(DevExpress.AspNetCore.ScrollBars)">
      <summary>
        <para>Sets a value specifying which scrollbars should appear in the control&#39;s window.</para>
      </summary>
      <param name="scrollBars"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder})">
      <summary>
        <para>Provides access to the popup window&#39;s adaptivity settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBootstrapSpecificSettingsBuilder})">
      <summary>
        <para>Provides access to the &#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para>Provides access to the loading panel settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ShowCloseButton(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a window&#39;s close button is displayed.</para>
      </summary>
      <param name="showCloseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ShowFooter(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a window&#39;s footer is displayed.</para>
      </summary>
      <param name="showFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ShowHeader(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a window&#39;s header is displayed.</para>
      </summary>
      <param name="showHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ShowOnPageLoad(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the window is automatically displayed when a client browser loads the page.</para>
      </summary>
      <param name="showOnPageLoad"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ShowPageScrollbarWhenModal(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a browser&#39;s scroll bars can be displayed when the default popup window is shown in modal mode.</para>
      </summary>
      <param name="showPageScrollbarWhenModal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ShowViewportScrollbarWhenModal(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the vertical and horizontal scroll bars can be displayed in the viewport when a popup window is shown in modal mode.</para>
      </summary>
      <param name="showViewportScrollbarWhenModal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Target(System.String)">
      <summary>
        <para>Sets a window or frame at which to tarthe contents of the URLs associated with links in a window&#39;s header and footer.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed within a window&#39;s content region.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlBuilder.Top(System.Int32)">
      <summary>
        <para>Sets the y-coordinate of a control&#39;s top side.</para>
      </summary>
      <param name="top"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the .</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.CloseButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Close button element.</para>
      </summary>
      <param name="closeButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.Content(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the content container element.</para>
      </summary>
      <param name="content"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.Footer(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the footer element.</para>
      </summary>
      <param name="footer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.Header(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the header element.</para>
      </summary>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.IconClose(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by to Popup Control&#39;s Close button.</para>
      </summary>
      <param name="iconClose"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupControlCssClassesBuilder.ModalBackground(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the modal background element.</para>
      </summary>
      <param name="modalBackground"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.AllowSelectItem(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowSelectItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.AppearAfter(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.CloseAction(DevExpress.AspNetCore.PopupMenuCloseAction)">
      <summary>
        <para></para>
      </summary>
      <param name="closeAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMenuCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.DisappearAfter(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="disappearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.IconCssClassField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ItemSubMenuOffset(System.Action{DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.Left(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="left"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.MaximumDisplayLevels(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maximumDisplayLevels"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.NameField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.NavigateUrlField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapMenu,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupAction(DevExpress.AspNetCore.PopupAction)">
      <summary>
        <para></para>
      </summary>
      <param name="popupAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupAlignCorrection(DevExpress.AspNetCore.PopupAlignCorrection)">
      <summary>
        <para></para>
      </summary>
      <param name="popupAlignCorrection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupElementCssSelector(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="popupElementCssSelector"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupHorizontalAlign(DevExpress.AspNetCore.PopupHorizontalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="popupHorizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupHorizontalOffset(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="popupHorizontalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupVerticalAlign(DevExpress.AspNetCore.PopupVerticalAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="popupVerticalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.PopupVerticalOffset(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="popupVerticalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.RenderIFrameForPopupElements(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="renderIFrameForPopupElements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.RootItemSubMenuOffset(System.Action{DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.RootItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="rootItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.RootItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="rootItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.RootItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="rootItemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.RootItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="rootItemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.SelectParentItem(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectParentItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ShowPopOutImages(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showPopOutImages"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapMenuItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.SyncSelectionMode(DevExpress.AspNetCore.SyncSelectionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="syncSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.Target(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.TextFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.ToolTipField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPopupMenuBuilder.Top(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="top"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder">
      <summary>
        <para>Contains settings specific to the button that when clicked, navigates a user to the previous page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the button&#39;s image.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed in a pager button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format a pager button&#39;s text for display.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapPrevButtonPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores BootstrapProgressBar&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBootstrapSpecificSettingsBuilder.Animated(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether or not the pattern displayed by a stripped Progress Bar is animated.</para>
      </summary>
      <param name="animated"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBootstrapSpecificSettingsBuilder.RenderOption(DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption)">
      <summary>
        <para>Specifies a contextual appearance style used to render the Progress Bar.</para>
      </summary>
      <param name="renderOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBootstrapSpecificSettingsBuilder.Striped(System.Boolean)">
      <summary>
        <para>Specifies whether or not the Progress Bar should display a striped pattern in its filled area.</para>
      </summary>
      <param name="striped"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilder">
      <summary>
        <para>Represents a progress bar control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilder.Value(System.Object)">
      <summary>
        <para>Sets the control&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBaseBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.EditClientSideEventsBaseBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.CustomDisplayFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customDisplayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.DisplayMode(DevExpress.AspNetCore.ProgressBarDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.Maximum(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="maximum"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.Minimum(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="minimum"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.Position(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.ShowPosition(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Progress Bar control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a progress bar control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.EditClientSideEventsBaseBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the ProgressBar.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.CustomDisplayFormat(System.String)">
      <summary>
        <para>Sets the pattern used to format the text displayed for the progress bar if the <see cref="P:DevExpress.Web.ProgressBarProperties.DisplayMode"/> property is set to <see cref="F:DevExpress.Web.ProgressBarDisplayMode.Custom"/>.</para>
      </summary>
      <param name="customDisplayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>This property is not in effect for the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder"/> class.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.DisplayMode(DevExpress.AspNetCore.ProgressBarDisplayMode)">
      <summary>
        <para>Sets the display mode of the current position within the progress bar.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.Height(System.Int32)">
      <summary>
        <para>Sets the control&#39;s height.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.Height(System.String)">
      <summary>
        <para>Sets the control&#39;s height.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.Maximum(System.Decimal)">
      <summary>
        <para>Sets the maximum range value of the progress bar control.</para>
      </summary>
      <param name="maximum"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.Minimum(System.Decimal)">
      <summary>
        <para>Sets the minimum range value of the progress bar control.</para>
      </summary>
      <param name="minimum"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.ShowPosition(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the progress bar indicator&#39;s current position is visible within the progress bar.</para>
      </summary>
      <param name="showPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the control&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the control&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption">
      <summary>
        <para>Lists values that specify a contextual appearance style applied to the  control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption.Danger">
      <summary>
        <para>The danger style is applied to the progress bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption.Info">
      <summary>
        <para>The info style is applied to the progress bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption.None">
      <summary>
        <para>No contextual style is applied to the progress bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption.Success">
      <summary>
        <para>The success style is applied to the progress bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapProgressBarRenderOption.Warning">
      <summary>
        <para>The warning style is applied to the progress bar.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilder">
      <summary>
        <para>Represents a radio button control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.Checked(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.GroupName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCheckboxAndRadioBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Radio Button control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilder">
      <summary>
        <para>Represents a group of radio button editors that allow one option from several to be selected.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.RepeatColumns(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="repeatColumns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.RepeatDirection(DevExpress.AspNetCore.RepeatDirection)">
      <summary>
        <para></para>
      </summary>
      <param name="repeatDirection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.SelectedIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="selectedIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListBuilderBase`1.ValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="valueType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Radio Button List&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRadioButtonListCssClassesBuilder.Item(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a list item element.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRemoveButtonPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRemoveButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapRemoveButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption">
      <summary>
        <para>Lists specific Bootstrap styles that can be applied to the control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Danger">
      <summary>
        <para>The danger style is applied to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Dark">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Default">
      <summary>
        <para>Default. A control renders with its default styles.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Info">
      <summary>
        <para>The info style is applied to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Light">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Link">
      <summary>
        <para>The link style is applied to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.None">
      <summary>
        <para>The none style is applied to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Primary">
      <summary>
        <para>The primary style is applied to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Secondary">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Success">
      <summary>
        <para>The success style is applied to a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption.Warning">
      <summary>
        <para>The warning style is applied to a control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder`1.Caption``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="captionExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder`1.Color``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="colorExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder`1.Image``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="imageExpression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder`1.ResourceId``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="resourceIdExpression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilderBase`1.Color(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilderBase`1.Image(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="image"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilderBase`1.ResourceId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceId"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder.CustomFieldMappings(System.Action{DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder.Mappings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder`1.CustomFieldMappings(System.Action{DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder`1.Mappings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapResourceMappingInfoBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilderBase`1.FilterExpression(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filterExpression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogCommandItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogCommandItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogCommandItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogEndTimeItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogEndTimeItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogEndTimeItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder.AddAppointmentItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder.AddCommandItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder.AddEndTimeItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder.AddRecurrenceInfoItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder.AddStartTimeItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder.AddStatusInfoItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder`1.AddAppointmentItem``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="fieldExpr"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.BinaryImage">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.Button">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.Calendar">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.DateEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.DropDownEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.HyperLink">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.ProgressBar">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.RadioButton">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.SpinEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.TagBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.TextBox">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.TimeEdit">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutItemEditorBuilder.UploadControl">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogRecurrenceInfoItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogRecurrenceInfoItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogRecurrenceInfoItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilder.LayoutItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilder`1.LayoutItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogLayoutCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilderBase`1.Visibility(DevExpress.AspNetCore.Bootstrap.SchedulerFormVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="visibility"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogStartTimeItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogStartTimeItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogStartTimeItemBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogStatusInfoItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogStatusInfoItemBuilder.Editor(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemEditorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder.OptionsDialogs(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder.Storage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`1.OptionsDialogs(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`1.Storage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`2.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`2.OptionsDialogs(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilder`2.Storage(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder{`0,`1}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.ActiveViewType(DevExpress.XtraScheduler.SchedulerViewType)">
      <summary>
        <para></para>
      </summary>
      <param name="activeViewType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.BindAppointments(System.Object)">
      <summary>
        <para>Binds the Scheduler&#39;s appointments to the specified appointment collection.</para>
      </summary>
      <param name="dataObject">A collection of Scheduler appointments.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.BindResources(System.Object)">
      <summary>
        <para>Binds the Scheduler&#39;s resources to the specified resource collection.</para>
      </summary>
      <param name="dataObject">An collection of resources.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesFormEditors(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesMenu(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesPopupForm(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesResourceNavigatorPager(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesResourceNavigatorTokens(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesViewNavigator(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.CssClassesViewSelector(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewSelectorCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.EnableCallbackAnimation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.EnableChangeVisibleIntervalCallbackAnimation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableChangeVisibleIntervalCallbackAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.EnableChangeVisibleIntervalGestures(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="enableChangeVisibleIntervalGestures"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.EnablePagingGestures(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="enablePagingGestures"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.GroupType(DevExpress.XtraScheduler.SchedulerGroupType)">
      <summary>
        <para></para>
      </summary>
      <param name="groupType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.LimitInterval(System.Action{DevExpress.AspNetCore.Bootstrap.TimeIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentConflicts(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentConflictEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentCopy(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentCreate(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentDelete(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentDrag(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentDragBetweenResources(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentEdit(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowAppointmentResize(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnAllowInplaceEditor(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnBeforeRender(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnContextMenuShowing(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerContextMenuShowingEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnInitAppointmentDisplayText(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentDisplayTextEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAdaptivityBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsAppearance(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAppearanceBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsBehavior(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsCookies(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsEditing(System.Action{DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsResourceNavigator(System.Action{DevExpress.AspNetCore.Bootstrap.ResourceNavigatorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsToolTips(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsToolTipsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.OptionsView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.Start(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="start"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerBuilderBase`1.Views(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerContextMenuType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerContextMenuType.Appointment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerContextMenuType.Timeline">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.AlternateDateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="alternateDateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.DateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.DayHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.ErrorInformation(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="errorInformation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.FormButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="formButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.HorizontalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconAppointmentEndArrow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconAppointmentEndArrow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconAppointmentNoRecurrence(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconAppointmentNoRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconAppointmentRecurrence(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconAppointmentRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconAppointmentReminder(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconAppointmentReminder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconAppointmentStartArrow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconAppointmentStartArrow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconNavigationButtonBackward(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNavigationButtonBackward"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.IconNavigationButtonForward(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNavigationButtonForward"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.NavigationButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.Toolbar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolbar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerCssClassesBuilder.ViewVisibleInterval(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewVisibleInterval"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.AllDayAppointmentsStatusDisplayType(DevExpress.XtraScheduler.AppointmentStatusDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="allDayAppointmentsStatusDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.AppointmentAutoHeight(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentAutoHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.AppointmentGapWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentGapWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.AppointmentHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.ContinueArrowDisplayType(DevExpress.XtraScheduler.AppointmentContinueArrowDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="continueArrowDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.EndTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="endTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.FirstAllDayAppointmentTopIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="firstAllDayAppointmentTopIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.LastAllDayAppointmentBottomIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="lastAllDayAppointmentBottomIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.ShowRecurrence(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.ShowReminder(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showReminder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.SnapToCellsMode(DevExpress.XtraScheduler.AppointmentSnapToCellsMode)">
      <summary>
        <para></para>
      </summary>
      <param name="snapToCellsMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.StartTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="startTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.StatusDisplayType(DevExpress.XtraScheduler.AppointmentStatusDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="statusDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder.TimeDisplayType(DevExpress.XtraScheduler.AppointmentTimeDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="timeDisplayType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDefaultLabelColorsMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDefaultLabelColorsMode.Bootstrap">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDefaultLabelColorsMode.Internal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogSettingsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogSettingsBuilderBase`1.PopupWindowSize(DevExpress.AspNetCore.Bootstrap.BootstrapDialogSizing)">
      <summary>
        <para></para>
      </summary>
      <param name="popupWindowSize"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder.AppointmentDialog(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilder`1.AppointmentDialog(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerAppointmentDialogSettingsBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDialogsSettingsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImage(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImageButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImageButtonPanel(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageButtonPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImageDeleteButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImageEmptyValueText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageEmptyValueText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImageOpenDialogButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageOpenDialogButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.BinaryImageProgressBar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="binaryImageProgressBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ButtonEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ButtonEditButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonEditButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ButtonEditClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonEditClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.Calendar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDay(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDayDisabled(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayDisabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDayHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDayOtherMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayOtherMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDayOutOfRange(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayOutOfRange"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDaySelected(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDaySelected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarDayWeekEnd(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarDayWeekEnd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarFastNavHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarFastNavigation(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavigation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarFastNavItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarFastNavItemOtherPeriod(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFastNavItemOtherPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarFooter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarMonthGrid(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarMonthGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarToday(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarToday"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CalendarWeekNumber(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="calendarWeekNumber"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CheckBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="checkBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.CheckBoxList(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="checkBoxList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ComboBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="comboBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.DateEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.DateEditTimeSection(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateEditTimeSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.DropDownEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.DropDownWindow(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownWindow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.Hyperlink(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="hyperlink"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconBinaryImageDeleteButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBinaryImageDeleteButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconBinaryImageOpenDialogButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBinaryImageOpenDialogButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconDecrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconDropDownButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDropDownButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconFastNavBack(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavBack"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconFastNavNextPeriod(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavNextPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconFastNavNextYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconFastNavPrevPeriod(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavPrevPeriod"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconFastNavPrevYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFastNavPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconIncrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconLargeDecrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconLargeDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconLargeIncrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconLargeIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconListBoxHideFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconListBoxHideFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconListBoxShowFilterButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconListBoxShowFilterButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconNextMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNextMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconNextYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNextYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconPrevMonth(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrevMonth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconPrevYear(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrevYear"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.IconTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.Image(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="image"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ListBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ListBoxFilter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxFilter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ListBoxFilterEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxFilterEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ListBoxItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ListBoxSelectAll(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxSelectAll"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.Memo(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="memo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.ProgressBar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="progressBar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.RadioButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="radioButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.RadioButtonList(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="radioButtonList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.SpinEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="spinEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.TagBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.TagBoxInput(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.TagBoxTag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxTag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.TagBoxTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagBoxTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.TextBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerFormEditorsCssClassesBuilder.TimeEdit(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeEdit"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder.IconSubMenuItemChecked(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconSubMenuItemChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder.MenuItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="menuItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder.Separator(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="separator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder.SubMenu(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerMenuCssClassesBuilder.SubMenuItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuItem"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAdaptivityBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAdaptivityBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAppearanceBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAppearanceBuilder.DefaultAppointmentColorsMode(DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDefaultLabelColorsMode)">
      <summary>
        <para></para>
      </summary>
      <param name="defaultAppointmentColorsMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAppearanceBuilder.ResourceColorSchemas(System.Action{DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsAppearanceBuilder.UseResourceColorSchemas(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useResourceColorSchemas"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ClientTimeZoneId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clientTimeZoneId"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.HighlightSelectionHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightSelectionHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.RecurrentAppointmentDeleteAction(DevExpress.XtraScheduler.RecurrentAppointmentAction)">
      <summary>
        <para></para>
      </summary>
      <param name="recurrentAppointmentDeleteAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.RecurrentAppointmentEditAction(DevExpress.XtraScheduler.RecurrentAppointmentAction)">
      <summary>
        <para></para>
      </summary>
      <param name="recurrentAppointmentEditAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.RemindersFormDefaultAction(DevExpress.XtraScheduler.RemindersFormDefaultAction)">
      <summary>
        <para></para>
      </summary>
      <param name="remindersFormDefaultAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ShowDetailedErrorInfo(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDetailedErrorInfo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ShowRemindersForm(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRemindersForm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ShowViewNavigator(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showViewNavigator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ShowViewNavigatorGotoDateButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showViewNavigatorGotoDateButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ShowViewSelector(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showViewSelector"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsBehaviorBuilder.ShowViewVisibleInterval(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showViewVisibleInterval"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder.MaxHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder.MinHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder.Mode(DevExpress.AspNetCore.Bootstrap.AutoHeightMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.CookiesID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreActiveViewType(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeActiveViewType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreDayViewTimeScale(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeDayViewTimeScale"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreGroupType(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeGroupType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreStart(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreTimelineScalesInfo(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeTimelineScalesInfo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreTimeZoneId(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeTimeZoneId"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.StoreWorkWeekViewTimeScale(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="storeWorkWeekViewTimeScale"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCookiesBuilder.Version(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="version"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsToolTipsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsToolTipsBuilder.ShowAppointmentDragToolTip(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAppointmentDragToolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsToolTipsBuilder.ShowAppointmentToolTip(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAppointmentToolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder.FirstDayOfWeek(DevExpress.XtraScheduler.FirstDayOfWeek)">
      <summary>
        <para></para>
      </summary>
      <param name="firstDayOfWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder.NavigationButtons(System.Action{DevExpress.AspNetCore.Bootstrap.SchedulerNavigationButtonOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder.ResourceColorFillArea(DevExpress.AspNetCore.Bootstrap.ResourceColorFillArea)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceColorFillArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder.ResourceHeaders(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceHeaderOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsViewBuilder.ShowOnlyResourceAppointments(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showOnlyResourceAppointments"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.CloseButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="closeButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.Content(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="content"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.Footer(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="footer"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.Header(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="header"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.IconClose(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconClose"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerPopupFormCssClassesBuilder.ModalBackground(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="modalBackground"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceHeaderOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceHeaderOptionsBuilder.ImageAlign(DevExpress.XtraScheduler.HeaderImageAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="imageAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceHeaderOptionsBuilder.RotateCaption(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="rotateCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceHeaderOptionsBuilder.ShowCaption(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showCaption"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.Button(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.ComboBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="comboBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.ComboBoxItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="comboBoxItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.ComboBoxList(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="comboBoxList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconDecrease(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDecrease"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconFirst(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconFirst"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconIncrease(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconIncrease"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconLast(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconLast"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconNext(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNext"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconNextPage(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNextPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconPrev(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrev"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorPagerCssClassesBuilder.IconPrevPage(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrevPage"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.Button(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.IconShowLess(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconShowLess"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.IconShowMore(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconShowMore"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.IconShowPopup(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconShowPopup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.IconTokenClose(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTokenClose"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.ListBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.ListBoxItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBoxItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.Popup(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="popup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.TextBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerResourceNavigatorTokensCssClassesBuilder.Token(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="token"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder.Appointments(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder.Resources(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder`1.Appointments(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder`1.Resources(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder`2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder`2.Appointments(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAppointmentStorageBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilder`2.Resources(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapResourceStorageBuilder{`1}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1.DateTimeSavingMode(DevExpress.XtraScheduler.DateTimeSavingMode)">
      <summary>
        <para></para>
      </summary>
      <param name="dateTimeSavingMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1.EnableReminders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableReminders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1.EnableTimeZones(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableTimeZones"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1.ReminderDstBehaviorType(DevExpress.XtraScheduler.DstBehaviorType)">
      <summary>
        <para></para>
      </summary>
      <param name="reminderDstBehaviorType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1.RemindersCheckInterval(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="remindersCheckInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerStorageBuilderBase`1.TimeZoneId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeZoneId"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerUpdateAppointments`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerUpdateAppointments`1.Delete">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerUpdateAppointments`1.Insert">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerUpdateAppointments`1.IsValid">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerUpdateAppointments`1.Update">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder.Button(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder.IconCalendar(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCalendar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder.IconNext(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconNext"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewNavigatorCssClassesBuilder.IconPrev(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconPrev"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.AgendaView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapAgendaViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.DayView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapDayViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.FullWeekView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFullWeekViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.MonthView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapMonthViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.TimelineView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.WeekView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewRepositoryBuilder.WorkWeekView(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewSelectorCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewSelectorCssClassesBuilder.Button(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerViewSelectorCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder">
      <summary>
        <para>Contains settings that define the appearance and position of arrow buttons within a time editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of an edit button on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the button is enabled, allowing it to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder.ShowIncrementButtons(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether small increment spin buttons are displayed.</para>
      </summary>
      <param name="showIncrementButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current edit button&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSizing">
      <summary>
        <para>Lists values that define the sizing of a Bootstrap control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSizing.Large">
      <summary>
        <para>A control displays visual elements of large size.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSizing.Normal">
      <summary>
        <para>A control displays visual elements of normal size.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSizing.NotSet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BootstrapSizing.Small">
      <summary>
        <para>A control displays visual elements of small size.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.AccessibleDescription(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="accessibleDescription"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.ArgumentField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argumentField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.BarNegativeColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="barNegativeColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.BarPositiveColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="barPositiveColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.Bind(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="url"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.FirstLastColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="firstLastColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.IgnoreEmptyPoints(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="ignoreEmptyPoints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.LineColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="lineColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.LineWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="lineWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.LossColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="lossColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.MaxColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="maxColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.MaxValue(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="maxValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.MinColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="minColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.MinValue(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="minValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.PathModified(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="pathModified"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.PointColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="pointColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.PointSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="pointSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.PointSymbol(DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol)">
      <summary>
        <para></para>
      </summary>
      <param name="pointSymbol"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.RightToLeft(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="rightToLeft"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.SettingsToolTip(System.Action{DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.ShowFirstLast(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showFirstLast"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.ShowMinMax(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMinMax"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.Type(DevExpress.AspNetCore.Bootstrap.SparklineType)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.WinColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="winColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineBuilder.WinLossThreshold(System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="winLossThreshold"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.Disposing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="disposing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.Drawn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="drawn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.Exported(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="exported"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.Exporting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="exporting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.FileSaving(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fileSaving"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.IncidentOccurred(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="incidentOccurred"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.OptionChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="optionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.TooltipHidden(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tooltipHidden"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSparklineClientSideEventsBuilder.TooltipShown(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tooltipShown"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder">
      <summary>
        <para>Contains settings that define the appearance and position of spin buttons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of an edit button on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the button is enabled, allowing it to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder.ShowIncrementButtons(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether small increment spin buttons are displayed.</para>
      </summary>
      <param name="showIncrementButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder.ShowLargeIncrementButtons(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether large increment spin buttons are displayed.</para>
      </summary>
      <param name="showLargeIncrementButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current edit button&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilder">
      <summary>
        <para>Represents a spin edit control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilder.Value(System.Object)">
      <summary>
        <para>Sets the editor&#39;s value.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.AllowMouseWheel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.AllowNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.AllowUserInput(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.DecimalPlaces(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="decimalPlaces"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.Increment(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="increment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.LargeIncrement(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="largeIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.MaxValue(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="maxValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.MinValue(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="minValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.Number(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="number"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.NumberType(DevExpress.AspNetCore.SpinEditNumberType)">
      <summary>
        <para></para>
      </summary>
      <param name="numberType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ShowOutOfRangeWarning(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showOutOfRangeWarning"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.SpinButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditBuilderBase`1.ValueChangedDelay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="valueChangedDelay"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.Button(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a button element.</para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Clear button element.</para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Spin Edit control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s Clear button.</para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.IconDecrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the decrement button.</para>
      </summary>
      <param name="iconDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by an editor&#39;s ellipsis button.</para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.IconIncrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the increment button.</para>
      </summary>
      <param name="iconIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.IconLargeDecrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the large decrement button.</para>
      </summary>
      <param name="iconLargeDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.IconLargeIncrement(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by the large increment button.</para>
      </summary>
      <param name="iconLargeIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a spin editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.AllowMouseWheel(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an end-user is able to change the editor&#39;s value using the mouse wheel.</para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.AllowNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the spin editor allows null values to be entered.</para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.AllowUserInput(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether end-users are allowed to input values into an editor&#39;s edit box.</para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para>The collection of editor buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for rendering the editor&#39;s buttons.</para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para>The settings of the editor&#39;s Clear button.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the SpinEdit.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.DecimalPlaces(System.Int32)">
      <summary>
        <para>Sets the number of decimal places to display for the numbers in the spin editor.</para>
      </summary>
      <param name="decimalPlaces"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes if the <see cref="P:DevExpress.Web.SpinEditProperties.NumberFormat"/> property is set to <see cref="F:DevExpress.Web.SpinEditNumberFormat.Custom"/>.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.Increment(System.Decimal)">
      <summary>
        <para>Sets the value by which the spin editor&#39;s value is changed when clicking a small increment/decrement spin button.</para>
      </summary>
      <param name="increment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.LargeIncrement(System.Decimal)">
      <summary>
        <para>Sets the amount by which the spin editor&#39;s value is changed when clicking a large increment/decrement spin button.</para>
      </summary>
      <param name="largeIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para>Sets the maximum number of characters an end user can enter into the editor.</para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.MaxValue(System.Decimal)">
      <summary>
        <para>Sets the maximum value of the editor.</para>
      </summary>
      <param name="maxValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.MinValue(System.Decimal)">
      <summary>
        <para>Sets the editor&#39;s minimum value.</para>
      </summary>
      <param name="minValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.NumberFormat(DevExpress.AspNetCore.SpinEditNumberFormat)">
      <summary>
        <para>Sets the format of the spin editor&#39;s displayed number.</para>
      </summary>
      <param name="numberFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.NumberType(DevExpress.AspNetCore.SpinEditNumberType)">
      <summary>
        <para>Sets a value that specifies whether a spin editor edits float or integer values.</para>
      </summary>
      <param name="numberType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ShowOutOfRangeWarning(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a warning message is displayed when an end-user types a number that is out of the range specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.MinValue(System.Decimal)"/> and <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.MaxValue(System.Decimal)"/> methods.</para>
      </summary>
      <param name="showOutOfRangeWarning"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.SpinButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSpinButtonsBuilder})">
      <summary>
        <para>The settings of the editor&#39;s spin buttons.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.ValueChangedDelay(System.Int32)">
      <summary>
        <para>Sets the time interval between the time when an end-user starts changing the editor&#39;s value, and the client <see cref="E:DevExpress.Web.Scripts.ASPxClientSpinEdit.NumberChanged"/> and <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> events are raised.</para>
      </summary>
      <param name="valueChangedDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSpinEditPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.DisplayFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.ShowInColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.ShowInGroupFooterColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="showInGroupFooterColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.SummaryType(DevExpress.Data.SummaryItemType)">
      <summary>
        <para></para>
      </summary>
      <param name="summaryType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.Tag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.ValueDisplayFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueDisplayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapSummaryItemCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilder`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCollectionBuilder{`0}})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ActiveTabIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="activeTabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.BeginRow(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="beginRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ColSpanLg(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanLg"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ColSpanMd(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanMd"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ColSpanSm(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanSm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ColSpanXl(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.ColSpanXs(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="colSpanXs"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapFormTabbedLayoutGroupCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.SettingsItemCaptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.SettingsItemHelpTexts(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutItemHelpTextSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.SettingsItems(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapLayoutGroupItemSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.SettingsTabPages(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.TabAlign(DevExpress.AspNetCore.TabAlign)">
      <summary>
        <para></para>
      </summary>
      <param name="tabAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupBuilderBase`1.VisibleIndex(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.ActivateTabPageAction(DevExpress.AspNetCore.ActivateTabPageAction)">
      <summary>
        <para></para>
      </summary>
      <param name="activateTabPageAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.SaveStateToCookies(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="saveStateToCookies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.SaveStateToCookiesID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="saveStateToCookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabbedLayoutGroupTabPageSettingsBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder">
      <summary>
        <para>Represents an individual tab.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ActiveTabCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the current tab when the tab is active.</para>
      </summary>
      <param name="activeTabCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ActiveTabIconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed by the current tab when the tab is active.</para>
      </summary>
      <param name="activeTabIconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the current tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the current tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the tab.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the tab (or tab page) is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the tab&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the current tab is enabled, allowing the tab to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current tab object.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TabCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the tab.</para>
      </summary>
      <param name="tabCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TabIconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed by the current tab.</para>
      </summary>
      <param name="tabIconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current tab.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current tab.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the text content of the current tab.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the text content of the current tab.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current tab.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current tab (tab page) object.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the tab&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current tab&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current tab (tab page).</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current tab (tabbed page) amongst the visible tabs (tabbed pages) in a tab control.</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabCollectionBuilder">
      <summary>
        <para>Represents a collection of tabs within the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabCollectionBuilder.Add">
      <summary>
        <para>Adds a new tab to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder">
      <summary>
        <para>Represents a navigation control used to create tabbed interfaces.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActivateTabAction(DevExpress.AspNetCore.ActivateTabPageAction)">
      <summary>
        <para>Sets a value that specifies which action forces a tab to be selected</para>
      </summary>
      <param name="activateTabAction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActiveTabIconCssClassField(System.String)">
      <summary>
        <para>Specifies the name of a data field providing CSS classes of icons displayed by the active tab.</para>
      </summary>
      <param name="activeTabIconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActiveTabIndex(System.Int32)">
      <summary>
        <para>Sets the index of a tab (tabbed page) which is selected within the control.</para>
      </summary>
      <param name="activeTabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of an active tab within the current tab control.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of an active tab within the current tab control.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of an active tab within the current tab control.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of an active tab within the current tab control.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to a tab control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of a web control on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the Tab Control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the tab control can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.NameField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides tab unique identifier names.</para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.NavigateUrlField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides tab navigation locations.</para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format tab navigate URLs.</para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapTabControl,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.SyncSelectionMode(DevExpress.AspNetCore.SyncSelectionMode)">
      <summary>
        <para>Sets whether the tab, whose navigation location points to the currently browsed web page, is automatically activated.</para>
      </summary>
      <param name="syncSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabAlign(DevExpress.AspNetCore.TabAlign)">
      <summary>
        <para>Sets the alignment of tabs along the control&#39;s side.</para>
      </summary>
      <param name="tabAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabIconCssClassField(System.String)">
      <summary>
        <para>Specifies the name of a data field providing CSS classes of icons displayed by tabs.</para>
      </summary>
      <param name="tabIconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.Tabs(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTabCollectionBuilder})">
      <summary>
        <para>Provides access to the collection of tabs.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all tabs within the current tab control.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all tabs within the current tab control.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used to display the text content of all the tabs within the current control.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used to display the text content of all the tabs within the current control.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URLs associated with the links.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TextField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides tab texts.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format tab texts.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides tab tooltip texts.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the Tab Control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlCssClassesBuilder.ActiveTab(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Tab Control&#39;s active tab element.</para>
      </summary>
      <param name="activeTab"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlCssClassesBuilder.Tab(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Tab Control&#39;s tab element.</para>
      </summary>
      <param name="tab"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapTabControlTemplateContainerSettings.Tab">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder">
      <summary>
        <para>Defines an individual tab page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ActiveTabCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the current tab when the tab is active.</para>
      </summary>
      <param name="activeTabCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ActiveTabIconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed by the current tab when the tab is active.</para>
      </summary>
      <param name="activeTabIconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the current page&#39;s tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ActiveTabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the current page&#39;s tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current page&#39;s tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ActiveTabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current page&#39;s tab when it&#39;s active.</para>
      </summary>
      <param name="activeTabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the tab.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the tab (or tab page) is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the tab&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.Content(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the current tab is enabled, allowing the tab to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current tab object.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TabCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the tabbed page&#39;s tab.</para>
      </summary>
      <param name="tabCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TabIconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed by the current tab.</para>
      </summary>
      <param name="tabIconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current page&#39;s tab.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TabTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current page&#39;s tab.</para>
      </summary>
      <param name="tabTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current page&#39;s tab text.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TabTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapPageControlTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current page&#39;s tab text.</para>
      </summary>
      <param name="tabTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current tab (tab page) object.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the tab&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current tab&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current tab (tab page).</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current tab (tabbed page) amongst the visible tabs (tabbed pages) in a tab control.</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageCollectionBuilder">
      <summary>
        <para>Represents a collection of tabbed pages within the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapPageControlBuilder"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTabPageCollectionBuilder.Add">
      <summary>
        <para>Adds a new tab page to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBootstrapSpecificSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBootstrapSpecificSettingsBuilder.TagRenderOption(DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption)">
      <summary>
        <para></para>
      </summary>
      <param name="tagRenderOption"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataSet"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilder.Value(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.AllowCustomTags(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowCustomTags"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.CallbackPageSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackPageSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.CaseSensitiveTags(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="caseSensitiveTags"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.DropDownAutoWidth(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.DropDownRows(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.FilterMinLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="filterMinLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.IconCssClassField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.IncrementalFilteringDelay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="incrementalFilteringDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.IncrementalFilteringMode(DevExpress.AspNetCore.IncrementalFilteringMode)">
      <summary>
        <para></para>
      </summary>
      <param name="incrementalFilteringMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ItemValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="itemValueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.LoadDropDownOnDemand(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="loadDropDownOnDemand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.EditorRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ShowDropDownOnFocus(DevExpress.AspNetCore.ShowDropDownOnFocusMode)">
      <summary>
        <para></para>
      </summary>
      <param name="showDropDownOnFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.TextSeparator(System.Char)">
      <summary>
        <para></para>
      </summary>
      <param name="textSeparator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBuilderBase`1.ValueSeparator(System.Char)">
      <summary>
        <para></para>
      </summary>
      <param name="valueSeparator"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.CloseUp(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="closeUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.DropDown(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.QueryCloseUp(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="queryCloseUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.TagsChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagsChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.IconTagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.Input(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="input"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.Item(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.ListBox(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.Tag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxCssClassesBuilder.TagRemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tagRemoveButton"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.AllowCustomTags(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowCustomTags"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.Bind(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.CallbackPageSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackPageSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.CaseSensitiveTags(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="caseSensitiveTags"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.DataMember(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dataMember"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.DropDownAutoWidth(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownAutoWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.DropDownRows(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dropDownRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.EnableCallbackMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableCallbackMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.FilterMinLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="filterMinLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.IconCssClassField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.IncrementalFilteringDelay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="incrementalFilteringDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.IncrementalFilteringMode(DevExpress.AspNetCore.IncrementalFilteringMode)">
      <summary>
        <para></para>
      </summary>
      <param name="incrementalFilteringMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapListEditItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ItemValueType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="itemValueType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.LoadDropDownOnDemand(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="loadDropDownOnDemand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxBootstrapSpecificSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ShowDropDownOnFocus(DevExpress.AspNetCore.ShowDropDownOnFocusMode)">
      <summary>
        <para></para>
      </summary>
      <param name="showDropDownOnFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.TextFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.TextSeparator(System.Char)">
      <summary>
        <para></para>
      </summary>
      <param name="textSeparator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ValueField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.ValueSeparator(System.Char)">
      <summary>
        <para></para>
      </summary>
      <param name="valueSeparator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxPropertiesBuilder.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxValues`1">
      <summary>
        <para>Gets required TagBox values (predefined or custom tags) on the controller side and passes these values to the control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxValues`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxValues`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxValues`1.CustomTagTexts">
      <summary>
        <para>Returns a collection of custom tags (values that are not listed in the Tag Box control but manually entered by an end-user).</para>
      </summary>
      <value>A collection of custom tags.</value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapTagBoxValues`1.TagValues">
      <summary>
        <para>Returns a collection of predefined tags (values that an end-user can select from a Tag Box list).</para>
      </summary>
      <value>A collection of predefined tags.</value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilder">
      <summary>
        <para>Represents a single-line text editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilder.Value(System.Object)">
      <summary>
        <para>Sets the edited value within the editor.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.MaskSettings(System.Action{DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.MaxLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.Password(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="password"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxCssClassesBuilder.Caption(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the editor caption element.</para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Text Box control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxCssClassesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the Null Text element.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder">
      <summary>
        <para>Contains settings specific to a textbox editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the TextBox.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether empty string values are converted to a null reference when an inplace editor&#39;s value is retrieved from a data source field.</para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether a format pattern defined via the <see cref="P:DevExpress.Web.EditPropertiesBase.DisplayFormatString"/> property should be applied to the editor value displayed in the edit mode of a complex data control (e.g. GridView).</para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the editor&#39;s value for display purposes.</para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the editor&#39;s value and element content is rendered as pure HTML, or HTML markers are stripped out.</para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para>Sets the current editor help text.</para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para>Provides access to an editor&#39;s help text settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.MaskSettings(System.Action{DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder})">
      <summary>
        <para>The editor&#39;s mask settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.MaxLength(System.Int32)">
      <summary>
        <para>Sets the maximum number of characters an end user can enter into the editor.</para>
      </summary>
      <param name="maxLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para>Sets the text displayed within the editor&#39;s edit region when the editor&#39;s value is null.</para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.NullText(System.String)">
      <summary>
        <para>Sets the prompt text displayed within the editor&#39;s input box when the editor is not focused and its value is null.</para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para>Sets a value indicating when the null text should be displayed in the editor.</para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.Password(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the input is treated as a password and all characters entered into the editor are masked.</para>
      </summary>
      <param name="password"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextBoxPropertiesBuilder.Width(System.String)">
      <summary>
        <para>Sets the editor&#39;s width.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder">
      <summary>
        <para>Contains settings specific to a text edit&#39;s help text.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder.DisplayMode(DevExpress.AspNetCore.HelpTextDisplayMode)">
      <summary>
        <para>Sets a value that specifies how a help text is displayed within its container.</para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder.EnablePopupAnimation(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a specific animation effect is used when the help text pops up.</para>
      </summary>
      <param name="enablePopupAnimation"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilder.Value(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.AllowMouseWheel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.AllowNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.AllowUserInput(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.CaptionSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorCaptionSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ClientReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientReadOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.EditFormat(DevExpress.AspNetCore.EditFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.EditFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ReadOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="readOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.SpinButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditorValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditBuilderBase`1.ValueChangedDelay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="valueChangedDelay"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.Button(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="button"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.IconDecrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconDecrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.IconEllipsis(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconEllipsis"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.IconIncrement(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconIncrement"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditCssClassesBuilder.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.AllowMouseWheel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.AllowNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.AllowUserInput(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowUserInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.Buttons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapEditButtonCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.ButtonTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapButtonTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="buttonTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.ClearButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapClearButtonBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.ConvertEmptyStringToNull(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="convertEmptyStringToNull"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.DisplayFormatInEditMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatInEditMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.EditFormat(DevExpress.AspNetCore.EditFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.EditFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.EncodeHtml(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="encodeHtml"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.HelpText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="helpText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.HelpTextSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTextEditHelpSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.NullDisplayText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullDisplayText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.NullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="nullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.SelectInputTextOnClick(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectInputTextOnClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.SpinButtons(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSimpleSpinButtonsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.ValueChangedDelay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="valueChangedDelay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimeEditPropertiesBuilder.Width(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.AppointmentAutoHeight(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentAutoHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.AppointmentGapWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentGapWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.AppointmentHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.AppointmentInterspacing(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentInterspacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.ContinueArrowDisplayType(DevExpress.XtraScheduler.AppointmentContinueArrowDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="continueArrowDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.EndTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="endTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.FirstAppointmentTopIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="firstAppointmentTopIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.LastAppointmentBottomIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="lastAppointmentBottomIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.ShowRecurrence(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.ShowReminder(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showReminder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.SnapToCellsMode(DevExpress.XtraScheduler.AppointmentSnapToCellsMode)">
      <summary>
        <para></para>
      </summary>
      <param name="snapToCellsMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.StartTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="startTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.StatusDisplayType(DevExpress.XtraScheduler.AppointmentStatusDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="statusDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder.TimeDisplayType(DevExpress.XtraScheduler.AppointmentTimeDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="timeDisplayType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.CellAutoHeightOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.DisplayedIntervalCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="displayedIntervalCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.IntervalCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="intervalCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.NavigationButtonAppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonAppointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.NavigationButtonVisibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.OptionsSelectionBehavior(System.Action{DevExpress.AspNetCore.Bootstrap.OptionsSelectionBehaviorBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.ResourcesPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="resourcesPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.Scales(System.Action{DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.ScrollAreaHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="scrollAreaHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.ShowMoreButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.TimeIndicatorDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.TimeIndicatorDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewBuilder.WorkTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.AlternateTimelineDateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="alternateTimelineDateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.BottomLeftCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="bottomLeftCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.TimelineCellBody(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timelineCellBody"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.TimelineDateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timelineDateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.TimeMarkerLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTimelineViewCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.AllowSelectItem(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowSelectItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.AppearAfter(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.BeginGroupField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="beginGroupField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.DisappearAfter(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="disappearAfter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.FirstSubMenuDirection(DevExpress.AspNetCore.FirstSubMenuDirection)">
      <summary>
        <para></para>
      </summary>
      <param name="firstSubMenuDirection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.IconCssClassField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ItemSubMenuOffset(System.Action{DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="itemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.MaximumDisplayLevels(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maximumDisplayLevels"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.NameField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.NavigateUrlField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.OnBeforeRender(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapToolbar,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapToolbar,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.Orientation(DevExpress.AspNetCore.Orientation)">
      <summary>
        <para></para>
      </summary>
      <param name="orientation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.RootItemSubMenuOffset(System.Action{DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.RootItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="rootItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.RootItemTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.RootItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="rootItemTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.RootItemTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.SelectParentItem(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="selectParentItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ShowPopOutImages(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showPopOutImages"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.SyncSelectionMode(DevExpress.AspNetCore.SyncSelectionMode)">
      <summary>
        <para></para>
      </summary>
      <param name="syncSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.Target(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.TextField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.TextFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarBuilder.ToolTipField(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder.IconSubMenuItemChecked(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconSubMenuItemChecked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder.Item(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder.SubMenu(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenu"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarCssClassesBuilder.SubMenuItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="subMenuItem"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBootstrapSpecificSettingsBuilder">
      <summary>
        <para>Stores the  item&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBootstrapSpecificSettingsBuilder.RenderOption(DevExpress.AspNetCore.Bootstrap.BootstrapRenderOption)">
      <summary>
        <para>Specifies a contextual appearance style applied to the toolbar item</para>
      </summary>
      <param name="renderOption"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder">
      <summary>
        <para>Implements the toolbar item functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the toolbar item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item starts a group.</para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Checked(System.Boolean)">
      <summary>
        <para>Sets whether the menu item is checked.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the menu item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the toolbar item element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.DropDownMode(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the menu item&#39;s sub menu should only be invoked by using a specific drop down button.</para>
      </summary>
      <param name="dropDownMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled, allowing the item to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.GroupName(System.String)">
      <summary>
        <para>Sets the name of a logical check group to which the menu item belongs.</para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the toolbar item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemCollectionBuilder})">
      <summary>
        <para>Collection that contains the toolbar items of the current toolbar item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current menu item.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.SettingsBootstrap(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBootstrapSpecificSettingsBuilder})">
      <summary>
        <para>Provides access to a  item&#39;s rendering settings affecting features specific to the Bootstrap framework.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current menu item.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current menu item.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the toolbar item&#39;s text element.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current menu item&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current menu item.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current menu item amongst the visible items in a submenu (or at a menu&#39;s root level).</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarItemTemplateContainerSettings.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder">
      <summary>
        <para>An individual item within a toolbar item&#39;s drop-down menu.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the toolbar item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.BeginGroup(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item starts a group.</para>
      </summary>
      <param name="beginGroup"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Checked(System.Boolean)">
      <summary>
        <para>Sets whether the menu item is checked.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the menu item&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the toolbar item element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the menu item is enabled, allowing the item to respond to end-user interactions.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.GroupName(System.String)">
      <summary>
        <para>Sets the name of a logical check group to which the menu item belongs.</para>
      </summary>
      <param name="groupName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the icon displayed within the toolbar item.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Items(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemCollectionBuilder})">
      <summary>
        <para>Collection that contains the toolbar items of the current toolbar item.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current menu item.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets an URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Selected(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the current menu item is selected.</para>
      </summary>
      <param name="selected"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.SubMenuTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the client region&#39;s content of the current menu item&#39;s submenus.</para>
      </summary>
      <param name="subMenuTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame at which to tarthe contents of the URL associated with the current menu item.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used to display the content of the current menu item.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Text(System.String)">
      <summary>
        <para>Sets the text content of the current menu item.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the toolbar item&#39;s text element.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the current menu item.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current menu item&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of the current menu item.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemBuilder.VisibleIndex(System.Int32)">
      <summary>
        <para>Sets a value specifying the position of the current menu item amongst the visible items in a submenu (or at a menu&#39;s root level).</para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemCollectionBuilder">
      <summary>
        <para>Represents a collection that maintains toolbar menu items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemCollectionBuilder.Add">
      <summary>
        <para>Adds a new toolbar menu item to the end of the collection and returns the newly created object.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapToolbarMenuItemTemplateContainerSettings.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder">
      <summary>
        <para>Represents the web navigation treelike control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder"/> class.</para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.AllowSelectNode(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether the node selection feature is available to end-users.</para>
      </summary>
      <param name="allowSelectNode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder})">
      <summary>
        <para>Object that lists the client-side events specific to the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder"/>.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the initial visibility state of an TreeView control on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder})">
      <summary>
        <para>Provides access to CSS classes applied to visual elements of the  control.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.EnableAnimation(System.Boolean)">
      <summary>
        <para>Sets a value specifying whether the animation feature is available to end-users when expanding/collapsing nodes.</para>
      </summary>
      <param name="enableAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.EnableClientSideAPI(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether the TreeView can be manipulated on the client side via code.</para>
      </summary>
      <param name="enableClientSideAPI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.IconCssClassField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides CSS class names for images displayed within nodes.</para>
      </summary>
      <param name="iconCssClassField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NameField(System.String)">
      <summary>
        <para>Sets the data source field which provides node unique identifier names.</para>
      </summary>
      <param name="nameField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NavigateUrlField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides node navigate URLs.</para>
      </summary>
      <param name="navigateUrlField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NavigateUrlFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format node navigate URLs.</para>
      </summary>
      <param name="navigateUrlFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.Nodes(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeCollectionBuilder})">
      <summary>
        <para>Provides access to the root node child collection.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NodeTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the content of all nodes within an TreeView control.</para>
      </summary>
      <param name="nodeTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NodeTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the content of all nodes within an TreeView control.</para>
      </summary>
      <param name="nodeTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NodeTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a common template used for displaying the text content of all nodes within an TreeView control.</para>
      </summary>
      <param name="nodeTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.NodeTextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings})">
      <summary>
        <para>Sets a common template used for displaying the text content of all nodes within an TreeView control.</para>
      </summary>
      <param name="nodeTextTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.OnInitialized(System.Action{DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView,DevExpress.AspNetCore.IEventArgs})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.TreeViewRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.SaveStateToCookies(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether cookies are used to persist the information about the control.</para>
      </summary>
      <param name="saveStateToCookies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.SaveStateToCookiesID(System.String)">
      <summary>
        <para>Sets the name (identifier) of the cookie in which the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder"/>&#39;s state is persisted.</para>
      </summary>
      <param name="saveStateToCookiesID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.SettingsLoadingPanel(System.Action{DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder})">
      <summary>
        <para>Provides access to the Loading Panel&#39;s settings.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.ShowExpandButtons(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether expand buttons are displayed within the TreeView.</para>
      </summary>
      <param name="showExpandButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.SyncSelectionMode(DevExpress.AspNetCore.SyncSelectionMode)">
      <summary>
        <para>Sets whether the node whose navigation location points to the currently browsed web page is automatically selected.</para>
      </summary>
      <param name="syncSelectionMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.TabIndex(System.Int16)">
      <summary>
        <para>Sets the control&#39;s tab index.</para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame to which to tarthe contents of the URL associated with TreeView nodes.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.TextField(System.String)">
      <summary>
        <para>Sets the data source field that provides caption texts for nodes.</para>
      </summary>
      <param name="textField"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.TextFormatString(System.String)">
      <summary>
        <para>Sets the pattern used to format the hyperlink&#39;s caption text within the node.</para>
      </summary>
      <param name="textFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewBuilder.ToolTipField(System.String)">
      <summary>
        <para>Sets the name of a data field (or an xml element&#39;s attribute) which provides node tooltip texts.</para>
      </summary>
      <param name="toolTipField"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder">
      <summary>
        <para>Stores CSS classes applied to visual elements of the  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder.Control(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the control&#39;s root element.</para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder.IconCollapseNode(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a Collapse Node button.</para>
      </summary>
      <param name="iconCollapseNode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder.IconExpandNode(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a Expand Node button.</para>
      </summary>
      <param name="iconExpandNode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder.IconLoadingNode(System.String)">
      <summary>
        <para>The CSS class of an icon displayed by a node whose child nodes are being loaded via a callback.</para>
      </summary>
      <param name="iconLoadingNode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder.Node(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to a node element.</para>
      </summary>
      <param name="node"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewCssClassesBuilder.NodeList(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the node list element.</para>
      </summary>
      <param name="nodeList"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder">
      <summary>
        <para>Represents an individual node within a  control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Badge(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBadgePropertiesBuilder})">
      <summary>
        <para>Settings of a badge displayed within the Tree View node.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.ClientEnabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the node is enabled on the client.</para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.ClientVisible(System.Boolean)">
      <summary>
        <para>Sets a value that specifies the node&#39;s initial visibility state on the client.</para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.CssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the node element.</para>
      </summary>
      <param name="cssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that indicates whether the node is enabled.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Expanded(System.Boolean)">
      <summary>
        <para>Sets whether the node is expanded.</para>
      </summary>
      <param name="expanded"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.IconCssClass(System.String)">
      <summary>
        <para>Sets the CSS class of the node&#39;s image.</para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Name(System.String)">
      <summary>
        <para>Sets the unique identifier name for the current node.</para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.NavigateUrl(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Sets a URL which defines the navigation location.</para>
      </summary>
      <param name="route"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.NavigateUrl(System.String)">
      <summary>
        <para>Sets a URL which defines the navigation location.</para>
      </summary>
      <param name="navigateUrl"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Nodes(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeCollectionBuilder})">
      <summary>
        <para>The collection of child nodes within the particular node and provides indexed access to them.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Target(System.String)">
      <summary>
        <para>Sets the window or frame to which to tarthe contents of the URL associated with the current node.</para>
      </summary>
      <param name="target"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the content of the particular node.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Template(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the content of the particular node.</para>
      </summary>
      <param name="template"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed within the node content.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.TextCssClass(System.String)">
      <summary>
        <para>Sets the name of a CSS class applied to the node&#39;s text.</para>
      </summary>
      <param name="textCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContent)">
      <summary>
        <para>Sets a template used for displaying the text content of the particular node.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.TextTemplate(DevExpress.AspNetCore.Bootstrap.TemplateContentCallback{DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings})">
      <summary>
        <para>Sets a template used for displaying the text content of the particular node.</para>
      </summary>
      <param name="textTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.ToolTip(System.String)">
      <summary>
        <para>Sets the current node&#39;s tooltip text.</para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the current node&#39;s visibility.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeCollectionBuilder">
      <summary>
        <para>A collection of nodes within the Tree View control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeCollectionBuilder.Add">
      <summary>
        <para>Adds a new node with default settings to the collection.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapTreeViewNodeTemplateContainerSettings.Node">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder">
      <summary>
        <para>Contains settings related to a client widget&#39;s exporting functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Specifies whether or not exporting is enabled.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.ExportButtonText(System.String)">
      <summary>
        <para>Specifies the text displayed by the Export button.</para>
      </summary>
      <param name="exportButtonText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.FileName(System.String)">
      <summary>
        <para>Specifies a default name for the file to which the widget will be exported.</para>
      </summary>
      <param name="fileName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.Formats(System.String[])">
      <summary>
        <para>Specifies a set of formats available for export.</para>
      </summary>
      <param name="formats"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.Margin(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="margin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.PrintingEnabled(System.Boolean)">
      <summary>
        <para>Specifies whether or not the printing feature is enabled for the widget.</para>
      </summary>
      <param name="printingEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetExportSettingsBuilder.ProxyUrl(System.String)">
      <summary>
        <para>Specifies the URL of the server-side proxy that streams the resulting file to the end user to enable exporting in IE9 and Safari browsers.</para>
      </summary>
      <param name="proxyUrl"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder.Family(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="family"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder.Opacity(System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="opacity"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder.Size(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder.Weight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="weight"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder">
      <summary>
        <para>Stores settings defining how values are formatted within a UI widget.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder.Currency(System.String)">
      <summary>
        <para>Specifies the used currency.</para>
      </summary>
      <param name="currency"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder.Formatter(System.String)">
      <summary>
        <para>Specifies a custom formatter function.</para>
      </summary>
      <param name="formatter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder.Parser(System.String)">
      <summary>
        <para>Specifies a parser function to parse numbers or dates presented as strings into the correct format.</para>
      </summary>
      <param name="parser"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder.Precision(System.Int32)">
      <summary>
        <para>Specifies the value precision in the formated presentation.</para>
      </summary>
      <param name="precision"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder.Type(DevExpress.AspNetCore.Bootstrap.FormatType)">
      <summary>
        <para>Specifies a predefined format.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.DropZoneText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropZoneText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.EnableDragAndDrop(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableDragAndDrop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.EnableFileList(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableFileList"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.EnableMultiSelect(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableMultiSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.ExternalDropZoneID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="externalDropZoneID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.FileListPosition(DevExpress.AspNetCore.UploadControlFileListPosition)">
      <summary>
        <para></para>
      </summary>
      <param name="fileListPosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.PacketSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="packetSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.TemporaryFolder(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="temporaryFolder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder.UploadingExpirationTime(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="uploadingExpirationTime"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadButtonPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadButtonPropertiesBuilder.IconCssClass(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconCssClass"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadButtonPropertiesBuilder.Text(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.#ctor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
      <summary>
        <para></para>
      </summary>
      <param name="htmlHelper"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.AutoStartUpload(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="autoStartUpload"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.BrowseButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapBrowseButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.CancelButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapCancelButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ClientEnabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientEnabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ClientSideEvents(System.Action{DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ClientVisible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="clientVisible"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.DialogTriggerID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dialogTriggerID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.NullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ProgressBarSettings(System.Action{DevExpress.AspNetCore.Bootstrap.UploadProgressBarSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.RemoveButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapRemoveButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.Routes(System.Action{DevExpress.AspNetCore.Bootstrap.UploadControlRouteCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.Settings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUploadAdvancedModeSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ShowClearFileSelectionButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showClearFileSelectionButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ShowProgressPanel(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showProgressPanel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ShowTextBox(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showTextBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ShowUploadButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showUploadButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.TabIndex(System.Int16)">
      <summary>
        <para></para>
      </summary>
      <param name="tabIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ToolTip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="toolTip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.UploadButton(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUploadButtonPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlBuilderBase`1.ValidationSettings(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.BrowseButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="browseButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.ClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="clearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.Control(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.DropZone(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropZone"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.FileName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fileName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.IconClearButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconClearButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.RemoveButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="removeButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlCssClassesBuilder.UploadButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="uploadButton"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.AllowedFileExtensions(System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="allowedFileExtensions"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.GeneralErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="generalErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.MaxFileCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxFileCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.MaxFileCountErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="maxFileCountErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.MaxFileSize(System.Int64)">
      <summary>
        <para></para>
      </summary>
      <param name="maxFileSize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.MaxFileSizeErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="maxFileSizeErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.MultiSelectionErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="multiSelectionErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.NotAllowedFileExtensionErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="notAllowedFileExtensionErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadControlValidationSettingsBuilder.ShowErrors(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showErrors"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.ContentDisposition">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.ContentType">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.CopyTo(System.IO.Stream)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="target"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.CustomData">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.FileName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.Headers">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.Length">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile.OpenReadStream">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection.CustomData">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection.IsValid">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection.IsValid(DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile)">
      <summary>
        <para></para>
      </summary>
      <param name="file"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection.SetErrorText(DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFile,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="file"></param>
      <param name="errorText"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapUploadedFilesCollection.SetErrorText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="errorText"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.AppointmentAutoHeight(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentAutoHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.AppointmentGapWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentGapWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.AppointmentHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.AppointmentInterspacing(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentInterspacing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.ContinueArrowDisplayType(DevExpress.XtraScheduler.AppointmentContinueArrowDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="continueArrowDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.EndTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="endTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.FirstAppointmentTopIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="firstAppointmentTopIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.LastAppointmentBottomIndent(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="lastAppointmentBottomIndent"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.ShowBordersForSameDayAppointments(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showBordersForSameDayAppointments"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.ShowRecurrence(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showRecurrence"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.ShowReminder(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showReminder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.StartTimeVisibility(DevExpress.XtraScheduler.AppointmentTimeVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="startTimeVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.StatusDisplayType(DevExpress.XtraScheduler.AppointmentStatusDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="statusDisplayType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder.TimeDisplayType(DevExpress.XtraScheduler.AppointmentTimeDisplayType)">
      <summary>
        <para></para>
      </summary>
      <param name="timeDisplayType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.CellAutoHeightOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerOptionsCellAutoHeightBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.NavigationButtonAppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonAppointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.NavigationButtonVisibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.ResourcesPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="resourcesPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.ShowMoreButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.DateCellBody(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateCellBody"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.DateCellHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateCellHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.DayHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dayHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.HorizontalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.TodayCellHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="todayCellHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWeekViewCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.AppointmentDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapSchedulerDayViewAppointmentDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ContextMenuCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.CssClasses(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.DayCount(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="dayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.GoToDateDialogCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="goToDateDialogCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.NavigationButtonAppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonAppointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.NavigationButtonVisibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="navigationButtonVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ResourcesPerPage(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="resourcesPerPage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ScrollAreaHeight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="scrollAreaHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowAllAppointmentsAtTimeCells(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllAppointmentsAtTimeCells"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowAllDayArea(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showAllDayArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowDayHeaders(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDayHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowFullWeek(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showFullWeek"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowMoreButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowMoreButtonsOnEachColumn(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMoreButtonsOnEachColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ShowWorkTimeOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWorkTimeOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.TimeIndicatorDisplayOptions(System.Action{DevExpress.AspNetCore.Bootstrap.TimeIndicatorDisplayOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.TimeMarkerVisibility(DevExpress.XtraScheduler.TimeMarkerVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.TimeRulers(System.Action{DevExpress.AspNetCore.Bootstrap.TimeRulerCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.TimeScale(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="timeScale"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.TimeSlots(System.Action{DevExpress.AspNetCore.Bootstrap.TimeSlotCollectionBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ViewSelectorCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.ViewSelectorItemAdaptivePriority(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="viewSelectorItemAdaptivePriority"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.VisibleTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.VisibleTimeSnapMode(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleTimeSnapMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewBuilder.WorkTime(System.Action{DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.AllDayArea(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="allDayArea"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.AlternateDateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="alternateDateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.Appointment(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.BottomMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="bottomMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.DateHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.GroupSeparatorHorizontal(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorHorizontal"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.GroupSeparatorVertical(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="groupSeparatorVertical"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.HorizontalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.IconBottomMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconBottomMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.IconTopMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="iconTopMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.LeftTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.MoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.RightTopCorner(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="rightTopCorner"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.TimeCellBody(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeCellBody"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.TimeMarker(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarker"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.TimeMarkerLine(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerLine"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.TimeRulerHoursItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeRulerHoursItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.TimeRulerMinuteItem(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeRulerMinuteItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.TopMoreButton(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="topMoreButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.BootstrapWorkWeekViewCssClassesBuilder.VerticalResourceHeader(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="verticalResourceHeader"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.BreakLineType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BreakLineType.Straight">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.BreakLineType.Waved">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side button&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder.CheckedChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButton.CheckedChanged"/> event.</para>
      </summary>
      <param name="checkedChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder.Click(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButton.Click"/> event.</para>
      </summary>
      <param name="click"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButton.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButton.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side button editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.ButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButtonEditBase.ButtonClick"/> event.</para>
      </summary>
      <param name="buttonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.TextChanged"/> event.</para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ButtonEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CalendarAdaptivitySettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarAdaptivitySettingsBuilder.SwitchToSingleMonthAtWindowInnerWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="switchToSingleMonthAtWindowInnerWidth"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side calendar editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.BeginCallback"/> event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.CallbackError"/> event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.CustomDisabledDate(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.CustomDisabledDate"/> event.</para>
      </summary>
      <param name="customDisabledDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.EndCallback"/> event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.SelectionChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.SelectionChanged"/> event.</para>
      </summary>
      <param name="selectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CalendarClientSideEventsBuilder.VisibleMonthChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientCalendar.VisibleMonthChanged"/> event.</para>
      </summary>
      <param name="visibleMonthChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.AllowEndEditOnValidationError(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowEndEditOnValidationError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.AllowRegularDataItemTemplate(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowRegularDataItemTemplate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.AllowValidationOnEndEdit(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowValidationOnEndEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.EditMode(DevExpress.AspNetCore.CardViewBatchEditMode)">
      <summary>
        <para></para>
      </summary>
      <param name="editMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.ErrorImagePosition(DevExpress.AspNetCore.GridBatchEditErrorImagePosition)">
      <summary>
        <para></para>
      </summary>
      <param name="errorImagePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.HighlightDeletedCards(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="highlightDeletedCards"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.ShowConfirmOnLosingChanges(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showConfirmOnLosingChanges"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewBatchEditSettingsBuilder.StartEditAction(DevExpress.AspNetCore.GridViewBatchStartEditAction)">
      <summary>
        <para></para>
      </summary>
      <param name="startEditAction"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.RepeatColumns(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="repeatColumns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowDaysSection(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showDaysSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowFuturePeriods(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showFuturePeriods"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowMonthsSection(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMonthsSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowPastPeriods(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPastPeriods"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowPresentPeriods(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPresentPeriods"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowWeeksSection(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showWeeksSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewColumnDateRangePeriodsSettingsBuilder.ShowYearsSection(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showYearsSection"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewCsvExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewCsvExportOptionsBuilder.DataAware(System.Action{DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewCsvExportOptionsBuilder.ExportType(DevExpress.Export.ExportType)">
      <summary>
        <para></para>
      </summary>
      <param name="exportType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewExportOptionsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewExportOptionsBuilderBase`1.CardWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="cardWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewExportOptionsBuilderBase`1.ExportSelectedCardsOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="exportSelectedCardsOnly"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.Format(DevExpress.AspNetCore.GridConditionColorScaleFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.MaximumColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="maximumColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.MiddleColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="middleColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.MinimumColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="minimumColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionColorScaleBuilder.ShowInColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.ApplyToCard(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="applyToCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.Expression(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.Format(DevExpress.AspNetCore.GridConditionHighlightFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.ShowInColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionHighlightBuilder.Style(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionIconSetBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionIconSetBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionIconSetBuilder.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionIconSetBuilder.Format(DevExpress.AspNetCore.GridConditionIconSetFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionIconSetBuilder.ShowInColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionStyleBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionStyleBuilder.BackColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="backColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionStyleBuilder.Font(System.Action{DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionStyleBuilder.ForeColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="foreColor"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.ApplyToCard(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="applyToCard"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.FieldName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.Format(DevExpress.AspNetCore.GridConditionHighlightFormat)">
      <summary>
        <para></para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.Rule(DevExpress.AspNetCore.GridTopBottomRule)">
      <summary>
        <para></para>
      </summary>
      <param name="rule"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.ShowInColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.Style(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewFormatConditionTopBottomBuilder.Threshold(System.Decimal)">
      <summary>
        <para></para>
      </summary>
      <param name="threshold"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewRouteType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.CardViewRouteType.AddCard">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.CardViewRouteType.BatchUpdate">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.CardViewRouteType.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.CardViewRouteType.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.CardViewRouteType.DeleteCard">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.CardViewRouteType.UpdateCard">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewXlsExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewXlsExportOptionsBuilder.DataAware(System.Action{DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewXlsExportOptionsBuilder.ExportType(DevExpress.Export.ExportType)">
      <summary>
        <para></para>
      </summary>
      <param name="exportType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CardViewXlsxExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewXlsxExportOptionsBuilder.DataAware(System.Action{DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CardViewXlsxExportOptionsBuilder.ExportType(DevExpress.Export.ExportType)">
      <summary>
        <para></para>
      </summary>
      <param name="exportType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartDataType">
      <summary>
        <para>List values that define the type of Pie Chart series&#39; argument values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartDataType.Auto">
      <summary>
        <para>The data type is determined automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartDataType.DateTime">
      <summary>
        <para>A chart displays values of a data or time type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartDataType.Numeric">
      <summary>
        <para>A chart displays values of a numeric type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartDataType.String">
      <summary>
        <para>A chart displays values of the string type.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode">
      <summary>
        <para>Lists values defining the mode in which chart elements are selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode.Multiple">
      <summary>
        <para>Multiple chart elements can be selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartElementSelectionMode.Single">
      <summary>
        <para>Only one chart element can be selected.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartLegendHoverMode">
      <summary>
        <para>Lists the values that define what series elements to highlight when a corresponding item in the legend is hovered over.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartLegendHoverMode.ExcludePoints">
      <summary>
        <para>When a legend item is hovered over, the corresponding series is highlighted, but its points are excluded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartLegendHoverMode.IncludePoints">
      <summary>
        <para>When a legend item is hovered over, the corresponding series is highlighted along with its points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartLegendHoverMode.None">
      <summary>
        <para>A legend hover does not affect a chart appearance.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartPointerType">
      <summary>
        <para>Lists values that define the pointer used for chart scrolling or zooming.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointerType.All">
      <summary>
        <para>User can use either gestures or a mouse to scroll/zoom the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointerType.Mouse">
      <summary>
        <para>User can use a mouse to scroll/zoom the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointerType.None">
      <summary>
        <para>The scrolling/zooming feature is disabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointerType.Touch">
      <summary>
        <para>User can use gestures to scroll/zoom the chart.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol">
      <summary>
        <para>Lists values defining the type of chart points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol.Circle">
      <summary>
        <para>Circular chart points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol.Cross">
      <summary>
        <para>Cross chart points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol.Polygon">
      <summary>
        <para>Polygonal chart points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol.Square">
      <summary>
        <para>Square chart points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol.TriangleDown">
      <summary>
        <para>Triangle-down chart points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartPointSymbol.TriangleUp">
      <summary>
        <para>Triangle-up chart points.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartResolveLabelOverlapping">
      <summary>
        <para>Lists values that define how a chart control resolves label overlapping.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartResolveLabelOverlapping.Hide">
      <summary>
        <para>Resolve overlapping by hiding labels. Labels to be hidden are determined automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartResolveLabelOverlapping.None">
      <summary>
        <para>Do not resolve label overlapping.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartResolveLabelOverlapping.Stack">
      <summary>
        <para>Arrange labels in a stack.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Avg">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Count">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Max">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Min">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.NotSet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Ohlc">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Range">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartSeriesAggregationMethod.Sum">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarDisplayMode">
      <summary>
        <para>Lists values that define how value error bars are displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarDisplayMode.Auto">
      <summary>
        <para>Required value error bars (low and/or high) are determined automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarDisplayMode.High">
      <summary>
        <para>Only high value error bars are displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarDisplayMode.Low">
      <summary>
        <para>Only low value error bars are displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarDisplayMode.None">
      <summary>
        <para>Value error bars are not displayed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType">
      <summary>
        <para>Lists the values that define how error bar values must be calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType.Auto">
      <summary>
        <para>The error bars type is undefined.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType.Fixed">
      <summary>
        <para>Defines the confidential interval in constant values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType.Percent">
      <summary>
        <para>Defines the confidential interval in percentages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType.StdDeviation">
      <summary>
        <para>Defines the standard deviation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType.StdError">
      <summary>
        <para>Defines the standard deviation of its sampling distribution.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ChartValueErrorBarType.Variance">
      <summary>
        <para>Defines the variance.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side check editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder.CheckedChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientCheckBox.CheckedChanged"/> event.</para>
      </summary>
      <param name="checkedChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.CheckEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side combobox editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle an editor&#39;s client <see cref="E:DevExpress.Web.Scripts.ASPxClientComboBox.BeginCallback"/> event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.ButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButtonEditBase.ButtonClick"/> event.</para>
      </summary>
      <param name="buttonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientComboBox.CallbackError"/> event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.CloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.CloseUp"/> event.</para>
      </summary>
      <param name="closeUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.CustomHighlighting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customHighlighting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.DropDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.DropDown"/> event.</para>
      </summary>
      <param name="dropDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle an editor&#39;s client <see cref="E:DevExpress.Web.Scripts.ASPxClientComboBox.EndCallback"/> event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.ItemFiltering(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.QueryCloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.QueryCloseUp"/> client-side event.</para>
      </summary>
      <param name="queryCloseUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.SelectedIndexChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientComboBox.SelectedIndexChanged"/> event.</para>
      </summary>
      <param name="selectedIndexChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.TextChanged"/> event.</para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ComboBoxClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ConstantiLineHorizontalAlignment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ConstantiLineHorizontalAlignment.Center">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ConstantiLineHorizontalAlignment.Left">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ConstantiLineHorizontalAlignment.Right">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ConstantiLineVerticalAlignment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ConstantiLineVerticalAlignment.Bottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ConstantiLineVerticalAlignment.Center">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ConstantiLineVerticalAlignment.Top">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder.DashStyle(DevExpress.AspNetCore.Bootstrap.DashStyle)">
      <summary>
        <para></para>
      </summary>
      <param name="dashStyle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder.Label(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapChartConstantLineLabelCommonSettingsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder.PaddingLeftRight(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="paddingLeftRight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder.PaddingTopBottom(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="paddingTopBottom"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ConstantLineCommonStyleBuilder.Width(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder.Action(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder.Controller(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="controller"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder.RouteName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="routeName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder.RouteValues(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="routeValues"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder`1.RouteType(`0)">
      <summary>
        <para></para>
      </summary>
      <param name="routeType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.DashStyle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.DashStyle.Dash">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.DashStyle.Dot">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.DashStyle.LongDash">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.DashStyle.Solid">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AfterAddRow(DevExpress.Export.AfterAddRowEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="afterAddRowEventHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowConditionalFormatting(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowConditionalFormatting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowGrouping(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowGrouping"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowGroupingRows(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowGroupingRows"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowHorizontalLines(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowHorizontalLines"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowHyperLinks(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowHyperLinks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowSortingAndFiltering(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowSortingAndFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.AllowVerticalLines(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="allowVerticalLines"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.BeforeExportTable(DevExpress.Export.BeforeExportTable)">
      <summary>
        <para></para>
      </summary>
      <param name="beforeExportTableHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.CustomizeCell(DevExpress.Export.CustomizeCellEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="customizeCellHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.CustomizeSheetFooter(DevExpress.Export.CustomizeSheetFooterEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="customizeSheetFooterEventHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.CustomizeSheetHeader(DevExpress.Export.CustomizeSheetHeaderEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="customizeSheetHeaderHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.CustomizeSheetSettings(DevExpress.Export.CustomizeSheetSettingsEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="customizeSheetSettingsHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.DocumentColumnFiltering(DevExpress.Export.DocumentColumnFilteringEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="documentColumnFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.ExportProgress(DevExpress.Export.ExportProgressCallback)">
      <summary>
        <para></para>
      </summary>
      <param name="exportProgressHandler"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.ShowColumnHeaders(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showColumnHeaders"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.ShowGroupSummaries(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showGroupSummaries"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.ShowPageTitle(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showPageTitle"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.ShowTotalSummaries(System.Nullable{System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="showTotalSummaries"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder.SkipFooterRow(DevExpress.Export.SkipFooterRowEventHandler)">
      <summary>
        <para></para>
      </summary>
      <param name="skipFooterRowEventHandler"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side date editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.ButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButtonEditBase.ButtonClick"/> event.</para>
      </summary>
      <param name="buttonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.CalendarCustomDisabledDate(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDateEdit.CalendarCustomDisabledDate"/> event.</para>
      </summary>
      <param name="calendarCustomDisabledDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.CloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.CloseUp"/> event.</para>
      </summary>
      <param name="closeUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.DateChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDateEdit.DateChanged"/> event.</para>
      </summary>
      <param name="dateChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.DropDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.DropDown"/> event.</para>
      </summary>
      <param name="dropDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.ParseDate(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDateEdit.ParseDate"/> event.</para>
      </summary>
      <param name="parseDate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.QueryCloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.QueryCloseUp"/> client-side event.</para>
      </summary>
      <param name="queryCloseUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder">
      <summary>
        <para>Provides settings that affect the date range functionality in the DateEdit control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder.CalendarColumnCount(System.Int32)">
      <summary>
        <para>Sets the number of months displayed in dropdown calendars of the DateEdit editors in date range mode.</para>
      </summary>
      <param name="calendarColumnCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder.MaxDayCount(System.Int32)">
      <summary>
        <para>Sets the maximum number of days in a range.</para>
      </summary>
      <param name="maxDayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder.MinDayCount(System.Int32)">
      <summary>
        <para>Sets the minimum number of days in a range.</para>
      </summary>
      <param name="minDayCount"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder.MinErrorText(System.String)">
      <summary>
        <para>Sets the error text to be displayed within the editor&#39;s error frame if the number of selected days is less then the specified minimum value.</para>
      </summary>
      <param name="minErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder.RangeErrorText(System.String)">
      <summary>
        <para>Sets the error text to be displayed within the editor&#39;s error frame if the number of selected days exceeds the specified range limits.</para>
      </summary>
      <param name="rangeErrorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DateEditRangeSettingsBuilder.StartDateEditID(System.String)">
      <summary>
        <para>Sets the ID of an DateEdit control that will be used to specify the start date of a range.</para>
      </summary>
      <param name="startDateEditID"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode">
      <summary>
        <para>Lists values for ticks and grid lines positioning on a discrete axis in case the discrete axis is divided.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode.BetweenLabels">
      <summary>
        <para>Default. The ticks/grid lines are located between labels.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.DiscreteAxisDivisionMode.CrossLabels">
      <summary>
        <para>The ticks/grid lines are located in front of labels.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side dropdown editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.ButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButtonEditBase.ButtonClick"/> event.</para>
      </summary>
      <param name="buttonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.CloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.CloseUp"/> event.</para>
      </summary>
      <param name="closeUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.DropDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.DropDown"/> event.</para>
      </summary>
      <param name="dropDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.QueryCloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientDropDownEditBase.QueryCloseUp"/> client-side event.</para>
      </summary>
      <param name="queryCloseUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.TextChanged"/> event.</para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.DropDownClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.EditClientSideEventsBaseBuilder">
      <summary>
        <para>Contains a list of the events that are common to all client-side editor types.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.EditClientSideEventsBaseBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.EditorRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.EditorRouteType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.EditorRouteType.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.EditorRouteType.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ErrorDisplayMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ErrorDisplayMode.ImageWithText">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ErrorDisplayMode.ImageWithTooltip">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ErrorDisplayMode.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ErrorDisplayMode.Text">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ExportBinaryImageSettingsBuilder">
      <summary>
        <para>Contains image settings that are applied when a binary image is exported.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ExportBinaryImageSettingsBuilder.Height(System.Int32)">
      <summary>
        <para>Specifies the height of the binary image when it is exported.</para>
      </summary>
      <param name="height"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ExportBinaryImageSettingsBuilder.SizeMode(DevExpress.XtraPrinting.ImageSizeMode)">
      <summary>
        <para></para>
      </summary>
      <param name="sizeMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ExportBinaryImageSettingsBuilder.Width(System.Int32)">
      <summary>
        <para>Specifies the width of the binary image when it is exported.</para>
      </summary>
      <param name="width"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel">
      <summary>
        <para>Lists values that define which point prices (high, low, open or close) should be compared.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel.Close">
      <summary>
        <para>Close prices should be compared.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel.High">
      <summary>
        <para>High prices should be compared.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel.Low">
      <summary>
        <para>Low prices should be compared.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FinancialChartReductionLevel.Open">
      <summary>
        <para>Open prices should be compared.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.FormatType">
      <summary>
        <para>Lists the values that specify a predefined type of text formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Billions">
      <summary>
        <para>A value is divided by one billion, the letter &#39;B&#39; is added.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Currency">
      <summary>
        <para>Displays a value as currency.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Day">
      <summary>
        <para>Displays a value as a day.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.DayOfWeek">
      <summary>
        <para>Displays a value as a day of the week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Decimal">
      <summary>
        <para>Displays a value in the decimal format with an optional negative sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Exponential">
      <summary>
        <para>Displays a value in the exponential notation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.FixedPoint">
      <summary>
        <para>Displays a value as a real numeric value with a specified number of digits for the fractional part and an optional negative sign</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Hour">
      <summary>
        <para>Displays the value as an hour.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.LargeNumber">
      <summary>
        <para>A value is divided by a number (one thousand, one million, one billion or one trillion) so that the value is less than a thousand; then a corresponding letter (&#39;K&#39;, &#39;M&#39;, &#39;B&#39; or &#39;T&#39;) is added.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.LongDate">
      <summary>
        <para>Displays a value using the long date format.Thursday, January 01, 1970</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.LongDateLongTime">
      <summary>
        <para>Displays a value using the long date and long time format.Thursday, January 01, 1970, 12:00:00 AM</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.LongTime">
      <summary>
        <para>Displays a value using the long time format.12:00:00 AM</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Millions">
      <summary>
        <para>A value is divided by one billion, the letter &#39;M&#39; is added.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Millisecond">
      <summary>
        <para>Displays a value as milliseconds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Minute">
      <summary>
        <para>Displays a value as minutes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Month">
      <summary>
        <para>Displays a value as a month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.MonthAndDay">
      <summary>
        <para>Displays a value using the month and day format.January 01</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.MonthAndYear">
      <summary>
        <para>Displays a value using the month and year format.1970 January</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.None">
      <summary>
        <para>Display a value without formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Percent">
      <summary>
        <para>A value is multiplied by 100 and displayed with a percent symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Quarter">
      <summary>
        <para>Displays a value using the quarter format.QI</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.QuarterAndYear">
      <summary>
        <para>Displays a value using the quarter and year format.QI 1970</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Second">
      <summary>
        <para>Displays a value as seconds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.ShortDate">
      <summary>
        <para>Displays a value using the short date format.1/25/1970</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.ShortDateShortTime">
      <summary>
        <para>Displays a value using the short date and short time format.1/25/1970, 12:00 AM</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.ShortTime">
      <summary>
        <para>Displays a value using the short time format.12:00 AM</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Thousands">
      <summary>
        <para>A value is divided by one billion, the letter &#39;K&#39; is added.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Trillions">
      <summary>
        <para>A value is divided by one billion, the letter &#39;T&#39; is added.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormatType.Year">
      <summary>
        <para>The value is displayed as a year.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.FormLayoutType">
      <summary>
        <para>Lists values that define how layout item caption and layout item contents are stacked.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormLayoutType.Horizontal">
      <summary>
        <para>Layout item caption and layout item contents are stacked horizontally.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.FormLayoutType.Vertical">
      <summary>
        <para>Layout item caption and layout item contents are stacked vertically.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupAdaptivitySettingsBuilder">
      <summary>
        <para>Contains the &#39;s adaptivity settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupAdaptivitySettingsBuilder.MaxWidth(System.Int32)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupAdaptivitySettingsBuilder.MaxWidth(System.String)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupAdaptivitySettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupAdaptivitySettingsBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupSettingsBuilder">
      <summary>
        <para>Contains the &#39;s specific settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupSettingsBuilder.SettingsAdaptivity(System.Action{DevExpress.AspNetCore.Bootstrap.GridCustomizationDialogPopupAdaptivitySettingsBuilder})">
      <summary>
        <para>Provides access to the adaptivity settings of the grid&#39;s customization dialog.</para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.BottomMargin(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="bottomMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.FileName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fileName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.Landscape(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="landscape"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.LeftMargin(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="leftMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.MaxColumnWidth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="maxColumnWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.PrintSelectCheckBox(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="printSelectCheckBox"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.RightMargin(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="rightMargin"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridExportOptionsBuilderBase`1.TopMargin(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="topMargin"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder.Bold(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="bold"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder.Italic(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="italic"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder.Overline(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="overline"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder.Strikeout(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="strikeout"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder.Underline(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="underline"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.Delay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.EditorNullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editorNullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.EditorNullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="editorNullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.EnableAnimation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.MinLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.UseCompactView(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useCompactView"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridHeaderFilterListBoxSearchUISettingsBuilder.Visibility(DevExpress.AspNetCore.GridHeaderFilterListBoxSearchUIVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="visibility"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder">
      <summary>
        <para>Contains the settings that relate to the adaptivity settings of the grid&#39;s edit form, filter control, and header filter popup dialogs.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.FixedFooter(System.Boolean)">
      <summary>
        <para>Sets whether the footer is fixed on the bottom while scrolling the popup window in adaptive mode.</para>
      </summary>
      <param name="fixedFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.FixedHeader(System.Boolean)">
      <summary>
        <para>Sets whether the header is fixed on the top while scrolling the popup window in adaptive mode.</para>
      </summary>
      <param name="fixedHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign)">
      <summary>
        <para>Sets the value that defines the horizontal alignment of the popup window in adaptive mode.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MaxHeight(System.Int32)">
      <summary>
        <para>Sets the maximum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MaxHeight(System.String)">
      <summary>
        <para>Sets the maximum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MaxWidth(System.Int32)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MaxWidth(System.String)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para>Sets the minimum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MinHeight(System.String)">
      <summary>
        <para>Sets the minimum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.Mode(DevExpress.AspNetCore.PopupControlAdaptivityMode)">
      <summary>
        <para>Specifies the adaptivity mode for the grid&#39;s popup dialogs.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.SwitchAtWindowInnerWidth(System.Int32)">
      <summary>
        <para>Sets a value that defines the maximum browser window inner width when the popup window is rendered in adaptive mode.</para>
      </summary>
      <param name="switchAtWindowInnerWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridPopupControlAdaptivitySettingsBuilder.VerticalAlign(DevExpress.AspNetCore.PopupAdaptiveVerticalAlign)">
      <summary>
        <para>Sets the value that defines the vertical alignment of the popup window in adaptive mode.</para>
      </summary>
      <param name="verticalAlign"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder">
      <summary>
        <para>Contains settings that relate to a periods section displayed in the header filter.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.RepeatColumns(System.Int32)">
      <summary>
        <para>Specifies the number of columns displayed in the header filter periods section.</para>
      </summary>
      <param name="repeatColumns"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowDaysSection(System.Boolean)">
      <summary>
        <para>Specifies whether the section containing day periods is displayed in the header filter.</para>
      </summary>
      <param name="showDaysSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowFuturePeriods(System.Boolean)">
      <summary>
        <para>Specifies whether items specifying future periods are displayed in the header filter.</para>
      </summary>
      <param name="showFuturePeriods"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowMonthsSection(System.Boolean)">
      <summary>
        <para>Specifies whether the section containing month periods is displayed in the header filter.</para>
      </summary>
      <param name="showMonthsSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowPastPeriods(System.Boolean)">
      <summary>
        <para>Specifies whether items specifying past periods are displayed in the header filter.</para>
      </summary>
      <param name="showPastPeriods"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowPresentPeriods(System.Boolean)">
      <summary>
        <para>Specifies whether items specifying present periods are displayed in the header filter.</para>
      </summary>
      <param name="showPresentPeriods"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowWeeksSection(System.Boolean)">
      <summary>
        <para>Specifies whether the section containing week periods is displayed in the header filter.</para>
      </summary>
      <param name="showWeeksSection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewColumnDateRangePeriodsSettingsBuilder.ShowYearsSection(System.Boolean)">
      <summary>
        <para>Specifies whether the section containing year periods is displayed in the header filter.</para>
      </summary>
      <param name="showYearsSection"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewCsvExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewCsvExportOptionsBuilder.DataAware(System.Action{DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewCsvExportOptionsBuilder.ExportType(DevExpress.Export.ExportType)">
      <summary>
        <para></para>
      </summary>
      <param name="exportType"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings`1"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings`1.DataItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewEditFormLayoutItemTemplateContainerSettings`1.Eval``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilderBase`1.DetailHorizontalOffset(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="detailHorizontalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilderBase`1.DetailVerticalOffset(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="detailVerticalOffset"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilderBase`1.ExportEmptyDetailGrid(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="exportEmptyDetailGrid"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilderBase`1.ExportSelectedRowsOnly(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="exportSelectedRowsOnly"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilderBase`1.PreserveGroupRowStates(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="preserveGroupRowStates"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder">
      <summary>
        <para>A grid format condition that allows you to color grid cells.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Specifies whether the current format condition is applied to the grid.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.FieldName(System.String)">
      <summary>
        <para>Sets the name of the data field against whose values the current format condition is applied.</para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.Format(DevExpress.AspNetCore.GridConditionColorScaleFormat)">
      <summary>
        <para>Sets the format (color scale) applied to cells.</para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.MaximumColor(System.Drawing.Color)">
      <summary>
        <para>Specifies a color applied to a cell with the maximum value.</para>
      </summary>
      <param name="maximumColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.MiddleColor(System.Drawing.Color)">
      <summary>
        <para>Specifies the middle color of a scale applied to cells.</para>
      </summary>
      <param name="middleColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.MinimumColor(System.Drawing.Color)">
      <summary>
        <para>Specifies the color applied to a cell with the minimum value.</para>
      </summary>
      <param name="minimumColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder.ShowInColumn(System.String)">
      <summary>
        <para>Sets a value that specifies a column to which the current conditional formatting will be applied.</para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder">
      <summary>
        <para>A grid format condition that allows you to highlight cell values based on a custom expression.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.ApplyToRow(System.Boolean)">
      <summary>
        <para>Specifies whether the conditional formatting is applied to a particular cell or to a whole row.</para>
      </summary>
      <param name="applyToRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Specifies whether the current format condition is applied to the grid.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.Expression(System.String)">
      <summary>
        <para>Sets the expression used to format grid cells.</para>
      </summary>
      <param name="expression"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.FieldName(System.String)">
      <summary>
        <para>Sets the name of the data field against whose values the current format condition is applied.</para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.Format(DevExpress.AspNetCore.GridConditionHighlightFormat)">
      <summary>
        <para>Sets the style format applied to cells whose values meet the format condition.</para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.ShowInColumn(System.String)">
      <summary>
        <para>Sets a value that specifies a column to which the current conditional formatting will be applied.</para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder.Style(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionIconSetBuilder">
      <summary>
        <para>A grid format condition that allows you to provide grid cells with predefined icons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionIconSetBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Specifies whether the current format condition is applied to the grid.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionIconSetBuilder.FieldName(System.String)">
      <summary>
        <para>Sets the name of the data field against whose values the current format condition is applied.</para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionIconSetBuilder.Format(DevExpress.AspNetCore.GridConditionIconSetFormat)">
      <summary>
        <para>Sets the format (icon set) applied to cells.</para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionIconSetBuilder.ShowInColumn(System.String)">
      <summary>
        <para>Sets a value that specifies a column to which the current conditional formatting will be applied.</para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionStyleBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionStyleBuilder.BackColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="backColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionStyleBuilder.Font(System.Action{DevExpress.AspNetCore.Bootstrap.GridFormatConditionStyleFontBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionStyleBuilder.ForeColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="foreColor"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder">
      <summary>
        <para>A grid format condition that allows you to highlight top or bottom cell values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.ApplyToRow(System.Boolean)">
      <summary>
        <para>Specifies whether the conditional formatting is applied to a particular cell or to a whole row.</para>
      </summary>
      <param name="applyToRow"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Specifies whether the current format condition is applied to the grid.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.FieldName(System.String)">
      <summary>
        <para>Sets the name of the data field against whose values the current format condition is applied.</para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.Format(DevExpress.AspNetCore.GridConditionHighlightFormat)">
      <summary>
        <para>Sets the style format applied to cells whose values meet the format condition.</para>
      </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.Rule(DevExpress.AspNetCore.GridTopBottomRule)">
      <summary>
        <para>Specifies the format condition rule.</para>
      </summary>
      <param name="rule"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.ShowInColumn(System.String)">
      <summary>
        <para>Sets a value that specifies a column to which the current conditional formatting will be applied.</para>
      </summary>
      <param name="showInColumn"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.Style(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionStyleBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder.Threshold(System.Decimal)">
      <summary>
        <para>Allows you to provide additional information for the current rule.</para>
      </summary>
      <param name="threshold"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewRouteType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.GridViewRouteType.AddRow">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.GridViewRouteType.BatchUpdate">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.GridViewRouteType.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.GridViewRouteType.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.GridViewRouteType.DeleteRow">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.GridViewRouteType.UpdateRow">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewXlsExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewXlsExportOptionsBuilder.DataAware(System.Action{DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewXlsExportOptionsBuilder.ExportType(DevExpress.Export.ExportType)">
      <summary>
        <para></para>
      </summary>
      <param name="exportType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewXlsExportOptionsBuilder.SheetName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="sheetName"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.GridViewXlsxExportOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewXlsxExportOptionsBuilder.DataAware(System.Action{DevExpress.AspNetCore.Bootstrap.DataAwareExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewXlsxExportOptionsBuilder.ExportType(DevExpress.Export.ExportType)">
      <summary>
        <para></para>
      </summary>
      <param name="exportType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.GridViewXlsxExportOptionsBuilder.SheetName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="sheetName"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordion">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordion.Groups">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordion.HasVisibleGroups">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordion.SelectedItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.AllowExpanding">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.ContentCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.ExpandButtonPosition">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Expanded">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.HeaderCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.HeaderCssClassCollapsed">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.HeaderIconCollapsedCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.HeaderIconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.ItemCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Items">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.ShowExpandButton">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionGroup.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.CssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.Selected">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapAccordionItem.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.AddNewCard">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.Columns">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.FocusedCardIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.GetCardValues(System.Int32,System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <param name="fieldNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.GetCardValuesByKeyValue(System.Object,System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <param name="fieldNames"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.IsNewCardEditing">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.Selection">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.SortBy(DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn,DevExpress.Data.ColumnSortOrder)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardView.SortBy(DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn,System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewBeforeHeaderFilterFillItemsEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewBeforeHeaderFilterFillItemsEventArgs.Handled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.FieldName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.FilterExpression">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.ReadOnly">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.SortAscending">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.SortDescending">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.SortIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.SortOrder">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.UnboundExpression">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.UnboundType">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumn.UnSort">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumnDataEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumnDataEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumnDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewColumnDisplayTextEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCommandButtonEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCommandButtonEventArgs.ButtonType">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCommandButtonEventArgs.IsEditingCard">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCustomColumnSortEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCustomColumnSortEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCustomSummaryEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewCustomSummaryEventArgs.SummaryItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToCsv">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToCsv(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewCsvExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToRtf">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToRtf(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToXls">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToXls(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewXlsExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToXlsx">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.ExportToXlsx(System.Action{DevExpress.AspNetCore.Bootstrap.CardViewXlsxExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewEx.GetActionResult">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewHeaderFilterEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewHeaderFilterEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection.IsCardSelected(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection.IsCardSelectedByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection.SelectCard(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection.SelectCardByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection.UnselectCard(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSelection.UnselectCardByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSummaryDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSummaryItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSummaryItem.Tag">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSummaryItem.ValueDisplayFormat">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapCardViewSummaryItem.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapComboBox">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapControl">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapControl.IsPartialUpdate">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapControl.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapFormLayout">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGirdColumn">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGirdColumn.Caption">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGirdColumn.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGirdColumn.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.CancelEdit">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.ClearSort">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.FilterEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.FilterExpression">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.FindVisibleIndexByKeyValue(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.ForceDataRowType(System.Type)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.GetFilteredSelectedValues(System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="fieldNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.GetRow(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.GetSelectedFieldValues(System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="fieldNames"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.IsEditing">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.JSProperties">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.KeyFieldName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGrid.StartEdit(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDataEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDataEventArgs.GetListSourceFieldValue(System.Int32,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="listSourceRowIndex"></param>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDataEventArgs.GetListSourceFieldValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDataEventArgs.ListSourceRowIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDataEventArgs.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs.DisplayText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs.EncodeHtml">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs.GetFieldValue(System.Int32,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs.GetFieldValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridColumnDisplayTextEventArgs.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs.CssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCommandButtonEventArgs.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.GetRow1Value(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.GetRow2Value(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.Handled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.ListSourceRowIndex1">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.ListSourceRowIndex2">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.Result">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.SortOrder">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.Value1">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridCustomColumnSortEventArgs.Value2">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridHeaderFilterEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridHeaderFilterEventArgs.Values">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSelection">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSelection.SelectAll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSelection.SetSelection(System.Int32,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <param name="selected"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSelection.SetSelectionByKey(System.Object,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <param name="selected"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSelection.UnselectAll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSelection.UnselectAllFiltered">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSummaryDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSummaryDisplayTextEventArgs.EncodeHtml">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSummaryDisplayTextEventArgs.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSummaryDisplayTextEventArgs.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridSummaryDisplayTextEventArgs.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.AddNewRow">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.AutoFilterByColumn(DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <param name="value"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.CollapseAll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.Columns">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.DataColumns">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.DetailRows">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.ExpandAll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.ExpandRow(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.ExpandRow(System.Int32,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <param name="recursive"></param>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.FocusedRowIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.GetRowValues(System.Int32,System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <param name="fieldNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.GetRowValuesByKeyValue(System.Object,System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <param name="fieldNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.GroupBy(DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.GroupBy(DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn,System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.IsNewRowEditing">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.MakeRowVisible(System.Object)">
      <summary>
        <para>Makes the specified data row visible on a  page.</para>
      </summary>
      <param name="keyValue">An object that represents a GridView row&#39;s key value.</param>
      <returns>true, if a GridView&#39;s row has been found by the specified key value; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.Selection">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.SortBy(DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn,DevExpress.Data.ColumnSortOrder)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.SortBy(DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn,System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridView.Ungroup(DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn)">
      <summary>
        <para></para>
      </summary>
      <param name="column"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewBeforeHeaderFilterFillItemsEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewBeforeHeaderFilterFillItemsEventArgs.Handled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumn">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDataEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDataEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewColumnDisplayTextEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCommandButtonEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCommandButtonEventArgs.ButtonType">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCommandButtonEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCommandButtonEventArgs.IsEditingRow">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCommandColumn">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomColumnSortEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomColumnSortEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomSummaryEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewCustomSummaryEventArgs.SummaryItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.AutoFilterBy(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.FieldName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.FilterExpression">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.GroupBy">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.GroupIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.ReadOnly">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.SortAscending">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.SortDescending">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.SortIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.SortOrder">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.UnboundExpression">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.UnboundType">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.Ungroup">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDataColumn.Unsort">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.CollapseAllRows">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.CollapseRow(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.CollapseRowByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.ExpandAllRows">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.ExpandRow(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.ExpandRowByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.IsExpanded(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.IsExpandedByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewDetailRows.VisibleCount">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToCsv">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToCsv(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewCsvExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToRtf">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToRtf(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToXls">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToXls(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewXlsExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToXlsx">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.ExportToXlsx(System.Action{DevExpress.AspNetCore.Bootstrap.GridViewXlsxExportOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewEx.GetActionResult">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewHeaderFilterEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewHeaderFilterEventArgs.Column">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs.DisplayText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs.EncodeHtml">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs.GetRowValue(System.Int32,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs.GetRowValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewPreviewDisplayTextEventArgs.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection.IsRowSelected(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection.IsRowSelectedByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection.SelectRow(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection.SelectRowByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection.UnselectRow(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIndex"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSelection.UnselectRowByKey(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="keyValue"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryDisplayTextEventArgs.IsGroupSummary">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryDisplayTextEventArgs.IsTotalSummary">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryDisplayTextEventArgs.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryItem.ShowInColumn">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryItem.ShowInGroupFooterColumn">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryItem.Tag">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryItem.ValueDisplayFormat">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapGridViewSummaryItem.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapLayoutItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapLayoutItem.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapLayoutItemDataBoundEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapLayoutItemDataBoundEventArgs.LayoutItem">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapListEditItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapListEditItem.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapListEditItem.Selected">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapListEditItem.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapListEditItem.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapListEditItem.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapMenu">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenu.Items">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.BeginGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Checked">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.CssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.GroupName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Items">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Selected">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapMenuItem.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapPageControl">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapPageControl.TabPages">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler.BindAppointments(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler.BindResources(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="dataObject"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapScheduler.GetIntervalAppointments(DevExpress.XtraScheduler.TimeInterval)">
      <summary>
        <para></para>
      </summary>
      <param name="interval"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.AllDay">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.CustomFields">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.Description">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.End">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.Id">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.LabelKey">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.Location">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.PatternRecurrenceInfo">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.RecurrenceInfo">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.ResourceIds">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.Start">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.StatusKey">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.Subject">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.TimeZoneId">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointment.Type">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentConflictEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentConflictEventArgs.Conflicts">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentConflictEventArgs.Interval">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentDisplayTextEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentDisplayTextEventArgs.Appointment">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentDisplayTextEventArgs.Description">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentDisplayTextEventArgs.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentDisplayTextEventArgs.ViewInfo">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentEventArgs.Appointment">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerAppointmentOperationEventArgs.Allow">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerContextMenuShowingEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerContextMenuShowingEventArgs.ContextMenuType">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerContextMenuShowingEventArgs.CreateItem">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerContextMenuShowingEventArgs.Items">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerEx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerEx.GetActionResult">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapSchedulerEx.GetUpdateAppointments``1">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapTab">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.ActiveTabCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.ActiveTabIconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.TabCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.TabIconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTab.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapTabControl">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabControl.Tabs">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.ActiveTabCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.ActiveTabIconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.TabCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.TabIconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTabPage.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbar">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbar.Items">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.BeginGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Checked">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.CssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.DropDownMode">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.GroupName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Items">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Selected">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarItem.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.BeginGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Checked">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.CssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.GroupName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Selected">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapToolbarMenuItem.VisibleIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.CollapseAll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.ExpandAll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.ExpandToDepth(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="depth"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.FindAllRecursive(System.Func{DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode,System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="match"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.FindRecursive(System.Func{DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode,System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="match"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.Nodes">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeView.SelectedNode">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.ClientEnabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.ClientVisible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.CssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Enabled">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Expanded">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.FindAllRecursive(System.Func{DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode,System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="match"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.FindRecursive(System.Func{DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode,System.Boolean})">
      <summary>
        <para></para>
      </summary>
      <param name="match"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.IconCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Name">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.NavigateUrl">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Nodes">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Parent">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Target">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Text">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.TextCssClass">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.ToolTip">
      <summary>
        <para>Sets the text displayed when the mouse pointer hovers over the control.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IBootstrapTreeViewNode.Visible">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.FieldValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.GetGroupSummary(System.Int32,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="groupRowHandle"></param>
      <param name="summaryItem"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.GetValue(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fieldName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.GroupLevel">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.GroupRowHandle">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.IsGroupSummary">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.IsTotalSummary">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.Item">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.RowHandle">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.SummaryProcess">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.TotalValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ICustomSummaryEventArgs.TotalValueReady">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.IFilterValue">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IFilterValue.BeginGroup">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IFilterValue.DisplayText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IFilterValue.Query">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.IFilterValue.Value">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder">
      <summary>
        <para>Defines different offset settings of submenus relative to their parent menu items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder.FirstItemX(System.Int32)">
      <summary>
        <para>Sets the horizontal offset of a submenu relative to its parent menu item which is the first item at its menu level.</para>
      </summary>
      <param name="firstItemX"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder.FirstItemY(System.Int32)">
      <summary>
        <para>Sets the vertical offset of a submenu relative to its parent menu item which is the first item at its menu level.</para>
      </summary>
      <param name="firstItemY"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder.LastItemX(System.Int32)">
      <summary>
        <para>Sets the horizontal offset of a submenu relative to its parent menu item which is the last item at its menu level.</para>
      </summary>
      <param name="lastItemX"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder.LastItemY(System.Int32)">
      <summary>
        <para>Sets the vertical offset of a submenu relative to its parent menu item which is the last item at its menu level.</para>
      </summary>
      <param name="lastItemY"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder.X(System.Int32)">
      <summary>
        <para>Sets the horizontal offset of a submenu relative to its parent menu item which is neither the first nor the last item at its menu level.</para>
      </summary>
      <param name="x"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ItemSubMenuOffsetBuilder.Y(System.Int32)">
      <summary>
        <para>Sets the vertical offset of a submenu relative to its parent menu item which is neither the first nor the last item at its menu level.</para>
      </summary>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side list box editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle an editor&#39;s client <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.BeginCallback"/> event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.CallbackError"/> event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.CustomHighlighting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customHighlighting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle an editor&#39;s client <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.EndCallback"/> event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.ItemDoubleClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.ItemDoubleClick"/> event.</para>
      </summary>
      <param name="itemDoubleClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.ItemFiltering(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="itemFiltering"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client editor&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientListBox.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.SelectedIndexChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientListEdit.SelectedIndexChanged"/> event.</para>
      </summary>
      <param name="selectedIndexChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.CustomEditorID(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="customEditorID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.Delay(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.EditorNullText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="editorNullText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.EditorNullTextDisplayMode(DevExpress.AspNetCore.NullTextDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="editorNullTextDisplayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.EnableAnimation(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enableAnimation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.MinLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.ShowSearchUI(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showSearchUI"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListBoxFilteringSettingsBuilder.UseCompactView(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useCompactView"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side list editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder.SelectedIndexChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientListEdit.SelectedIndexChanged"/> event.</para>
      </summary>
      <param name="selectedIndexChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ListEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder">
      <summary>
        <para>Contains mask settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.AllowEscapingInEnums(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether specific symbols can be escaped using a back slash and quotes (both single and double) to include them into the mask value containing enumerations.</para>
      </summary>
      <param name="allowEscapingInEnums"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.AllowMouseWheel(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an end-user is able to change the masked value within the editor using the mouse wheel.</para>
      </summary>
      <param name="allowMouseWheel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.ErrorText(System.String)">
      <summary>
        <para>Sets the error text to be displayed, if user input is not valid against the specified mask.</para>
      </summary>
      <param name="errorText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.IncludeLiterals(DevExpress.AspNetCore.MaskIncludeLiteralsMode)">
      <summary>
        <para>Sets a value that specifies which constantly displayed mask characters (literals) are included in an editor&#39;s value.</para>
      </summary>
      <param name="includeLiterals"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.Mask(System.String)">
      <summary>
        <para>Sets a mask expression.</para>
      </summary>
      <param name="mask"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.PromptChar(System.Char)">
      <summary>
        <para>Sets the character used as the placeholder in a masked editor.</para>
      </summary>
      <param name="promptChar"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.ShowHints(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a mask hint can be displayed when an end-user enters a value into a masked editor.</para>
      </summary>
      <param name="showHints"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MaskSettingsBuilder.UseInvariantCultureDecimalSymbolOnClient(System.Boolean)">
      <summary>
        <para>Specifies whether to use the period (.) as the decimal point in an editor&#39;s value on the client side.</para>
      </summary>
      <param name="useInvariantCultureDecimalSymbolOnClient"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for a menu.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder.CloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client menu&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientMenuBase.CloseUp"/> event.</para>
      </summary>
      <param name="closeUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder.ItemClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client menu&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick"/> event.</para>
      </summary>
      <param name="itemClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder.ItemMouseOut(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client menu&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientMenuBase.ItemMouseOut"/> event.</para>
      </summary>
      <param name="itemMouseOut"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder.ItemMouseOver(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client menu&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientMenuBase.ItemMouseOver"/> event.</para>
      </summary>
      <param name="itemMouseOver"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.MenuClientSideEventsBuilder.PopUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client menu&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientMenuBase.PopUp"/> event.</para>
      </summary>
      <param name="popUp"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for the navbar control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client BeginCallback event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client CallbackError event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client EndCallback event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.ExpandedChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client navbar&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientNavBar.ExpandedChanged"/> event.</para>
      </summary>
      <param name="expandedChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.ExpandedChanging(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client navbar&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientNavBar.ExpandedChanging"/> event.</para>
      </summary>
      <param name="expandedChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.HeaderClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client navbar&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientNavBar.HeaderClick"/> event.</para>
      </summary>
      <param name="headerClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.NavBarClientSideEventsBuilder.ItemClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client navbar&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientNavBar.ItemClick"/> event.</para>
      </summary>
      <param name="itemClick"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.OptionsSelectionBehaviorBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.OptionsSelectionBehaviorBuilder.KeepSelectedAppointments(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="keepSelectedAppointments"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.OptionsSelectionBehaviorBuilder.UpdateSelectionDurationAction(DevExpress.XtraScheduler.UpdateSelectionDurationAction)">
      <summary>
        <para></para>
      </summary>
      <param name="updateSelectionDurationAction"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior">
      <summary>
        <para>Lists values that specify how to arrange axis labels when there is not enough space to keep all of them.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior.EnlargeTickInterval">
      <summary>
        <para>Leave the labels as they are, but enlarge the axis tick intervals so that the labels do not overlap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior.Hide">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior.Ignore">
      <summary>
        <para>Leave the labels overlapped.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior.Rotate">
      <summary>
        <para>Rotate labels so that they are perpendicular to the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.OverlappingBehavior.Stagger">
      <summary>
        <para>Arrange labels in a staggered manner.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PageControlRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PageControlRouteType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PageControlRouteType.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PageControlRouteType.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode.Alternate">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode.Blend">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PaletteExtensionMode.Extrapolate">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PieChartResolveLabelOverlapping">
      <summary>
        <para>Lists values of chart behavior when labels overlap. Allows you to hide certain labels, or slightly shift them, or keep them as they are (i.e., overlapping).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartResolveLabelOverlapping.Hide">
      <summary>
        <para>The PieChart automatically determines and hides overlapping labels in the order of their addition to the data source.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartResolveLabelOverlapping.None">
      <summary>
        <para>Default. The label location is specified by default.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartResolveLabelOverlapping.Shift">
      <summary>
        <para>The PieChart control tries to shift chart labels to show them without overlapping. If there is not enough space for all labels, the control hides labels with the smallest value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PieChartSegmentsDirection">
      <summary>
        <para>Lists values that define the direction that the  segments will occupy.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartSegmentsDirection.AntiClockwise">
      <summary>
        <para>The chart slices are laid out counterclockwise starting from the angle specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.StartAngle(System.Decimal)"/> method.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartSegmentsDirection.Clockwise">
      <summary>
        <para>The chart slices are laid out clockwise starting from the angle specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartBuilder.StartAngle(System.Decimal)"/> method.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PieChartType">
      <summary>
        <para>Lists values defining the type of a .</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartType.Donut">
      <summary>
        <para>The Donut chart (synonymous with Doughnut).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartType.Doughnut">
      <summary>
        <para>The Doughnut chart (synonymous with Donut).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PieChartType.Pie">
      <summary>
        <para>The Pie chart.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PolarChartOverlappingBehavior">
      <summary>
        <para>Lists values that define how to arrange axis labels when there is insufficient space to keep all of them.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartOverlappingBehavior.EnlargeTickInterval">
      <summary>
        <para>Tick intervals are enlarged to such an extent that there is no overlapped elements.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartOverlappingBehavior.Hide">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartOverlappingBehavior.Ignore">
      <summary>
        <para>The overlapping is ignored.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartOverlappingBehavior.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType">
      <summary>
        <para>Lists values that specify the type of a  series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType.Area">
      <summary>
        <para>The Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType.Bar">
      <summary>
        <para>The Bar series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType.Line">
      <summary>
        <para>The Line series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType.Scatter">
      <summary>
        <para>The Scatter series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PolarChartSeriesType.StackedBar">
      <summary>
        <para>The Stacked Bar series.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder">
      <summary>
        <para>Contains the settings that relate to the PopupControl&#39;s adaptivity settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.FixedFooter(System.Boolean)">
      <summary>
        <para>Sets whether the footer is fixed on the bottom while scrolling the popup window in adaptive mode.</para>
      </summary>
      <param name="fixedFooter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.FixedHeader(System.Boolean)">
      <summary>
        <para>Sets whether the header is fixed on the top while scrolling the popup window in adaptive mode.</para>
      </summary>
      <param name="fixedHeader"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.HorizontalAlign(DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign)">
      <summary>
        <para>Sets the value that defines the horizontal alignment of the popup window in adaptive mode.</para>
      </summary>
      <param name="horizontalAlign"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MaxHeight(System.Int32)">
      <summary>
        <para>Sets the maximum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MaxHeight(System.String)">
      <summary>
        <para>Sets the maximum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MaxWidth(System.Int32)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MaxWidth(System.String)">
      <summary>
        <para>Sets the maximum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="maxWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MinHeight(System.Int32)">
      <summary>
        <para>Sets the minimum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MinHeight(System.String)">
      <summary>
        <para>Sets the minimum height of the popup window in adaptive mode.</para>
      </summary>
      <param name="minHeight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MinWidth(System.Int32)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.MinWidth(System.String)">
      <summary>
        <para>Sets the minimum width of the popup window in adaptive mode.</para>
      </summary>
      <param name="minWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.Mode(DevExpress.AspNetCore.PopupControlAdaptivityMode)">
      <summary>
        <para>Specifies the adaptivity mode for the popup window.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.SwitchAtWindowInnerWidth(System.Int32)">
      <summary>
        <para>Sets a value that defines the maximum browser window inner width when the popup window is rendered in adaptive mode.</para>
      </summary>
      <param name="switchAtWindowInnerWidth"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlAdaptivitySettingsBuilder.VerticalAlign(DevExpress.AspNetCore.PopupAdaptiveVerticalAlign)">
      <summary>
        <para>Sets the value that defines the vertical alignment of the popup window in adaptive mode.</para>
      </summary>
      <param name="verticalAlign"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for a popup control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.AfterResizing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.AfterResizing"/> event.</para>
      </summary>
      <param name="afterResizing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.BeforeResizing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.BeforeResizing"/> event.</para>
      </summary>
      <param name="beforeResizing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client BeginCallback event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client CallbackError event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.CloseButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControl.CloseButtonClick"/> event.</para>
      </summary>
      <param name="closeButtonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.CloseUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.CloseUp"/> event.</para>
      </summary>
      <param name="closeUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.Closing(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.Closing"/> event.</para>
      </summary>
      <param name="closing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client EndCallback event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.PinnedChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.PinnedChanged"/> event.</para>
      </summary>
      <param name="pinnedChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.PopUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.PopUp"/> event.</para>
      </summary>
      <param name="popUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.Resize(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.Resize"/> event.</para>
      </summary>
      <param name="resize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.PopupControlClientSideEventsBuilder.Shown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientPopupControlBase.Shown"/> event.</para>
      </summary>
      <param name="shown"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PopupControlRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PopupControlRouteType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PopupControlRouteType.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.PopupControlRouteType.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PropertyBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.PropertyBuilderBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ReadOnlyBootstrapGridColumnCollection`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ReadOnlyBootstrapGridColumnCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.AspNetCore.Bootstrap.ReadOnlyBootstrapGridColumnCollection`1"/> class.</para>
      </summary>
      <param name="list"></param>
    </member>
    <member name="P:DevExpress.AspNetCore.Bootstrap.ReadOnlyBootstrapGridColumnCollection`1.Item(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="ID_FieldName_Caption"></param>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.RelativePosition">
      <summary>
        <para>Lists values defining the position of the constant line labels on the chart plot.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.RelativePosition.Inside">
      <summary>
        <para>The constant line labels are located outside the chart grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.RelativePosition.Outside">
      <summary>
        <para>Default. The constant line labels are contained within the chart grid.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceColorFillArea">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ResourceColorFillArea.Both">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ResourceColorFillArea.ResourceHeader">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ResourceColorFillArea.TimeCells">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingBuilder.Name(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceCustomFieldMappingCollectionBuilder`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
        <para></para>
      </summary>
      <param name="nameExpression"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorBuilder.Mode(DevExpress.AspNetCore.Bootstrap.ResourceNavigatorMode)">
      <summary>
        <para></para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorBuilder.SettingsPager(System.Action{DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorBuilder.SettingsTokens(System.Action{DevExpress.AspNetCore.Bootstrap.ResourceNavigatorTokensPropertiesBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorBuilder.Visibility(DevExpress.XtraScheduler.ResourceNavigatorVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="visibility"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorMode.Pager">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorMode.Tokens">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder.ShowFirstLastButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showFirstLastButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder.ShowIncreaseDecreaseButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showIncreaseDecreaseButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder.ShowPrevNextButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPrevNextButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder.ShowPrevNextPageButtons(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPrevNextPageButtons"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorPagerPropertiesBuilder.ShowResourceDropDownList(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showResourceDropDownList"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorTokensPropertiesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorTokensPropertiesBuilder.ShowExpandButton(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showExpandButton"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.ResourceNavigatorTokensPropertiesBuilder.ShowResourceColor(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showResourceColor"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.RouteCollectionBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.RouteCollectionBuilder`1.MapRoute(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder})">
      <summary>
        <para>Defines the request routing logic by specifying the names of a Controller and an Action, which should handle requests.</para>
      </summary>
      <param name="config">An action performing the required configurations through a  object.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.RouteCollectionBuilder`2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.RouteCollectionBuilder`2.MapRoute(System.Action{DevExpress.AspNetCore.Bootstrap.ControlRouteBuilder{`1}})">
      <summary>
        <para>Defines the request routing logic by specifying the request type along with the names of a Controller and an Action, which should handle it.</para>
      </summary>
      <param name="config">An action performing the required configurations through a  object.</param>
      <returns>A reference to this instance after the operation is completed.</returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.ActiveViewChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="activeViewChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.ActiveViewChanging(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="activeViewChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentDeleting(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentDeleting"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentDoubleClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentDoubleClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentDrag(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentDrag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentDrop(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentDrop"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentResize(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentResize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentResizing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentResizing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentsSelectionChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentsSelectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.AppointmentToolTipShowing(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentToolTipShowing"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.CellClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cellClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.CellDoubleClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="cellDoubleClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.ContextMenuItemClicked(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contextMenuItemClicked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.MenuItemClicked(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="menuItemClicked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.MoreButtonClicked(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="moreButtonClicked"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.MouseUp(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="mouseUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.SelectionChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="selectionChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.SelectionChanging(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="selectionChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.Shortcut(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="shortcut"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerClientSideEventsBuilder.VisibleIntervalChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="visibleIntervalChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.BaseColor(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="baseColor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.Cell(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="cell"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.CellBorder(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="cellBorder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.CellBorderDark(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="cellBorderDark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.CellLight(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="cellLight"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.CellLightBorder(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="cellLightBorder"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.CellLightBorderDark(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="cellLightBorderDark"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.ResourceHeaderBackground(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceHeaderBackground"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaBuilder.ResourceHeaderText(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="resourceHeaderText"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerColorSchemaCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerFormVisibility">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SchedulerFormVisibility.FillControlArea">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SchedulerFormVisibility.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SchedulerFormVisibility.PopupWindow">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerNavigationButtonOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerNavigationButtonOptionsBuilder.AppointmentSearchInterval(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="appointmentSearchInterval"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerNavigationButtonOptionsBuilder.NextCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="nextCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerNavigationButtonOptionsBuilder.PrevCaption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="prevCaption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerNavigationButtonOptionsBuilder.Visibility(DevExpress.XtraScheduler.NavigationButtonVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="visibility"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentConflicts(DevExpress.XtraScheduler.AppointmentConflictsMode)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentConflicts"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentCopy(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentCopy"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentCreate(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentCreate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentDelete(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentDelete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentDrag(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentDrag"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentDragBetweenResources(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentDragBetweenResources"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentEdit(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentEdit"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentMultiSelect(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentMultiSelect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowAppointmentResize(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowAppointmentResize"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowDisplayAppointmentDependencyForm(DevExpress.XtraScheduler.AllowDisplayAppointmentDependencyForm)">
      <summary>
        <para></para>
      </summary>
      <param name="allowDisplayAppointmentDependencyForm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowDisplayAppointmentFlyout(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allowDisplayAppointmentFlyout"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowDisplayAppointmentForm(DevExpress.XtraScheduler.AllowDisplayAppointmentForm)">
      <summary>
        <para></para>
      </summary>
      <param name="allowDisplayAppointmentForm"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SchedulerOptionsCustomizationBuilder.AllowInplaceEditor(DevExpress.XtraScheduler.UsedAppointmentType)">
      <summary>
        <para></para>
      </summary>
      <param name="allowInplaceEditor"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SchedulerRouteType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SchedulerRouteType.Custom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SchedulerRouteType.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SchedulerRouteType.EditAppointment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SeriesType">
      <summary>
        <para>Lists values that specify the type of a  series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Area">
      <summary>
        <para>The Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Bar">
      <summary>
        <para>The Bar series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Bubble">
      <summary>
        <para>The Bubble series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.CandleStick">
      <summary>
        <para>The Candlestick series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.FullStackedArea">
      <summary>
        <para>The Full Stacked Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.FullStackedBar">
      <summary>
        <para>The Full Stacked Bar series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.FullStackedLine">
      <summary>
        <para>The Full Stacked Line series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.FullStackedSpline">
      <summary>
        <para>The Full Stacked Spline series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.FullStackedSplineArea">
      <summary>
        <para>The Full Stacked Spline Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Line">
      <summary>
        <para>The Line series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.RangeArea">
      <summary>
        <para>The Range Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.RangeBar">
      <summary>
        <para>The Range Bar series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Scatter">
      <summary>
        <para>The Scatter series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Spline">
      <summary>
        <para>The Spline series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.SplineArea">
      <summary>
        <para>The Spline Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StackedArea">
      <summary>
        <para>The Stacked Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StackedBar">
      <summary>
        <para>The Stacked Bar series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StackedLine">
      <summary>
        <para>The Stacked Line series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StackedSpline">
      <summary>
        <para>The Stacked Spline series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StackedSplineArea">
      <summary>
        <para>The Stacked Spline Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StepArea">
      <summary>
        <para>The Step Area series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.StepLine">
      <summary>
        <para>The Step Line series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SeriesType.Stock">
      <summary>
        <para>The Stock series.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder">
      <summary>
        <para>Provides settings that affect a loading panel&#39;s availability and content.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder.Delay(System.Int32)">
      <summary>
        <para>Sets the delay before displaying the loading panel.</para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder.Enabled(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether a loading panel is displayed while waiting for a callback response.</para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder.ImagePosition(DevExpress.AspNetCore.ImagePosition)">
      <summary>
        <para>Sets the position of an image displayed within a loading panel with respect to the panel&#39;s text content.</para>
      </summary>
      <param name="imagePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder.ShowImage(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an image defined via the <see cref="P:DevExpress.Web.ImagesBase.LoadingPanel"/> property is displayed within a loading panel.</para>
      </summary>
      <param name="showImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SettingsLoadingPanelBuilder.Text(System.String)">
      <summary>
        <para>Sets the text to be displayed within a specific loading panel invoked while waiting for a callback response.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SmallValuesGroupingMode">
      <summary>
        <para>Lists chart segment grouping options.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SmallValuesGroupingMode.None">
      <summary>
        <para>Do not group chart segments.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SmallValuesGroupingMode.SmallValueThreshold">
      <summary>
        <para>Group all segments with the value less than the value of the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder.Threshold(System.Decimal)"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SmallValuesGroupingMode.TopN">
      <summary>
        <para>Group all segments that have an index that is equal to or greater than the value of the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapPieChartSmallValuesGroupingSettingsBuilder.TopCount(System.Int32)"/> property.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol.Circle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol.Cross">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol.Polygon">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol.Square">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklinePointSymbol.Triangle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.ArrowLength(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="arrowLength"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.Color(System.Drawing.Color)">
      <summary>
        <para></para>
      </summary>
      <param name="color"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.Font(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFontBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.Format(System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapUIWidgetFormatBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="config"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.OnClientCustomizeTooltip(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="onClientCustomizeTooltip"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SparklineToolTipSettingsBuilder.ZIndex(System.Nullable{System.Double})">
      <summary>
        <para></para>
      </summary>
      <param name="zIndex"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SparklineType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.Area">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.Bar">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.Line">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.Spline">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.SplineArea">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.StepArea">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.StepLine">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.SparklineType.WinLoss">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side spin editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.ButtonClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientButtonEditBase.ButtonClick"/> event.</para>
      </summary>
      <param name="buttonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.NumberChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientSpinEdit.NumberChanged"/> event.</para>
      </summary>
      <param name="numberChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SpinEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.StaticEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side static editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.StaticEditClientSideEventsBuilder.Click(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientStaticEdit.Click"/> event.</para>
      </summary>
      <param name="click"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.StaticEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder">
      <summary>
        <para>Provides the pager summary settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder.AllPagesText(System.String)">
      <summary>
        <para>Sets the pattern used to format a summary text when the content of all the pages is displayed.</para>
      </summary>
      <param name="allPagesText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder.EmptyText(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="emptyText"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder.Position(DevExpress.AspNetCore.PagerButtonPosition)">
      <summary>
        <para>Sets the position of the summary text.</para>
      </summary>
      <param name="position"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder.Text(System.String)">
      <summary>
        <para>Sets the text displayed in a pager button.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.SummaryPropertiesBuilder.Visible(System.Boolean)">
      <summary>
        <para>Sets a value specifying the visibility of a pager button.</para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for a tab control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.ActiveTabChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client tab control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientTabControlBase.ActiveTabChanged"/> event.</para>
      </summary>
      <param name="activeTabChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.ActiveTabChanging(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client tab control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientTabControlBase.ActiveTabChanging"/> event.</para>
      </summary>
      <param name="activeTabChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client BeginCallback event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client CallbackError event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client EndCallback event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TabControlClientSideEventsBuilder.TabClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client tabbed control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientTabControlBase.TabClick"/> event.</para>
      </summary>
      <param name="tabClick"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TemplateContent">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <para></para>
      </summary>
      <param name="object"></param>
      <param name="method"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContent.BeginInvoke(System.Object,System.AsyncCallback,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <param name="callback"></param>
      <param name="object"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContent.EndInvoke(System.IAsyncResult)">
      <summary>
        <para></para>
      </summary>
      <param name="result"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContent.Invoke(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TemplateContentCallback`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContentCallback`1.#ctor(System.Object,System.IntPtr)">
      <summary>
        <para></para>
      </summary>
      <param name="object"></param>
      <param name="method"></param>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContentCallback`1.BeginInvoke(`0,System.AsyncCallback,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="settings"></param>
      <param name="callback"></param>
      <param name="object"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContentCallback`1.EndInvoke(System.IAsyncResult)">
      <summary>
        <para></para>
      </summary>
      <param name="result"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TemplateContentCallback`1.Invoke(`0)">
      <summary>
        <para></para>
      </summary>
      <param name="settings"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side textbox editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.TextChanged"/> event.</para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextBoxClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder">
      <summary>
        <para>Contains a client-side text editor&#39;s event list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.GotFocus"/> event.</para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyDown"/> event.</para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyPress"/> event.</para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.KeyUp"/> event.</para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.LostFocus"/> event.</para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.TextChanged"/> event.</para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTextEdit.UserInput"/> event.</para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.Validation"/> event.</para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TextEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientEdit.ValueChanged"/> event.</para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.ButtonClick(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="buttonClick"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.DateChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dateChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.GotFocus(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="gotFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.KeyDown(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="keyDown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.KeyPress(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="keyPress"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.KeyUp(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="keyUp"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.LostFocus(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="lostFocus"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.UserInput(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="userInput"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.Validation(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="validation"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeEditClientSideEventsBuilder.ValueChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="valueChanged"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeIndicatorDisplayOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeIndicatorDisplayOptionsBuilder.Visibility(DevExpress.XtraScheduler.TimeIndicatorVisibility)">
      <summary>
        <para></para>
      </summary>
      <param name="visibility"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeIntervalBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeIntervalBuilder.AllDay(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="allDay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeIntervalBuilder.Duration(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="duration"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeIntervalBuilder.End(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="end"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeIntervalBuilder.Start(System.DateTime)">
      <summary>
        <para></para>
      </summary>
      <param name="start"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder.End(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="end"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeOfDayIntervalBuilder.Start(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="start"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.AdjustForDaylightSavingTime(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="adjustForDaylightSavingTime"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.AlwaysShowTimeDesignator(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="alwaysShowTimeDesignator"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.AlwaysShowTopRowTime(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="alwaysShowTopRowTime"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.Caption(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="caption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.HorizontalAlignment(DevExpress.XtraScheduler.TimeRulerHorizontalAlignment)">
      <summary>
        <para></para>
      </summary>
      <param name="horizontalAlignment"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.ShowMinutes(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showMinutes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.TimeMarkerVisibility(System.Nullable{DevExpress.XtraScheduler.TimeMarkerVisibility})">
      <summary>
        <para></para>
      </summary>
      <param name="timeMarkerVisibility"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.TimeZoneId(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="timeZoneId"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.UseClientTimeZone(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useClientTimeZone"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerBuilder.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeRulerCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeRulerCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScale15MinutesBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleBuilder`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleBuilder`1.DisplayFormat(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormat"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleBuilder`1.Enabled(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="enabled"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleBuilder`1.Visible(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="visible"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScale15Minutes">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleDay">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleDayView">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleFixedInterval">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleHour">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleMonth">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleQuarter">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleWeek">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleCollectionBuilder.AddTimeScaleYear">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleDayBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleDayViewBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleDayViewBuilder.TimeOfDayStart(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="timeOfDayStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleDayViewBuilder.Value(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleFixedIntervalBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeScaleFixedIntervalBuilder.Value(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleHourBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleMonthBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleQuarterBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleWeekBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeScaleYearBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeSlotBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeSlotBuilder.Value(System.TimeSpan)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TimeSlotCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TimeSlotCollectionBuilder.Add">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder">
      <summary>
        <para>Contains a list of the client-side events available for the TreeView.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.BeginCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client BeginCallback event.</para>
      </summary>
      <param name="beginCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.CallbackError(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client CallbackError event.</para>
      </summary>
      <param name="callbackError"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.CheckedChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code, which will handle the client <see cref="E:DevExpress.Web.Scripts.ASPxClientTreeView.CheckedChanged"/> event.</para>
      </summary>
      <param name="checkedChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.EndCallback(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s client EndCallback event.</para>
      </summary>
      <param name="endCallback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.ExpandedChanged(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client TreeView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientTreeView.ExpandedChanged"/> event.</para>
      </summary>
      <param name="expandedChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.ExpandedChanging(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client TreeView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientTreeView.ExpandedChanging"/> event.</para>
      </summary>
      <param name="expandedChanging"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a web control&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientControlBase.Init"/> client-side event.</para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewClientSideEventsBuilder.NodeClick(System.String)">
      <summary>
        <para>Sets the name of the JavaScript function or the entire code which will handle a client TreeView&#39;s <see cref="E:DevExpress.Web.Scripts.ASPxClientTreeView.NodeClick"/> event.</para>
      </summary>
      <param name="nodeClick"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TreeViewRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder">
      <summary>
        <para>Provides settings that affect the  appearance and functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder.Delay(System.Int32)">
      <summary>
        <para>Sets the delay before displaying the loading panel.</para>
      </summary>
      <param name="delay"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder.ImagePosition(DevExpress.AspNetCore.ImagePosition)">
      <summary>
        <para>Sets the position of an image displayed within a loading panel with respect to the panel&#39;s text content.</para>
      </summary>
      <param name="imagePosition"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder.Mode(DevExpress.AspNetCore.TreeViewLoadingPanelMode)">
      <summary>
        <para>Sets a value that specifies how a loading panel is displayed within the TreeView.</para>
      </summary>
      <param name="mode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder.ShowImage(System.Boolean)">
      <summary>
        <para>Sets a value that specifies whether an image defined via the <see cref="P:DevExpress.Web.ImagesBase.LoadingPanel"/> property is displayed within a loading panel.</para>
      </summary>
      <param name="showImage"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.TreeViewSettingsLoadingPanelBuilder.Text(System.String)">
      <summary>
        <para>Sets the text to be displayed within a specific loading panel invoked while waiting for a callback response.</para>
      </summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.UIElementPosition">
      <summary>
        <para>Lists values that specify the position of a UI element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.UIElementPosition.Bottom">
      <summary>
        <para>An element is positioned at the bottom of the parent element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.UIElementPosition.Left">
      <summary>
        <para>An element is positioned at the left of the parent element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.UIElementPosition.NotSet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.UIElementPosition.Right">
      <summary>
        <para>An element is positioned at the right of the parent element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.UIElementPosition.Top">
      <summary>
        <para>An element is positioned at the top of the parent element.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.DropZoneEnter(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropZoneEnter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.DropZoneLeave(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dropZoneLeave"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.FileInputCountChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fileInputCountChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.FilesUploadComplete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filesUploadComplete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.FilesUploadStart(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="filesUploadStart"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.FileUploadComplete(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="fileUploadComplete"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.Init(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="init"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.TextChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="textChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.UploadingProgressChanged(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="uploadingProgressChanged"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadControlClientSideEventsBuilder.ValidationErrorOccurred(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="validationErrorOccurred"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.UploadControlRouteCollectionBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.UploadProgressBarSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadProgressBarSettingsBuilder.DisplayFormatString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="displayFormatString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadProgressBarSettingsBuilder.DisplayMode(DevExpress.AspNetCore.ProgressBarDisplayMode)">
      <summary>
        <para></para>
      </summary>
      <param name="displayMode"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.UploadProgressBarSettingsBuilder.ShowPosition(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="showPosition"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Days(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="days"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Hours(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="hours"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Milliseconds(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="milliseconds"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Minutes(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="minutes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Months(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="months"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Quarters(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="quarters"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Seconds(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="seconds"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Weeks(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="weeks"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.Bootstrap.VisualRangeLengthSettingsBuilder.Years(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="years"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.VisualRangeUpdateMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VisualRangeUpdateMode.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VisualRangeUpdateMode.Keep">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VisualRangeUpdateMode.Reset">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VisualRangeUpdateMode.Shift">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.VizAnimationEasing">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizAnimationEasing.EaseOutCubic">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizAnimationEasing.Linear">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.VizPalette">
      <summary>
        <para>Lists values that specify a predefined DevExtreme palette.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Bright">
      <summary>
        <para>The palette is &quot;Bright&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Carmine">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.DarkMoon">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.DarkViolet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Default">
      <summary>
        <para>The default palette is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.GreenMist">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.HarmonyLight">
      <summary>
        <para>The palette is &quot;Harmony Lisght&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Material">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Ocean">
      <summary>
        <para>The palette is &quot;Ocean&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Office">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Pastel">
      <summary>
        <para>The palette is &quot;Pastel&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Soft">
      <summary>
        <para>The palette is &quot;Soft&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.SoftBlue">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.SoftPastel">
      <summary>
        <para>The palette is &quot;Soft Pastel&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Vintage">
      <summary>
        <para>The palette is &quot;Vintage&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizPalette.Violet">
      <summary>
        <para>The palette is &quot;Violet&quot;.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Bootstrap.VizTimeInterval">
      <summary>
        <para>Lists values that specify the time interval between axis ticks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Day">
      <summary>
        <para>The size of the interval between ticks is measured in days.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Hour">
      <summary>
        <para>The size of the interval between ticks is measured in hours.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Millisecond">
      <summary>
        <para>The size of the interval between ticks is measured in milliseconds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Minute">
      <summary>
        <para>The size of the interval between ticks is measured in minutes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Month">
      <summary>
        <para>The size of the interval between ticks is measured in months.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.None">
      <summary>
        <para>No specific unit of measurement is applied to the size of the interval between ticks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Quarter">
      <summary>
        <para>The size of the interval between ticks is measured in quarters of a year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Second">
      <summary>
        <para>The size of the interval between ticks is measured in seconds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Week">
      <summary>
        <para>The size of the interval between ticks is measured in weeks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Bootstrap.VizTimeInterval.Year">
      <summary>
        <para>The size of the interval between ticks is measured in years.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.BootstrapGlobalConfigurationExtensions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.BootstrapGlobalConfigurationExtensions.Bootstrap(DevExpress.AspNetCore.ApplicationOptions,System.Action{DevExpress.AspNetCore.Bootstrap.BootstrapOptions})">
      <summary>
        <para></para>
      </summary>
      <param name="settings"></param>
      <param name="setupAction"></param>
    </member>
    <member name="T:DevExpress.AspNetCore.BuilderFactoryExtensions">
      <summary>
        <para>Provides access to DevExpress Bootstrap controls for ASP.NET Core.</para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapAccordion(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates an  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Accordion settings.</param>
      <returns>A builder for an Accordion control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapAccordion(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates an  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Accordion settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for an Accordion control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapBinaryImage(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a binary image.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to image settings.</param>
      <returns>A builder for a binary image.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapBinaryImage(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a binary image with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to image settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a binary image.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapBinaryImageFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed binary image.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to an image editor&#39;s settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Binary Image For control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapButton(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Button settings.</param>
      <returns>A builder for a Button control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapButton(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Button settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Button control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapButtonEdit(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Button Edit settings.</param>
      <returns>A builder for a Button Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapButtonEdit(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with the specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Button Edit settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Button Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapButtonEditFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed Button Edit control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Button Edit settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Button Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCalendar(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Calendar settings.</param>
      <returns>A builder for a Calendar control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCalendar(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with the specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Calendar settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Calendar control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCalendarFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Calendar settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Calendar control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCardView(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Card View control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Card View settings.</param>
      <returns>A builder for a Card View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCardView(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Card View control with the specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Card View settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Card View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCardView``1(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Card View control with a specified row type.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Card View settings.</param>
      <returns>A builder for a Card View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCardView``1(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Card View control with a specified name and a row type.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Card View settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Card View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapChart(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Chart settings.</param>
      <returns>A builder for a Chart control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapChart(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Chart settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Chart control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCheckBox(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Check Box settings.</param>
      <returns>A builder for a Check Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCheckBox(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Check Box settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Check Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCheckBoxFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Check Box settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Check Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCheckBoxList(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Check Box List settings.</param>
      <returns>A builder for a Check Box List control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCheckBoxList(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Check Box List settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Check Box List control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapCheckBoxListFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Check Box List settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Check Box List control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapComboBox(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Combo Box settings.</param>
      <returns>A builder for a Combo Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapComboBox(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Combo Box settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Combo Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapComboBoxFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Combo Box settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Combo Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapDateEdit(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Date Edit settings.</param>
      <returns>A builder for a Date Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapDateEdit(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Date Edit settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Date Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapDateEditFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Date Edit settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Date Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapDropDownEdit(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Drop Down Edit control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Drop Down Edit settings.</param>
      <returns>A builder for a Drop Down Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapDropDownEdit(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Drop Down Edit control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Drop Down Edit settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Drop Down Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapDropDownEditFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed Drop Down Edit control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Drop Down Edit settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Drop Down Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapFormLayout(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Form Layout control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Form Layout settings.</param>
      <returns>A builder for a Form Layout control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapFormLayout(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Form Layout control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Form Layout settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Form Layout control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapFormLayout``1(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a strongly-typed Form Layout control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Form Layout settings.</param>
      <returns>A builder for a Form Layout control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapFormLayout``1(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a strongly-typed Form Layout control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Form Layout settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Form Layout control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapGridView(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Grid View settings.</param>
      <returns>A builder for a Grid View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapGridView(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Grid View settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Grid View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapGridView``1(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Grid View settings.</param>
      <returns>A builder for a Grid View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapGridView``1(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a strongly-typed  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Grid View settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Grid View control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapHyperLink(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Hyperlink control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Hyperlink settings.</param>
      <returns>A builder for a Hyperlink control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapHyperLink(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Hyperlink control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Hyperlink settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Hyperlink control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapListBox(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to List Box settings.</param>
      <returns>A builder for a List Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapListBox(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to List Box settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a List Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapListBoxFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to List Box settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a List Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapMemo(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Memo settings.</param>
      <returns>A builder for a Memo control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapMemo(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Memo settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Memo control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapMemoFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Memo settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Memo control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapMenu(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Menu settings.</param>
      <returns>A builder for a Menu control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapMenu(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Menu settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Menu control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPageControl(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  layout.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Page Control settings.</param>
      <returns>A builder for a Page Control layout.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPageControl(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  layout with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Page Control settings.</param>
      <param name="name">A layout name.</param>
      <returns>A builder for a Page Control layout.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPieChart(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Pie Chart control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Pie Chart settings.</param>
      <returns>A builder for a Pie Chart control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPieChart(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Pie Chart control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Pie Chart settings.</param>
      <param name="name">A chart name.</param>
      <returns>A builder for a Pie Chart control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPolarChart(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Polar Chart control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Polar Chart settings.</param>
      <returns>A builder for a Polar Chart control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPolarChart(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Polar Chart control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Polar Chart settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Polar Chart control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPopupControl(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  layout.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Popup Control settings.</param>
      <returns>A builder for a Popup Control layout.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPopupControl(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  layout with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Popup Control settings.</param>
      <param name="name">A layout name.</param>
      <returns>A builder for a Popup Control layout.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPopupMenu(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a Popup Menu control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Popup Menu settings.</param>
      <returns>A builder for a Popup Menu control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapPopupMenu(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a Popup Menu control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Popup Menu settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Popup Menu control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapProgressBar(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Progress Bar settings.</param>
      <returns>A builder for a Progress Bar control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapProgressBar(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Progress Bar settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Progress Bar control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapRadioButton(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Radio Button settings.</param>
      <returns>A builder for a Radio Button control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapRadioButton(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Radio Button settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Radio Button control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapRadioButtonFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Radio Button settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Radio Button control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapRadioButtonList(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Radio Button List settings.</param>
      <returns>A builder for a Radio Button List control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapRadioButtonList(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Radio Button List settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Radio Button List control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapRadioButtonListFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Radio Button List settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Radio Button List control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapScheduler(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Scheduler settings.</param>
      <returns>A builder for a Scheduler control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapScheduler(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Scheduler settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Scheduler control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapScheduler``1(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Scheduler settings.</param>
      <returns>A builder for a Scheduler control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapScheduler``1(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a strongly-typed  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Scheduler settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Scheduler control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapScheduler``2(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Scheduler settings.</param>
      <returns>A builder for a Scheduler control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapScheduler``2(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a strongly-typed  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Scheduler settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Scheduler control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapSparkline(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Sparkline settings.</param>
      <returns>A builder for a Sparkline control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapSparkline(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Sparkline settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Sparkline control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapSpinEdit(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Spin Edit settings.</param>
      <returns>A builder for a Spin Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapSpinEdit(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Spin Edit settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Spin Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapSpinEditFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Spin Edit settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Spin Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTabControl(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  layout.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tab Control settings.</param>
      <returns>A builder for a Tab Control layout.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTabControl(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  layout with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tab Control settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Tab Control layout.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTagBox(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tag Box settings.</param>
      <returns>A builder for a Tag Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTagBox(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tag Box settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Tag Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTagBoxFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tag Box settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Tag Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTextBox(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Text Box settings.</param>
      <returns>A builder for a Text Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTextBox(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Text Box settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Text Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTextBoxFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Text Box settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Text Box control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTimeEdit(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Time Edit settings.</param>
      <returns>A builder for a Time Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTimeEdit(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Time Edit settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Time Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTimeEditFor``2(DevExpress.AspNetCore.BuilderFactory{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <para>Creates a strongly-typed  control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Time Edit settings.</param>
      <param name="expression">An expression that identifies the object that contains the properties to display.</param>
      <returns>A builder for a Time Edit control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapToolbar(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  interface.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Toolbar settings.</param>
      <returns>A builder for a Toolbar interface.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapToolbar(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  interface with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Toolbar settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Toolbar interface.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTreeView(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates a  navigation.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tree View settings.</param>
      <returns>A builder for a Tree View navigation.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapTreeView(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates a  navigation with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Tree View settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for a Tree View navigation.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapUploadControl(DevExpress.AspNetCore.BuilderFactory)">
      <summary>
        <para>Creates an Upload control.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Upload settings.</param>
      <returns>A builder for an Upload control.</returns>
    </member>
    <member name="M:DevExpress.AspNetCore.BuilderFactoryExtensions.BootstrapUploadControl(DevExpress.AspNetCore.BuilderFactory,System.String)">
      <summary>
        <para>Creates an Upload control with a specified name.</para>
      </summary>
      <param name="builderFactory">A BuilderFactory object providing access to Upload settings.</param>
      <param name="name">A control name.</param>
      <returns>A builder for an Upload control.</returns>
    </member>
    <member name="T:DevExpress.AspNetCore.ButtonsPosition">
      <summary>
        <para>Specifies an edit button&#39;s position within a button editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ButtonsPosition.Left">
      <summary>
        <para>The button is anchored to the editor&#39;s left edge.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ButtonsPosition.Right">
      <summary>
        <para>The button is anchored to the editor&#39;s right edge.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.CardViewBatchEditMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewBatchEditMode.Card">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewBatchEditMode.Cell">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.CardViewCommandButtonType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.ApplySearchPanelFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.Cancel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.ClearSearchPanelFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.Delete">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.Edit">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.EndlessPagingShowMoreCards">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.New">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.Recover">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.Select">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.SelectCheckbox">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewCommandButtonType.Update">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.CardViewEditingMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewEditingMode.Batch">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewEditingMode.EditForm">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewEditingMode.PopupEditForm">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.CardViewEndlessPagingMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewEndlessPagingMode.OnClick">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CardViewEndlessPagingMode.OnScroll">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ClearButtonDisplayMode">
      <summary>
        <para>Lists values specifying the clear button display mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ClearButtonDisplayMode.Always">
      <summary>
        <para>The clear button is always visible.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ClearButtonDisplayMode.Auto">
      <summary>
        <para>The clear button is displayed on touch devices only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ClearButtonDisplayMode.Never">
      <summary>
        <para>The clear button is not displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ClearButtonDisplayMode.OnHover">
      <summary>
        <para>The clear button is displayed when an editor is hovered or focused.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.CloseAction">
      <summary>
        <para>Specifies which action forces a popup window to close.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CloseAction.CloseButton">
      <summary>
        <para>Specifies that a popup element is closed when clicking its close button (if any).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CloseAction.MouseOut">
      <summary>
        <para>Specifies that a popup element is closed when the mouse cursor moves out of it.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CloseAction.None">
      <summary>
        <para>Specifies that a popup element can&#39;t be closed via an end-user interaction, but can be closed programmatically via specific client script methods.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.CloseAction.OuterMouseClick">
      <summary>
        <para>Specifies that a popup element is closed when clicking a mouse button outside the popup element.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ColumnCommandButtonType">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.ApplyFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.ApplySearchPanelFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.Cancel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.ClearFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.ClearSearchPanelFilter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.CustomizationDialogApply">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.CustomizationDialogClose">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.Delete">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.Edit">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.HideAdaptiveDetail">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.New">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.Recover">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.Select">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.SelectCheckbox">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.ShowAdaptiveDetail">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnCommandButtonType.Update">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ColumnFilterMode">
      <summary>
        <para>Lists values that specify how column values are filtered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnFilterMode.DisplayText">
      <summary>
        <para>A column&#39;s data is filtered by the display text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnFilterMode.Value">
      <summary>
        <para>A column&#39;s data is filtered by the edit values.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ColumnResizeMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnResizeMode.Control">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnResizeMode.Disabled">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ColumnResizeMode.NextColumn">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.DateOnError">
      <summary>
        <para>Specifies how a date editor responds to an invalid value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DateOnError.Null">
      <summary>
        <para>An invalid date is replaced with the null value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DateOnError.Today">
      <summary>
        <para>An invalid date is replaced with the current date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DateOnError.Undo">
      <summary>
        <para>An invalid date is replaced with the previously validated date.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.DayNameFormat">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DayNameFormat.FirstLetter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DayNameFormat.FirstTwoLetters">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DayNameFormat.Full">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DayNameFormat.Short">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DayNameFormat.Shortest">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.DragElement">
      <summary>
        <para>Specifies which part of a popup window can be dragged to move the window within the page</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DragElement.Header">
      <summary>
        <para>Specifies that a popup window can be moved by dragging its header.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DragElement.Window">
      <summary>
        <para>Specifies that a popup window can be moved by clicking anywhere within its client area, holding down the mouse button and then moving the mouse cursor.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.DropDownStyle">
      <summary>
        <para>Specifies the manner in which an end user can change a combobox editor&#39;s value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DropDownStyle.DropDown">
      <summary>
        <para>End users are allowed to change the editor&#39;s edit value by either selecting an item from the dropdown list or entering new values into the edit box.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.DropDownStyle.DropDownList">
      <summary>
        <para>End users are allowed to change the editor&#39;s edit value only by selecting an item from the dropdown list.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.EditFormat">
      <summary>
        <para>Specifies possible edit formats for a date editor&#39;s value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditFormat.Custom">
      <summary>
        <para>The edited date is represented using a custom format pattern specified using the  (<see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapDateEditPropertiesBuilder.EditFormatString(System.String)"/>) method.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditFormat.Date">
      <summary>
        <para>The edited date is represented using a format pattern for a short date value (which is associated with the &#39;d&#39; format character).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditFormat.DateTime">
      <summary>
        <para>The edited date is represented using a format pattern for a short date and short time value (which is associated with the &#39;g&#39; format character).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditFormat.Time">
      <summary>
        <para>The edited date is represented using a format pattern for a short time value (which is associated with the &#39;t&#39; format character).</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.EditorRequiredMarkMode">
      <summary>
        <para>Lists values that specify the type of a mark displayed within the editor caption.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditorRequiredMarkMode.Auto">
      <summary>
        <para>If the editor <see cref="P:DevExpress.Web.RequiredFieldValidationPattern.IsRequired"/> property is set to true, the &quot;required&quot; mark is displayed after a caption.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditorRequiredMarkMode.Hidden">
      <summary>
        <para>A required mark is hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditorRequiredMarkMode.Optional">
      <summary>
        <para>The &quot;optional&quot; mark is displayed after a caption.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.EditorRequiredMarkMode.Required">
      <summary>
        <para>The &quot;required&quot; mark is displayed after a caption.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ExpandButtonPosition">
      <summary>
        <para>Lists the values that specify the position of expand buttons within groups.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ExpandButtonPosition.Default">
      <summary>
        <para>For a group, indicates that the expand button position depends upon the Accordion level&#39;s expand button position setting. For an Accordion, corresponds to the <see cref="F:DevExpress.AspNetCore.ExpandButtonPosition.Right"/> value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ExpandButtonPosition.Left">
      <summary>
        <para>The expand button is displayed at the left of a group&#39;s header.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ExpandButtonPosition.Right">
      <summary>
        <para>The expand button is displayed at the right of a group&#39;s header.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ExpandGroupAction">
      <summary>
        <para>Specifies which action forces a navbar group to expand.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ExpandGroupAction.Click">
      <summary>
        <para>Specifies that a navbar group can be expanded/collapsed by a mouse click.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ExpandGroupAction.MouseOver">
      <summary>
        <para>Specifies that a navbar group can be expanded/collapsed via mouse hover.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.FastNavigationDisplayMode">
      <summary>
        <para>Lists values that specify the display mode of the calendar&#39;s fast navigation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FastNavigationDisplayMode.Inline">
      <summary>
        <para>The fast navigation is displayed within the calendar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FastNavigationDisplayMode.Popup">
      <summary>
        <para>The fast navigation is displayed within the popup window.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.FieldRequiredMarkMode">
      <summary>
        <para>Lists values that specify the type of a mark displayed within the layout item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FieldRequiredMarkMode.Auto">
      <summary>
        <para>The item&#39;s required mark mode is selected automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FieldRequiredMarkMode.Hidden">
      <summary>
        <para>A required mark is hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FieldRequiredMarkMode.Optional">
      <summary>
        <para>Marks the current item as optional.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FieldRequiredMarkMode.Required">
      <summary>
        <para>Marks the current item as required.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.FirstDayOfWeek">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Default">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Friday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Monday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Saturday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Sunday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Thursday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Tuesday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstDayOfWeek.Wednesday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.FirstSubMenuDirection">
      <summary>
        <para>Lists the values that specify the direction in which the first sub menu is displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstSubMenuDirection.Auto">
      <summary>
        <para>The first sub-menu direction is determined automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstSubMenuDirection.LeftOrTop">
      <summary>
        <para>The first sub-menu is displayed to the left of the menu for a vertically oriented menu, and above the menu for a horizontally oriented menu.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FirstSubMenuDirection.RightOrBottom">
      <summary>
        <para>The first sub-menu is displayed to the right of the menu for a vertically oriented menu, and below the menu for a horizontally oriented menu.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.FormLayoutHorizontalAlign">
      <summary>
        <para>Contains values that specify the horizontal alignment of a layout item or layout group relative to the cell that contains it.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FormLayoutHorizontalAlign.Center">
      <summary>
        <para>The element is displayed at the center of its parent container.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FormLayoutHorizontalAlign.Left">
      <summary>
        <para>The element is displayed at the left of its parent container.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FormLayoutHorizontalAlign.NoSet">
      <summary>
        <para>Obsolete. Use the NotSet field instead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FormLayoutHorizontalAlign.NotSet">
      <summary>
        <para>The element horizontal alignment is not set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.FormLayoutHorizontalAlign.Right">
      <summary>
        <para>The element is displayed at the right of its parent container.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridBatchEditErrorImagePosition">
      <summary>
        <para>Lists the values specifying the position of the validation error image relative to the editor content in the batch edit mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridBatchEditErrorImagePosition.Left">
      <summary>
        <para>The error image is displayed to the left of the editor content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridBatchEditErrorImagePosition.Right">
      <summary>
        <para>The error image is displayed to the right of the editor content.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridColumnMoveMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridColumnMoveMode.AmongSiblings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridColumnMoveMode.ThroughHierarchy">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridCommandButtonRenderMode">
      <summary>
        <para>Specifies the render mode of command buttons in the grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridCommandButtonRenderMode.Button">
      <summary>
        <para>The command item is rendered as a button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridCommandButtonRenderMode.Default">
      <summary>
        <para>The command item render mode depends on the specified property. See the property description to learn more.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridCommandButtonRenderMode.Image">
      <summary>
        <para>The command item is rendered as an image.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridCommandButtonRenderMode.Link">
      <summary>
        <para>The command item is rendered as a link.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridConditionColorScaleFormat">
      <summary>
        <para>Lists values that specify the format (color scale) applied to cells by the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionColorScaleBuilder"/> condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.BlueWhiteRed">
      <summary>
        <para>Cells are colored based on the blue-white-red scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.Custom">
      <summary>
        <para>Cells are colored based on the scale specified by the <see cref="P:DevExpress.Web.GridFormatConditionColorScale.MaximumColor"/>, <see cref="P:DevExpress.Web.GridFormatConditionColorScale.MiddleColor"/> (optional), and <see cref="P:DevExpress.Web.GridFormatConditionColorScale.MinimumColor"/> properties.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.GreenWhite">
      <summary>
        <para>Cells are colored based on the green-white scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.GreenWhiteRed">
      <summary>
        <para>Cells are colored based on the green-white-red scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.GreenYellow">
      <summary>
        <para>Cells are colored based on the green-yellow scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.GreenYellowRed">
      <summary>
        <para>Cells are colored based on the green-yellow-red scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.RedWhite">
      <summary>
        <para>Cells are colored based on the red-white scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.RedWhiteBlue">
      <summary>
        <para>Cells are colored based on the red-white-blue scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.RedWhiteGreen">
      <summary>
        <para>Cells are colored based on the red-white-green scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.RedYellowGreen">
      <summary>
        <para>Cells are colored based on the red-yellow-green scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.WhiteGreen">
      <summary>
        <para>Cells are colored based on the white-green scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.WhiteRed">
      <summary>
        <para>Cells are colored based on the white-red scale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionColorScaleFormat.YellowGreen">
      <summary>
        <para>Cells are colored based on the yellow-green scale.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridConditionHighlightFormat">
      <summary>
        <para>Lists values that specify the format applied to cells by the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionHighlightBuilder"/> condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.BoldText">
      <summary>
        <para>A cell text is bold.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.Custom">
      <summary>
        <para>A cell formatting is specified by the CellStyle, CardStyle, RowStyle, or LayoutItemStyle property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.GreenFillWithDarkGreenText">
      <summary>
        <para>A cell background is light green, a text is dark green.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.GreenText">
      <summary>
        <para>A cell text is green.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.ItalicText">
      <summary>
        <para>A cell text is italic.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.LightGreenFill">
      <summary>
        <para>A cell background is light green.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.LightRedFill">
      <summary>
        <para>A cell background is light red.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.LightRedFillWithDarkRedText">
      <summary>
        <para>A cell background is light red, a text is dark red.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.RedText">
      <summary>
        <para>A cell text is red.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.StrikethroughText">
      <summary>
        <para>A cell text is stricken through.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionHighlightFormat.YellowFillWithDarkYellowText">
      <summary>
        <para>A cell background is yellow, a text is dark yellow.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridConditionIconSetFormat">
      <summary>
        <para>Lists values that specify the format (icon set) applied to cells by the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionIconSetBuilder"/> condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Arrows3Colored">
      <summary>
        <para>Items are ranged into 3 categories using colored arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Arrows3Gray">
      <summary>
        <para>Items are ranged into 3 categories using gray arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Arrows4Colored">
      <summary>
        <para>Items are ranged into 4 categories using colored arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Arrows4Gray">
      <summary>
        <para>Items are ranged into 4 categories using gray arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Arrows5Colored">
      <summary>
        <para>Items are ranged into 5 categories using colored arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Arrows5Gray">
      <summary>
        <para>Items are ranged into 5 categories using gray arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Boxes5">
      <summary>
        <para>Items are ranged into 5 categories using box images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Flags3">
      <summary>
        <para>Items are ranged into 3 categories using flag images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.PositiveNegativeArrowsColored">
      <summary>
        <para>Items are ranged into 2 categories (positive and negative values) using colored arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.PositiveNegativeArrowsGray">
      <summary>
        <para>Items are ranged into 2 categories (positive and negative values) using gray arrow images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.PositiveNegativeTriangles">
      <summary>
        <para>Items are ranged into 2 categories (positive and negative values) using triangle images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Quarters5">
      <summary>
        <para>Items are ranged into 5 categories using quarter images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Ratings4">
      <summary>
        <para>Items are ranged into 4 categories using rating images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Ratings5">
      <summary>
        <para>Items are ranged into 5 categories using rating images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.RedToBlack4">
      <summary>
        <para>Items are ranged into 4 categories using circle images colored from red to black.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Signs3">
      <summary>
        <para>Items are ranged into 3 categories using sign images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Stars3">
      <summary>
        <para>Items are ranged into 3 categories using star images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Symbols3Circled">
      <summary>
        <para>Items are ranged into 3 categories using circled symbol images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Symbols3Uncircled">
      <summary>
        <para>Items are ranged into 3 categories using uncircled symbol images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.TrafficLights3Rimmed">
      <summary>
        <para>Items are ranged into 3 categories using rimmed traffic light images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.TrafficLights3Unrimmed">
      <summary>
        <para>Items are ranged into 3 categories using unrimmed traffic light images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.TrafficLights4">
      <summary>
        <para>Items are ranged into 4 categories using traffic light images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridConditionIconSetFormat.Triangles3">
      <summary>
        <para>Items are ranged into 3 categories using triangle images.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridHeaderFilterListBoxSearchUIVisibility">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterListBoxSearchUIVisibility.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterListBoxSearchUIVisibility.Hidden">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterListBoxSearchUIVisibility.Visible">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridHeaderFilterMode">
      <summary>
        <para>Lists values that specify the header filter mode used in a grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterMode.CheckedList">
      <summary>
        <para>The header filter is displayed as a checked list of filter items. In this mode, an end-user can select more than one item simultaneously. When the dropdown window is closed by clicking the OK button, the grid will display those records that contain the checked values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterMode.DateRangeCalendar">
      <summary>
        <para>For date columns only. The header filter displays a calendar and a set of predefined items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterMode.DateRangePicker">
      <summary>
        <para>For date columns only. The header filter displays a date range picker and a set of predefined items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterMode.Default">
      <summary>
        <para>For date columns is equal to the DateRangePicker value, for other columns is equal to the List value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderFilterMode.List">
      <summary>
        <para>The header filter is displayed as a regular list of filter items. Clicking an item invokes a corresponding action and automatically closes the dropdown.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridHeaderLocation">
      <summary>
        <para>Specifies places where a grid header element can be rendered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderLocation.Customization">
      <summary>
        <para>The rendered header is located within the customization window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderLocation.Group">
      <summary>
        <para>The rendered header is located within the group panel.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridHeaderLocation.Row">
      <summary>
        <para>The rendered header is located within the header row.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridLines">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridLines.Both">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridLines.Horizontal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridLines.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridLines.Vertical">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridToolbarItemDisplayMode">
      <summary>
        <para>Lists values specifying the toolbar item display mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridToolbarItemDisplayMode.Image">
      <summary>
        <para>The toolbar item is rendered as an image.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridToolbarItemDisplayMode.ImageWithText">
      <summary>
        <para>The toolbar item is rendered as an image and text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridToolbarItemDisplayMode.Text">
      <summary>
        <para>The toolbar item is rendered as the text.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridToolbarPosition">
      <summary>
        <para>Lists the values specifying the toolbar position relative to the grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridToolbarPosition.Bottom">
      <summary>
        <para>The toolbar is located at the grid&#39;s bottom.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridToolbarPosition.Top">
      <summary>
        <para>The toolbar is located at the grid&#39;s top.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridTopBottomRule">
      <summary>
        <para>Lists values that specify the format condition rule applied to cells by the <see cref="T:DevExpress.AspNetCore.Bootstrap.GridViewFormatConditionTopBottomBuilder"/> condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridTopBottomRule.AboveAverage">
      <summary>
        <para>Items whose cell values are above the average value, are highlighted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridTopBottomRule.BelowAverage">
      <summary>
        <para>Items whose cell values are below the average value are highlighted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridTopBottomRule.BottomItems">
      <summary>
        <para>Bottom items (according to acceding sort order) are highlighted. The number of items is specified by the <see cref="P:DevExpress.Web.GridFormatConditionTopBottom.Threshold"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridTopBottomRule.BottomPercent">
      <summary>
        <para>Bottom items (according to acceding sort order) are highlighted. The percent of highlighted items is specified by the <see cref="P:DevExpress.Web.GridFormatConditionTopBottom.Threshold"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridTopBottomRule.TopItems">
      <summary>
        <para>Top items (according to acceding sort order) are highlighted. The number of items is specified by the <see cref="P:DevExpress.Web.GridFormatConditionTopBottom.Threshold"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridTopBottomRule.TopPercent">
      <summary>
        <para>Top items (according to acceding sort order) are highlighted. The percent of highlighted items is specified by the <see cref="P:DevExpress.Web.GridFormatConditionTopBottom.Threshold"/> property.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewAdaptiveColumnPosition">
      <summary>
        <para>Lists values that specify an adaptive column position.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewAdaptiveColumnPosition.Left">
      <summary>
        <para>The adaptive column is displayed to the left of the grid columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewAdaptiveColumnPosition.None">
      <summary>
        <para>The adaptive column is not displayed in the grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewAdaptiveColumnPosition.Right">
      <summary>
        <para>The adaptive column is displayed to the right of the grid columns.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewAdaptivityMode">
      <summary>
        <para>Lists values that specify the grid layout adaptivity mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewAdaptivityMode.HideDataCells">
      <summary>
        <para>The grid hides columns once cell text becomes truncated. This could be possible in two cases.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewAdaptivityMode.HideDataCellsWindowLimit">
      <summary>
        <para>The grid automatically changes its layout when the browser window inner width is less than or equal to the value specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewAdaptivitySettingsBuilderBase`1.HideDataCellsAtWindowInnerWidth(System.Int32)"/> method.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewAdaptivityMode.Off">
      <summary>
        <para>The adaptivity mode is disabled.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewBatchEditMode">
      <summary>
        <para>Lists values that specify which control element is switched to edit mode (used to edit the grid data) in batch edit mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewBatchEditMode.Cell">
      <summary>
        <para>A data cell is switched to edit mode in batch edit mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewBatchEditMode.Row">
      <summary>
        <para>A data row is switched to edit mode in batch edit mode.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewBatchStartEditAction">
      <summary>
        <para>Lists values that specify which action is used to begin editing grid data in batch edit mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewBatchStartEditAction.Click">
      <summary>
        <para>Batch editing starts by clicking a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewBatchStartEditAction.DblClick">
      <summary>
        <para>Batch editing starts by double clicking a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewBatchStartEditAction.FocusedCellClick">
      <summary>
        <para>Batch editing starts by clicking a focused cell.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewCustomButtonVisibility">
      <summary>
        <para>Lists values that specify in which rows a custom button is displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewCustomButtonVisibility.AllDataRows">
      <summary>
        <para>A custom button is displayed within all data rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewCustomButtonVisibility.BrowsableRow">
      <summary>
        <para>A custom button is displayed within data rows whose values are not edited.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewCustomButtonVisibility.EditableRow">
      <summary>
        <para>A custom button is displayed within a data row currently being edited.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewCustomButtonVisibility.FilterRow">
      <summary>
        <para>A custom button is displayed within the .</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewCustomButtonVisibility.Invisible">
      <summary>
        <para>A custom button is hidden.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewDetailExportMode">
      <summary>
        <para>Lists values that specify which detail rows can be exported.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewDetailExportMode.All">
      <summary>
        <para>All master and detail rows are exported regardless of their expanded state.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewDetailExportMode.Expanded">
      <summary>
        <para>Only expanded details are exported.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewDetailExportMode.None">
      <summary>
        <para>Details are not exported.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewEditingMode">
      <summary>
        <para>Lists values that specify the GridView&#39;s editing mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewEditingMode.Batch">
      <summary>
        <para>Cell values are edited in the in-line editors. The changes are sent to the server only on an update (&#39;Save changes&#39;) button click.Note - the Batch Edit mode has limitations. To learn more, see the  topic.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewEditingMode.EditForm">
      <summary>
        <para>Cell values are edited via the . The data row whose values are currently being edited isn&#39;t displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewEditingMode.EditFormAndDisplayRow">
      <summary>
        <para>Cell values are edited via the . The data row whose values are currently being edited is displayed above the Edit Form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewEditingMode.Inline">
      <summary>
        <para>Cell values are edited within the .</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewEditingMode.PopupEditForm">
      <summary>
        <para>Cell values are edited via the .</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewFilterRowMode">
      <summary>
        <para>Lists values that specify filter row behavior.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewFilterRowMode.Auto">
      <summary>
        <para>Criteria specified in the filter row is applied automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewFilterRowMode.OnClick">
      <summary>
        <para>Criteria specified in the filter row is applied on an &#39;Apply&#39; button click.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewGroupFooterMode">
      <summary>
        <para>Lists values that specify when the GridView displays group footers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewGroupFooterMode.Hidden">
      <summary>
        <para>Group footers are hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewGroupFooterMode.VisibleAlways">
      <summary>
        <para>Group footers are always displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewGroupFooterMode.VisibleIfExpanded">
      <summary>
        <para>Group footers are displayed only for expanded group rows.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewLoadingPanelMode">
      <summary>
        <para>Lists values that specify how a loading panel is displayed in a grid control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewLoadingPanelMode.Default">
      <summary>
        <para>A  is displayed above the GridView while waiting for a callback response. If endless paging is enabled, the panel is displayed below the control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewLoadingPanelMode.Disabled">
      <summary>
        <para>A  isn&#39;t displayed while waiting for a callback response.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewLoadingPanelMode.ShowAsPopup">
      <summary>
        <para>A  is displayed above the GridView while waiting for a callback response.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewLoadingPanelMode.ShowOnStatusBar">
      <summary>
        <para>A  is displayed on the GridView&#39;s Status Bar while waiting for a callback response.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewMergeGroupsMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewMergeGroupsMode.Always">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewMergeGroupsMode.Disabled">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewNewItemRowPosition">
      <summary>
        <para>Lists values that specify the position of the new item row within the GridView.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewNewItemRowPosition.Bottom">
      <summary>
        <para>The new item row is displayed below data rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewNewItemRowPosition.Top">
      <summary>
        <para>The new item row is displayed above data rows.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewPagerBarPosition">
      <summary>
        <para>Lists values that specify the pager&#39;s position within grid-like controls.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewPagerBarPosition.Bottom">
      <summary>
        <para>The pager is positioned at the bottom of the grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewPagerBarPosition.Top">
      <summary>
        <para>The pager is positioned at the top of the grid.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewPagerMode">
      <summary>
        <para>Lists values that specify the navigation in the grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewPagerMode.EndlessPaging">
      <summary>
        <para>The endless paging is enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewPagerMode.ShowAllRecords">
      <summary>
        <para>Disables page-mode navigation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewPagerMode.ShowPager">
      <summary>
        <para>The GridView automatically splits content (rows) across multiple pages and provides end-users with an embedded page navigation UI - . The maximum number of rows displayed on a page is specified using the <see cref="M:DevExpress.AspNetCore.Bootstrap.BootstrapGridViewPagerSettingsBuilder.PageSize(System.Int32)"/> method.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewSearchPanelGroupOperator">
      <summary>
        <para>Lists the values that specify the group operator types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSearchPanelGroupOperator.And">
      <summary>
        <para>The AND logical operator is used to combine conditions (multiple words separated by space characters).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSearchPanelGroupOperator.Or">
      <summary>
        <para>The OR logical operator is used to combine conditions (multiple words separated by space characters).</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewSelectAllCheckBoxMode">
      <summary>
        <para>Lists values that specify the Select All check box visibility and selection mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSelectAllCheckBoxMode.AllPages">
      <summary>
        <para>The Select All check box selects and deselects all grid rows (on all grid pages).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSelectAllCheckBoxMode.None">
      <summary>
        <para>The Select All check box is not displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSelectAllCheckBoxMode.Page">
      <summary>
        <para>The Select All check box selects and deselects all rows on the current grid page.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewSelectionStoringMode">
      <summary>
        <para>Lists the values that specify how GridView stores keys of the selected rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSelectionStoringMode.DataIntegrityOptimized">
      <summary>
        <para>The GridView always stores the keys of all selected rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewSelectionStoringMode.PerformanceOptimized">
      <summary>
        <para>The GridView tries to store the keys in the fastest way. When a user selects a several rows, the grid saves the selected keys. However, when a user selects all rows, the grid begins to add only unselected row keys.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewStatusBarMode">
      <summary>
        <para>Lists values that specify the visibility of the status bar and filter bar elements in the GridView and CardView controls.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewStatusBarMode.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewStatusBarMode.Hidden">
      <summary>
        <para>An element isn&#39;t shown within the grid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewStatusBarMode.Visible">
      <summary>
        <para>An element is always displayed at the bottom of the grid.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.GridViewVerticalScrollBarStyle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewVerticalScrollBarStyle.Standard">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewVerticalScrollBarStyle.Virtual">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.GridViewVerticalScrollBarStyle.VirtualSmooth">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.HelpTextDisplayMode">
      <summary>
        <para>Lists the values that specify how to display a help text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HelpTextDisplayMode.Inline">
      <summary>
        <para>The help text is constantly displayed at its location.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HelpTextDisplayMode.Popup">
      <summary>
        <para>The help text is dynamically displayed when the corresponding control is focused.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.HelpTextHorizontalAlign">
      <summary>
        <para>Specifies the help text horizontal alignment.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HelpTextHorizontalAlign.Auto">
      <summary>
        <para>The help text is automatically aligned within its parent container.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HelpTextHorizontalAlign.Center">
      <summary>
        <para>The element is displayed at the center of its parent container.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HelpTextHorizontalAlign.Left">
      <summary>
        <para>The element is displayed at the left of its parent container.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HelpTextHorizontalAlign.Right">
      <summary>
        <para>The element is displayed at the right of its parent container.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.HorizontalAlign">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HorizontalAlign.Center">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HorizontalAlign.Justify">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HorizontalAlign.Left">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HorizontalAlign.NotSet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.HorizontalAlign.Right">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ICustomJSPropertiesEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.AspNetCore.ICustomJSPropertiesEventArgs.Properties">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.AspNetCore.IDevExpressControlAccessor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.CardView(Microsoft.AspNetCore.Mvc.RazorPages.PageModel,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageModel"></param>
      <param name="controlName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.CardView(System.String,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="viewName"></param>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.CardViewAsync(Microsoft.AspNetCore.Mvc.RazorPages.PageModel,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageModel"></param>
      <param name="controlName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.CardViewAsync(System.String,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="viewName"></param>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.GridView(Microsoft.AspNetCore.Mvc.RazorPages.PageModel,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageModel"></param>
      <param name="controlName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.GridView(System.String,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="viewName"></param>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.GridViewAsync(Microsoft.AspNetCore.Mvc.RazorPages.PageModel,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageModel"></param>
      <param name="controlName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.GridViewAsync(System.String,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="viewName"></param>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.Scheduler(Microsoft.AspNetCore.Mvc.RazorPages.PageModel,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageModel"></param>
      <param name="controlName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.Scheduler(System.String,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="viewName"></param>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.SchedulerAsync(Microsoft.AspNetCore.Mvc.RazorPages.PageModel,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="pageModel"></param>
      <param name="controlName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.AspNetCore.IDevExpressControlAccessor.SchedulerAsync(System.String,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="viewName"></param>
      <param name="model"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.IEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ImageAlign">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.AbsBottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.AbsMiddle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.Baseline">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.Bottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.Left">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.Middle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.NotSet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.Right">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.TextTop">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageAlign.Top">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ImagePosition">
      <summary>
        <para>Lists values that specify the image position within an element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImagePosition.Bottom">
      <summary>
        <para>An image is displayed at the element&#39;s bottom, below the text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImagePosition.Left">
      <summary>
        <para>An image is displayed at the element&#39;s left, to the left of the text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImagePosition.Right">
      <summary>
        <para>An image is displayed at the element&#39;s right, to the right of the text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImagePosition.Top">
      <summary>
        <para>An image is displayed at the element&#39;s top, above the text.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ImageSizeMode">
      <summary>
        <para>Lists the values that specify how an image fits into the image area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageSizeMode.ActualSizeOrFit">
      <summary>
        <para>If an image is bigger than the image area the image is reduced to fit the area. If an image is smaller than the image area, its size is not changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageSizeMode.FillAndCrop">
      <summary>
        <para>An image is enlarged or reduced to fill the image area. Prominent parts are cropped.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ImageSizeMode.FitProportional">
      <summary>
        <para>An image is enlarged or reduced to fit the image area.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.IncrementalFilteringMode">
      <summary>
        <para>Specifies whether the editor is filtered for list items that contain or start with the typed search string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.IncrementalFilteringMode.Contains">
      <summary>
        <para>The editor is filtered for list items that contain the typed search string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.IncrementalFilteringMode.None">
      <summary>
        <para>Filtering is not applied to the editor&#39;s list items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.IncrementalFilteringMode.StartsWith">
      <summary>
        <para>The editor is filtered for list items that begin with the typed search string.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.InlineFastNavigationZoomLevel">
      <summary>
        <para>Lists values that specify the size of a date range displayed within the calendar&#39;s fast navigation area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.InlineFastNavigationZoomLevel.Century">
      <summary>
        <para>A user can select a date within a current century.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.InlineFastNavigationZoomLevel.Decade">
      <summary>
        <para>A user can select a date within a current decade.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.InlineFastNavigationZoomLevel.Month">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.InlineFastNavigationZoomLevel.Year">
      <summary>
        <para>A user can select a date within a current year.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ListEditSelectionMode">
      <summary>
        <para>Lists the values that specify the selection behavior for a list editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ListEditSelectionMode.CheckColumn">
      <summary>
        <para>Multiple items can be selected within the editor by clicking specific check boxes or list items (the Shift key can also be used in this mode to select a range of items).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ListEditSelectionMode.Multiple">
      <summary>
        <para>Multiple items can be selected within the editor by clicking list items while pressing Ctrl (to add an individual item) or Shift (to select a range of items).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ListEditSelectionMode.Single">
      <summary>
        <para>Only one list box item can be selected at once.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.LoadContentViaCallback">
      <summary>
        <para>Lists values specifying the content loading mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.LoadContentViaCallback.None">
      <summary>
        <para>Specifies that the content is always (initially) rendered inside popup windows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.LoadContentViaCallback.OnFirstShow">
      <summary>
        <para>Specifies that loading of popup window contents starts when a popup window is invoked for the first time.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.LoadContentViaCallback.OnPageLoad">
      <summary>
        <para>Specifies that loading of the popup window contents starts immediately after the entire page has been loaded.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.MaskIncludeLiteralsMode">
      <summary>
        <para>Specifies which literal characters of the mask are included in an editor&#39;s value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.MaskIncludeLiteralsMode.All">
      <summary>
        <para>All literals are included in an editor&#39;s value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.MaskIncludeLiteralsMode.DecimalSymbol">
      <summary>
        <para>Only decimal symbol literals are included in an editor&#39;s value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.MaskIncludeLiteralsMode.None">
      <summary>
        <para>Literals are not included in an editor&#39;s value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.NullTextDisplayMode">
      <summary>
        <para>Lists values that specify the null text mode used in editors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.NullTextDisplayMode.Unfocused">
      <summary>
        <para>The null text is displayed when the editor is unfocused.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.NullTextDisplayMode.UnfocusedAndFocused">
      <summary>
        <para>The null text is always displayed in the editor (when the editor is focused or unfocused).</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.Orientation">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Orientation.Horizontal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.Orientation.Vertical">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PagerButtonPosition">
      <summary>
        <para>Lists values that specify the position of the summary text within a pager.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerButtonPosition.Inside">
      <summary>
        <para>The summary is displayed inside a pager&#39;s contents.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerButtonPosition.Left">
      <summary>
        <para>The summary is displayed to the left of a pager&#39;s contents.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerButtonPosition.Right">
      <summary>
        <para>The summary is displayed to the right of a pager&#39;s contents.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PagerEllipsisMode">
      <summary>
        <para>Lists values that specify how an Ellipsis symbol(s) is drawn to indicate page numbers that are omitted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerEllipsisMode.InsideNumeric">
      <summary>
        <para>An Ellipsis symbol(s) is shown inside the range of pages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerEllipsisMode.None">
      <summary>
        <para>An Ellipsis symbol isn&#39;t shown.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerEllipsisMode.OutsideNumeric">
      <summary>
        <para>An Ellipsis symbol(s) is shown outside the range of pages.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PagerPageSizePosition">
      <summary>
        <para>Specifies the position of the page size item within a pager.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerPageSizePosition.Left">
      <summary>
        <para>The page size item element is displayed on the left side of the pager.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerPageSizePosition.Right">
      <summary>
        <para>The page size item element is displayed on the right side of the pager.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PagerPosition">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerPosition.Bottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerPosition.Top">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PagerPosition.TopAndBottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupAction">
      <summary>
        <para>Specifies which action forces a popup element to appear.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAction.LeftMouseClick">
      <summary>
        <para>Specifies that a popup element is invoked at a left mouse button click within the corresponding linked web control or HTML element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAction.MouseOver">
      <summary>
        <para>Specifies that a popup element is invoked when the mouse cursor hovers over the corresponding linked web control or HTML element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAction.None">
      <summary>
        <para>Specifies that a popup element can&#39;t be invoked via an end-user interaction, but can be invoked programmatically via specific client script methods.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAction.RightMouseClick">
      <summary>
        <para>Specifies that a popup element is invoked on a right mouse button click within the corresponding linked web control or HTML element.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign">
      <summary>
        <para>Specifies the horizontal alignment of the popup control in adaptive mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign.WindowCenter">
      <summary>
        <para>The popup window in adaptive mode is displayed so that it is horizontally aligned at the center of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign.WindowLeft">
      <summary>
        <para>The popup window in adaptive mode is displayed on the left of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAdaptiveHorizontalAlign.WindowRight">
      <summary>
        <para>The popup window in adaptive mode is displayed on the right of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupAdaptiveVerticalAlign">
      <summary>
        <para>Specifies the vertical alignment of the popup control in adaptive mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAdaptiveVerticalAlign.WindowBottom">
      <summary>
        <para>The popup window in adaptive mode is displayed at the bottom of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAdaptiveVerticalAlign.WindowCenter">
      <summary>
        <para>The popup window in adaptive mode is displayed so that it is vertically aligned at the center of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAdaptiveVerticalAlign.WindowTop">
      <summary>
        <para>The popup window in adaptive mode is displayed at the top of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupAlignCorrection">
      <summary>
        <para>Lists values that specify the availability of popup element correction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAlignCorrection.Auto">
      <summary>
        <para>Correction of the popup window position is enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupAlignCorrection.Disabled">
      <summary>
        <para>Correction of the popup window position is disabled.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupControlAdaptivityMode">
      <summary>
        <para>List values that specify the PopupControl&#39;s adaptivity mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupControlAdaptivityMode.Always">
      <summary>
        <para>Adaptivity mode is always enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupControlAdaptivityMode.Off">
      <summary>
        <para>Adaptivity mode is not used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupControlAdaptivityMode.OnWindowInnerWidth">
      <summary>
        <para>Adaptive mode is enabled when the browser window inner width is less than or equal to the value specified by the <see cref="P:DevExpress.Web.PopupControlAdaptivitySettings.SwitchAtWindowInnerWidth"/></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupHorizontalAlign">
      <summary>
        <para>Specifies a popup element&#39;s horizontal alignment.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.Center">
      <summary>
        <para>A popup element is displayed so that the x-coordinate of the popup element&#39;s center equals the x-coordinate of the corresponding HTML element&#39;s center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.LeftSides">
      <summary>
        <para>A popup element is displayed so that its left border&#39;s x-coordinate equals the x-coordinate of the corresponding HTML element&#39;s left border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.NotSet">
      <summary>
        <para>A popup element is displayed on the x-coordinate of the mouse cursor position.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.OutsideLeft">
      <summary>
        <para>A popup element is displayed to the left of the corresponding HTML element, so that the x-coordinate of the popup element&#39;s right border is equal to the x-coordinate of the HTML element&#39;s left border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.OutsideRight">
      <summary>
        <para>A popup element is displayed to the right of the corresponding HTML element so that the x-coordinate of the popup element&#39;s left border is equal to the x-coordinate of the HTML element&#39;s right border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.RightSides">
      <summary>
        <para>A popup element is displayed so that the x-coordinate of the popup element&#39;s right border equals the x-coordinate of the corresponding HTML element&#39;s right border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupHorizontalAlign.WindowCenter">
      <summary>
        <para>A popup element is displayed so that it is horizontally aligned at the center of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupMenuCloseAction">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupMenuCloseAction.MouseOut">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupMenuCloseAction.OuterMouseClick">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.PopupVerticalAlign">
      <summary>
        <para>Specifies a popup element&#39;s vertical alignment.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.Above">
      <summary>
        <para>A popup element is displayed above the corresponding HTML element so that the y-coordinate of the popup element&#39;s bottom border is equal to the y-coordinate of the HTML element&#39;s top border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.Below">
      <summary>
        <para>A popup element is displayed below the corresponding HTML element so that the y-coordinate of the popup element&#39;s top border equals the y-coordinate of the HTML element&#39;s bottom border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.BottomSides">
      <summary>
        <para>A popup element is displayed so that the y-coordinate of the popup element&#39;s bottom border equals the y-coordinate of the corresponding HTML element&#39;s bottom border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.Middle">
      <summary>
        <para>A popup element is displayed so that the y-coordinate of the popup element&#39;s center equals the y-coordinate of the corresponding HTML element&#39;s center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.NotSet">
      <summary>
        <para>A popup element is displayed on the y-coordinate of the mouse cursor position.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.TopSides">
      <summary>
        <para>A popup element is displayed so that the y-coordinate of the popup element&#39;s top border equals the y-coordinate of the corresponding HTML element&#39;s top border.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.PopupVerticalAlign.WindowCenter">
      <summary>
        <para>A popup element is displayed so that it is vertically aligned at the center of the browser&#39;s window.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ProgressBarDisplayMode">
      <summary>
        <para>Lists values specifying the position display mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ProgressBarDisplayMode.Custom">
      <summary>
        <para>The progress bar displays a custom text, which is formatted using a pattern specified using the  method.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ProgressBarDisplayMode.Percentage">
      <summary>
        <para>A percentage value representing the ratio of a Progress Bar&#39;s current position value with respect to the Maximum and Minimum values is displayed within the progress bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ProgressBarDisplayMode.Position">
      <summary>
        <para>The current position value (specified using the  method) is displayed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.RepeatDirection">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RepeatDirection.Horizontal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RepeatDirection.Vertical">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.RequiredMarkMode">
      <summary>
        <para>Lists values that specify the type of a marks that should be displayed within the FormLayout control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RequiredMarkMode.All">
      <summary>
        <para>The required and optional marks are displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RequiredMarkMode.Auto">
      <summary>
        <para>A required mark position is automatically defined, depending on the control settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RequiredMarkMode.None">
      <summary>
        <para>All the required and optional marks are hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RequiredMarkMode.OptionalOnly">
      <summary>
        <para>Only the optional marks are displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.RequiredMarkMode.RequiredOnly">
      <summary>
        <para>Only the required marks are displayed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ResizingMode">
      <summary>
        <para>Specifies how an element visually responds to resizing operations.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ResizingMode.Live">
      <summary>
        <para>An element is redrawn dynamically during the resizing operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ResizingMode.Postponed">
      <summary>
        <para>An element is redrawn after the resizing operation is finished.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ScrollBarMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBarMode.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBarMode.Hidden">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBarMode.Visible">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ScrollBars">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBars.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBars.Both">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBars.Horizontal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBars.None">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ScrollBars.Vertical">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.ShowDropDownOnFocusMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ShowDropDownOnFocusMode.Always">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ShowDropDownOnFocusMode.Auto">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.ShowDropDownOnFocusMode.Never">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.SpinEditNumberFormat">
      <summary>
        <para>Specifies possible display formats for a spin editor&#39;s value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SpinEditNumberFormat.Currency">
      <summary>
        <para>The displayed number is represented using a format pattern for a currency value (which is associated with the &#39;c&#39; format character).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SpinEditNumberFormat.Custom">
      <summary>
        <para>The displayed number is represented using a custom format pattern specified via the <see cref="P:DevExpress.Web.SpinEditProperties.DisplayFormatString"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SpinEditNumberFormat.Number">
      <summary>
        <para>The displayed number is represented using a general format pattern for a number value (which is associated with the &#39;g&#39; format character).</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SpinEditNumberFormat.Percent">
      <summary>
        <para>The displayed number is represented using a format pattern for a percentage value (which is associated with the &#39;{0}%&#39; custom format string).</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.SpinEditNumberType">
      <summary>
        <para>Specifies possible editing modes of the SpinEdit control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SpinEditNumberType.Float">
      <summary>
        <para>Float value input is enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SpinEditNumberType.Integer">
      <summary>
        <para>Float value input is disabled and float values displayed within the editor are automatically rounded after they has been modified.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.StyleSheetSettingsExtensions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.AspNetCore.StyleSheetSettingsExtensions.AddBootstrap(DevExpress.AspNetCore.StyleSheetSettings)">
      <summary>
        <para></para>
      </summary>
      <param name="settings"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.AspNetCore.SyncSelectionMode">
      <summary>
        <para>Contains values that specify how automatic synchronization of item selection with the path of the currently browsed page should be performed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SyncSelectionMode.CurrentPath">
      <summary>
        <para>A web control&#39;s item, whose NavigateUrl property&#39;s value points to the URL of the currently browsed page, is displayed selected. The query string appended to the URL is ignored.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SyncSelectionMode.CurrentPathAndQuery">
      <summary>
        <para>A web control&#39;s item, whose NavigateUrl property&#39;s value matches the URL and query string of the currently browsed page, is displayed selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.SyncSelectionMode.None">
      <summary>
        <para>Automatic selection synchronization is disabled.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.TabAlign">
      <summary>
        <para>Specifies the alignment of tabs along the control&#39;s side.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TabAlign.Center">
      <summary>
        <para>Tabs are centered along the specified side of a tab control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TabAlign.Justify">
      <summary>
        <para>Tabs are uniformly spread out and aligned with both left and right margins along the specified side of a tab control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TabAlign.Left">
      <summary>
        <para>Tabs are left justified along the specified side of a tab control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TabAlign.Right">
      <summary>
        <para>Tabs are right justified along the specified side of a tab control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.TreeViewLoadingPanelMode">
      <summary>
        <para>Lists values that specify how a loading panel is displayed within the TreeView.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TreeViewLoadingPanelMode.Disabled">
      <summary>
        <para>A loading panel isn&#39;t displayed while waiting for a callback response.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TreeViewLoadingPanelMode.ShowAsPopup">
      <summary>
        <para>A loading panel is displayed at the center of the TreeView, while waiting for a callback response.</para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.TreeViewLoadingPanelMode.ShowNearNode">
      <summary>
        <para>A loading panel is displayed near the expanding node (in place of the expand button), while waiting for a callback response.</para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.UploadControlFileListPosition">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.UploadControlFileListPosition.Bottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.UploadControlFileListPosition.Top">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.AspNetCore.VerticalAlign">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.VerticalAlign.Bottom">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.VerticalAlign.Middle">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.VerticalAlign.NotSet">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.AspNetCore.VerticalAlign.Top">
      <summary>
        <para></para>
      </summary>
    </member>
  </members>
</doc>